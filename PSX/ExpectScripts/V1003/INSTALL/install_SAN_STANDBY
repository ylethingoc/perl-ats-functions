#!/usr/bin/expect

#exp_internal -f  expect.log 0
set systemTime [clock seconds]
set time [clock format $systemTime -format %a_%b_%d_%Y_%H_%M_%S]
append newfile "Logs//sanStandbyInstall_1__3_${time}.log"

log_file -noappend "$newfile";

set send_slow {1 0.02}

set standbyip [lindex $argv 0]
set standbyIlomIp [lindex $argv 1]
set mpath [lindex $argv 2]

set timeout 20

spawn bash -c "ssh-keygen -f ~/.ssh/known_hosts -R $standbyip"

spawn bash -c "scp  -o StrictHostKeyChecking=no ~/ats_repos/lib/perl/SonusQA/PSX/ExpectScripts/V1003/INSTALL/SANHA1003 root@$standbyip:/export/home/ssuser/SOFTSWITCH/BIN"

expect -re ".*password:"
send -s "sonus\r"

sleep 10

spawn ssh -o ServerAliveInterval=60  -o StrictHostKeyChecking=no Administrator@$standbyIlomIp;

expect -re ".*password:"
send -s "Sonus!@#\r"

sleep 5

expect "</>hpiLO->"

sleep 5

send -s "textcons\r"

sleep 5

expect {

    timeout { send_user "textcons not launched\n"; exit 0 }

    -re ".*Press.*Esc.*to return to the CLI Session"

    }

expect {

      timeout { send_user "Login screen not found\n"; send -s "exit\r"; exp_continue }

      -re "login:"

      }

set timeout 10

send -s "root\r"

sleep 5

expect -re ".*Password:"

send -s "sonus\r"

sleep 5

expect -re ".*]#"

sleep 5

expect -re ".*]#"

send -s "echo net.ipv4.conf.all.rp_filter = 2 >> /etc/sysctl.conf\r"

sleep 5


send -s "sysctl -p\r"

expect -re ".*]#"

if {[string match "1" $mpath]} {

    send -s "sed -i \'s/Mpath =.*/Mpath = 1/g\' /opt/sonus/platform/ConfigSan/multipathFlag.conf\r"

    sleep 5

    expect -re ".*]#"

    send -s "sed -i \'s/SANIP =.*/SANIP =10.54.225.203, 10.54.225.205/g\' /opt/sonus/platform/ConfigSan/multipathFlag.conf\r"

 }

if {[string match "0" $mpath]} {

    send -s "sed -i \'s/Mpath =.*/Mpath = 0/g\' /opt/sonus/platform/ConfigSan/multipathFlag.conf\r"

    sleep 5

    expect -re ".*]#"

    send -s "sed -i \'s/SANIP =.*/SANIP =10.54.225.203/g\' /opt/sonus/platform/ConfigSan/multipathFlag.conf\r"

 }

sleep 5

expect -re ".*]#"

send -s "sed -i \'s/InitiatorName=.*/InitiatorName=iqn.1994-05.com.redhat:f56a8a7eba33/g\' /etc/iscsi/initiatorname.iscsi\r"

sleep 5

expect -re ".*]#"

send -s "reboot --r\r"

set timeout 600

expect {

      timeout { send_user "Login screen not found\n"; }

      -re "login:"

      }

set timeout 10

send -s "root\r"

sleep 5

expect -re ".*Password:"

send -s "sonus\r"

sleep 5


send -s "cd /export/home/ssuser/SOFTSWITCH/BIN\r"

expect  -re ".*]#"

sleep 10

set timeout 2400

send -s "./configureHA.pl -inputfile SANHA1003\r"

sleep 10

expect {

     timeout { send_user "Pattern not found - Please enter to continue,number to change prompt value,0 to exit\n"; exit 0 }

	-re "Please enter to continue,number to change prompt value,0 to exit:.*"  { sleep 10; send -s "\r" }
        
    }

sleep 10

set timeout 3600

expect {

        timeout { send_user "Pattern not found - Do you want to change the password for ssuser\n" }

        -re "Do you want to change the password for ssuser" {send -s "N\r"; sleep 5 }

      }

set timeout 60

expect {

        timeout { send_user "Pattern not found - Do you want to change the password for oracle\n" }

        -re "Do you want to change the password for oracle" {send -s "N\r"; sleep 5 }

      }

sleep 10

expect {

        timeout { send_user "Pattern not found - Do you want to change the password for root\n" }

        -re "Do you want to change the password for root" {send -s "N\r"; sleep 5 }

      }

sleep 10

expect {

        timeout { send_user "Pattern not found - Do you want to change the password for admin\n" }

        -re "Do you want to change the password for admin" {send -s "N\r"; sleep 5 }

      }

sleep 10

set timeout 3600

expect {

      timeout { send_user "Login screen not found\n" }

      -re "login:"

      }

set timeout 10

send -s "root\r"

sleep 5

expect -re ".*Password:"

send -s "sonus\r"

sleep 5

expect -re ".*]#"

send -s "tail -f /export/home/ssuser/SOFTSWITCH/BIN/configureHA.pl.logstandby\r"

sleep 600

expect {

     timeout { send_user "Pattern not found - HA configuration for standby completed\n";sleep 10;send -s "\x03"; exit 0 }

    -re ".*HA configuration for standby completed.*" {sleep 10;send -s "\x03"}


      }


exit 1
