#!/usr/bin/env perl
#
# File automatically generated by 'camBuilder.pl', do not edit!
#


$recordTable{START}[1][0][1] = "Record Type";
$recordTable{START}[2][0][1] = "Gateway Name";
$recordTable{START}[3][0][1] = "Accounting ID";
$recordTable{START}[4][0][1] = "Start Time (system ticks)";
$recordTable{START}[5][0][1] = "Node Time Zone";
$recordTable{START}[6][0][1] = "Start Time (MM/DD/YYYY)";
$recordTable{START}[7][0][1] = "Start Time (HH/MM/SS.s)";
$recordTable{START}[8][0][1] = "Ticks from Setup Msg to Policy Response";
$recordTable{START}[9][0][1] = "Ticks from Setup Msg to Alert/Proc/Prog";
$recordTable{START}[10][0][1] = "Ticks from Setup Msg to Service Est";
$recordTable{START}[11][0][1] = "Service Delivered";
$recordTable{START}[12][0][1] = "Call Direction";
$recordTable{START}[13][0][1] = "Service Provider";
$recordTable{START}[14][0][1] = "Transit Network Selection Code (TNS)";
$recordTable{START}[15][0][1] = "Calling Number";
$recordTable{START}[16][0][1] = "Called Number";
$recordTable{START}[17][0][1] = "Extra Called Address Digits";
$recordTable{START}[18][0][1] = "Number of Called Num Translations";
$recordTable{START}[19][0][1] = "Called Number Before Translation #1";
$recordTable{START}[20][0][1] = "Translation Type #1";
$recordTable{START}[21][0][1] = "Called Number Before Translation #2";
$recordTable{START}[22][0][1] = "Translation Type #2";
$recordTable{START}[23][0][1] = "Billing Number";
$recordTable{START}[24][0][1] = "Route Label";
$recordTable{START}[25][0][1] = "Route Attempt Number";
$recordTable{START}[26][0][1] = "Route Selected";
$recordTable{START}[27][0][1] = "Egress Local Signaling IP Address";
$recordTable{START}[28][0][1] = "Egress Remote Signaling IP Address";
$recordTable{START}[29][0][1] = "Ingress Trunk Group Name";
$recordTable{START}[30][0][1] = "Ingress PSTN Circuit End Point";
$recordTable{START}[31][0][1] = "Ingress IP Circuit End Point";
$recordTable{START}[32][0][1] = "Egress PSTN Circuit End Point";
$recordTable{START}[33][0][1] = "Egress IP Circuit End Point";
$recordTable{START}[34][0][1] = "Originating Line Information (OLIP)";
$recordTable{START}[35][0][1] = "Jurisdiction Information Parameter (JIP)";
$recordTable{START}[36][0][1] = "Carrier Code";
$recordTable{START}[37][0][1] = "Call Group ID";
$recordTable{START}[38][0][1] = "Ticks from Setup Msg to Rx of EXM";
$recordTable{START}[39][0][1] = "Ticks from Setup Msg to Generation of EXM";
$recordTable{START}[40][0][1] = "Calling Party Nature of Address";
$recordTable{START}[41][0][1] = "Called Party Nature of Address";
$recordTable{START}[42][0][1] = "Ingress Protocol Variant Specific Data";
$recordTable{START}[43][0][1] = "Ingress Signaling Type";
$recordTable{START}[44][0][1] = "Egress Signaling Type";
$recordTable{START}[45][0][1] = "Ingress Far End Switch Type";
$recordTable{START}[46][0][1] = "Egress Far End Switch Type";
$recordTable{START}[47][0][1] = "Carrier Code of Carrier who Owns iTG Far End";
$recordTable{START}[48][0][1] = "Carrier Code of Carrier who Owns eTG Far End";
$recordTable{START}[49][0][1] = "Calling Party Category";
$recordTable{START}[50][0][1] = "Dialed Number";
$recordTable{START}[51][0][1] = "Carrier Selection Information";
$recordTable{START}[52][0][1] = "Called Number Numbering Plan";
$recordTable{START}[53][0][1] = "Generic Address Parameter";
$recordTable{START}[54][0][1] = "Egress Trunk Group Name";
$recordTable{START}[55][0][1] = "Egress Protocol Variant Specific Data";
$recordTable{START}[56][0][1] = "Incoming Calling Number";
$recordTable{START}[57][0][1] = "AMA Call Type";
$recordTable{START}[58][0][1] = "Message Billing Indicator (MBI)";
$recordTable{START}[59][0][1] = "LATA";
$recordTable{START}[60][0][1] = "Route Index Used";
$recordTable{START}[61][0][1] = "Calling Party Presentation Restriction";
$recordTable{START}[62][0][1] = "Incoming ISUP Charge Number";
$recordTable{START}[63][0][1] = "Incoming ISUP Nature Of Address";
$recordTable{START}[64][0][1] = "Dialed Number Nature of Address";
$recordTable{START}[65][0][1] = "Global Call ID (GCID)";
$recordTable{START}[66][0][1] = "Charge Flag";
$recordTable{START}[67][0][1] = "AMA slp ID";
$recordTable{START}[68][0][1] = "AMA BAF Module";
$recordTable{START}[69][0][1] = "AMA Set Hex AB Indication";
$recordTable{START}[70][0][1] = "Service Feature ID";
$recordTable{START}[71][0][1] = "FE Parameter";
$recordTable{START}[72][0][1] = "Satellite Indicator";
$recordTable{START}[73][0][1] = "PSX Billing Info";
$recordTable{START}[74][0][1] = "Originating TDM Trunk Group Type";
$recordTable{START}[75][0][1] = "Terminating TDM Trunk Group Type";
$recordTable{START}[76][0][1] = "Ingress Trunk Member Number";
$recordTable{START}[77][0][1] = "Egress Trunk Group ID";
$recordTable{START}[78][0][1] = "Egress Switch ID";
$recordTable{START}[79][0][1] = "Ingress Local ATM Address";
$recordTable{START}[80][0][1] = "Ingress Remote ATM Address";
$recordTable{START}[81][0][1] = "Egress Local ATM Address";
$recordTable{START}[82][0][1] = "Egress Remote ATM Address";
$recordTable{START}[83][0][1] = "PSX Call Type";
$recordTable{START}[84][0][1] = "Outgoing Route Trunk Group ID";
$recordTable{START}[85][0][1] = "Outgoing Route Message ID";
$recordTable{START}[86][0][1] = "Incoming Route ID";
$recordTable{START}[87][0][1] = "Calling Name";
$recordTable{START}[88][0][1] = "Calling Name Type";
$recordTable{START}[89][0][1] = "Incoming Calling Party Numbering Plan";
$recordTable{START}[90][0][1] = "Outgoing Calling Party Numbering Plan";
$recordTable{START}[91][0][1] = "Calling Party Business Group ID";
$recordTable{START}[92][0][1] = "Called Party Business Group ID";
$recordTable{START}[93][0][1] = "Calling Party PPDN";
$recordTable{START}[94][0][1] = "Ticks from Setup Msg to Last Route Attempt";
$recordTable{START}[95][0][1] = "Billing Number Nature of Address";
$recordTable{START}[96][0][1] = "Incoming Calling Number Nature of Address";
$recordTable{START}[97][0][1] = "Egress Trunk Member Number";
$recordTable{START}[98][0][1] = "Selected Route Type";
$recordTable{START}[99][0][1] = "Cumulative Route Index";
$recordTable{START}[100][0][1] = "ISDN PRI Calling Party Subaddress";
$recordTable{START}[101][0][1] = "Outgoing Trunk Group Number in EXM";
$recordTable{START}[102][0][1] = "Ingress Local Signaling IP Address";
$recordTable{START}[103][0][1] = "Ingress Remote Signaling IP Address";
$recordTable{START}[104][0][1] = "Record Sequence Number";
$recordTable{START}[105][0][1] = "Transmission Medium Requirement";
$recordTable{START}[106][0][1] = "Information Transfer Rate";
$recordTable{START}[107][0][1] = "USI User Info Layer 1";
$recordTable{START}[108][0][1] = "Unrecognized Raw ISUP Calling Party Category";
$recordTable{START}[109][0][1] = "FSD: Egress Release Link Trunking";
$recordTable{START}[110][0][1] = "FSD: Two B-Channel Transfer";
$recordTable{START}[111][0][1] = "Calling Party Business Unit";
$recordTable{START}[112][0][1] = "Called Party Business Unit";
$recordTable{START}[113][0][1] = "FSD: Redirecting";
$recordTable{START}[114][0][1] = "FSD: Ingress Release Link Trunking";
$recordTable{START}[115][0][1] = "PSX ID";
$recordTable{START}[116][0][1] = "PSX Congestion Level";
$recordTable{START}[117][0][1] = "PSX Processing Time (milliseconds)";
$recordTable{START}[118][0][1] = "Script Name";
$recordTable{START}[119][0][1] = "Ingress External Accounting Data";
$recordTable{START}[120][0][1] = "Egress External Accounting Data";
$recordTable{START}[121][0][1] = "Answer Supervision Type";
$recordTable{START}[122][0][1] = "Ingress Sip Refer or Sip Replaces Feature Specific Data";
$recordTable{START}[123][0][1] = "Egress Sip Refer or Sip Replaces Feature Specific Data";
$recordTable{START}[124][0][1] = "Network Transfers Feature Specific Data";
$recordTable{START}[125][0][1] = "Call Condition";
$recordTable{START}[126][0][1] = "Toll Indicator";
$recordTable{START}[127][0][1] = "Generic Number ( Number )";
$recordTable{START}[128][0][1] = "Generic Number Presentation Restriction Indicator";
$recordTable{START}[129][0][1] = "Generic Number Numbering Plan";
$recordTable{START}[130][0][1] = "Generic Number Nature of Address";
$recordTable{START}[131][0][1] = "Generic Number Type";
$recordTable{START}[132][0][1] = "Originating Trunk Type";
$recordTable{START}[133][0][1] = "Terminating Trunk Type";
$recordTable{START}[134][0][1] = "VPN Calling Public Presence Number";
$recordTable{START}[135][0][1] = "VPN Calling Private Presence Number";
$recordTable{START}[136][0][1] = "External Furnish Charging Info";
$recordTable{START}[137][0][1] = "Announcement Id";
$recordTable{START}[138][0][1] = "Network Data - Source Information";
$recordTable{START}[139][0][1] = "Network Data - Partition ID";
$recordTable{START}[140][0][1] = "Network Data - Network ID";
$recordTable{START}[141][0][1] = "Network Data - NCOS";
$recordTable{START}[142][0][1] = "ISDN access Indicator";
$recordTable{START}[143][0][1] = "Network Call Reference - Call Identity";
$recordTable{START}[144][0][1] = "Network Call Reference - Signaling Point Code";
$recordTable{START}[145][0][1] = "Ingress MIME Protocol Variant Specific Data";
$recordTable{START}[146][0][1] = "Egress MIME Protocol Variant Specific Data";
$recordTable{START}[147][0][1] = "Video Data - Video Bandwidth, Video Call Duration,Ingress/Egress IP video Endpoint";
$recordTable{START}[148][0][1] = "SVS Customer";
$recordTable{START}[149][0][1] = "SVS Vendor - Deprecated in 7.2.2 as part of Pcr1624";
$recordTable{START}[150][0][1] = "Remote GSX Billing Indicator (PCR1216 - GSX 6.4 for KDDI special V3)";
$recordTable{START}[151][0][1] = "Call To Test PSX";
$recordTable{START}[152][0][1] = "Psx Overlap Route Requests";
$recordTable{START}[153][0][1] = "Call Setup Delay";
$recordTable{START}[153][1][1] = "Request Latency (msec)";
$recordTable{START}[153][2][1] = "Downstream Latency (msec)";
$recordTable{START}[153][3][1] = "Response Latency (msec)";
$recordTable{START}[153][4][1] = "Upstream Latency (msec)";
$recordTable{START}[154][0][1] = "Overload Status";
$recordTable{START}[155][0][1] = "reserved";
$recordTable{START}[156][0][1] = "reserved";
$recordTable{START}[157][0][1] = "MLPP Precedence Level";
$recordTable{START}[158][0][1] = "reserved";
$recordTable{START}[159][0][1] = "reserved";
$recordTable{START}[160][0][1] = "reserved";
$recordTable{START}[161][0][1] = "reserved";
$recordTable{START}[162][0][1] = "reserved";
$recordTable{START}[163][0][1] = "reserved";
$recordTable{START}[164][0][1] = "reserved";
$recordTable{START}[165][0][1] = "reserved";
$recordTable{START}[166][0][1] = "Global Charge Reference";
$recordTable{START}[167][0][1] = "reserved for IP Call Limit at ingress SIP Peer";
$recordTable{START}[168][0][1] = "reserved for IP Call Limit at ingress IPTG";
$recordTable{START}[169][0][1] = "reserved for IP BW Limit at ingress IPTG";
$recordTable{START}[170][0][1] = "reserved for IP Call Limit at egress SIP Peer";
$recordTable{START}[171][0][1] = "reserved for IP Call Limit at egress IPTG";
$recordTable{START}[172][0][1] = "reserved for IP BW Limit at egress IPTG";
$recordTable{START}[173][0][1] = "reserved for PSX Name";
$recordTable{START}[174][0][1] = "reserved for No of PSX tried";
$recordTable{START}[175][0][1] = "reserved for Final route label";
$recordTable{START}[176][0][1] = "MTA Information";
$recordTable{START}[176][1][1] = "Origination Primary";
$recordTable{START}[176][2][1] = "Origination Secondary";
$recordTable{START}[176][3][1] = "Destination Primary";
$recordTable{START}[176][4][1] = "Destination Secondary";
$recordTable{START}[177][0][1] = "Access Network Charging Information";
$recordTable{START}[178][0][1] = "Access Transfer Specific Data";
$recordTable{START}[178][1][1] = "Feature ID";
$recordTable{START}[178][2][1] = "Transfer Type";
$recordTable{START}[178][3][1] = "Source access GCID";
$recordTable{START}[178][4][1] = "Traget access GCID";
$recordTable{START}[178][5][1] = "Original Calling Number";
$recordTable{START}[178][6][1] = "Original Called Number";
$recordTable{START}[179][0][1] = "Emergency Indicator";
$recordTable{START}[180][0][1] = "UE Roaming Status";
$recordTable{START}[181][0][1] = "Ingress Zone Name";
$recordTable{START}[182][0][1] = "Egress Zone Name";
$recordTable{START}[183][0][1] = "Ingress Zone Id";
$recordTable{START}[184][0][1] = "Egress Zone Id";
$recordTable{START}[185][0][1] = "Ingress IpPrefix TgName";
$recordTable{START}[186][0][1] = "Parent Call GCID";
$recordTable{START}[187][0][1] = "Signaling Only Mode";
$recordTable{START}[188][0][1] = "Call Established Time";
$recordTable{START}[1][0][2] = "\"START\"";
$recordTable{START}[2][0][2] = "Gateway Name [String Up To 27 Characters]";
$recordTable{START}[3][0][2] = "Accounting ID (64 Bit in HEX format]";
$recordTable{START}[4][0][2] = "Start Time in System Ticks - Timestamp of when Setup Request was received. [Decimal number from 0 to 4294967295]";
$recordTable{START}[5][0][2] = "Node Time Zone [String up to 26 Characters long]";
$recordTable{START}[6][0][2] = "Start Time (mm/dd/yyyy) - Timestamp of when Setup Request was received. (in GMT) [eg : 02/06/1999]";
$recordTable{START}[7][0][2] = "Start Time (hh:mm:ss.s) (GMT) [eg : 12:20:38.5]";
$recordTable{START}[8][0][2] = "Time Elapsed from Receipt of Setup Message to Policy Server/Sonus Softswitch Response in 10 ms Ticks [Decimal number from 0 to 4294967295]";
$recordTable{START}[9][0][2] = "Time Elapsed from Receipt of Setup Message to Receipt of Alerting/Proc/Prog in 10ms Ticks. [Decimal number from 0 to 4294967295]";
$recordTable{START}[10][0][2] = "Time Elapsed from Receipt of Setup Message to Service Est (Receipt of Answer and Completion of Cut-through) in 10ms Ticks. [Decimal number from 0 to 4294967295]";
$recordTable{START}[11][0][2] = "Service Delivered (VoIP/Circuit Switched Voice/VTOA) [String Up To 22 Characters]";
$recordTable{START}[12][0][2] = "Call Direction (PSTN-TO-IP/PSTN-TO-PSTN/IP-TO-PSTN/PSTN-TO-TERM/IP-TO-TERM/TERM-TO-IP/TERM-TO-PSTN/PSTN-TO-VTOA/VTOA-TO-PSTN/IP-TO-IP) [String up to 12 characters ]";
$recordTable{START}[13][0][2] = "Service Provider [String up to 23 characters]";
$recordTable{START}[14][0][2] = "Transit Network Selection Code [ String up to 4 characters, for e.g 0288]";
$recordTable{START}[15][0][2] = "Calling Number [String up to 30 characters]";
$recordTable{START}[16][0][2] = "Called Number [String up to 30 characters]";
$recordTable{START}[17][0][2] = "Extra Called Address Digits [String up to 30 characters, not used in routing the call, received via Overlap Address Messages such as SAM]";
$recordTable{START}[18][0][2] = "Number of Called Num Translations done by this Node [Decimal number from 0 to 2]";
$recordTable{START}[19][0][2] = "Called Number Before Trans #1 [String up to 30 characters]";
$recordTable{START}[20][0][2] = "Translation Type - 1 (0-None, 1-LNP, 2-TollFree, 3-Private, 4-Reserved)";
$recordTable{START}[21][0][2] = "Called Number Before Trans #2 [String up to 30 characters]";
$recordTable{START}[22][0][2] = "Translation Type - 2 (0-None, 1-LNP, 2-TollFree, 3-Private, 4-Reserved)";
$recordTable{START}[23][0][2] = "Billing Number [String up to 30 characters]";
$recordTable{START}[24][0][2] = "Route Label [String up to 23 characters]";
$recordTable{START}[25][0][2] = "Route Attempt Number [1 to 10]";
$recordTable{START}[26][0][2] = "Route Selected (GwInfo:TG Name) [string up to 51 characters] If the Gateway name is known, then GwInfo is the Gateway Name [string up to 27 characters] Else, GwInfo is the Gateway IP Address [ASCII IP address in dotted decimal format e.g 10.1.1.1, up to 15 Characters] TG Name is Trunk Group Name [string up to 23 characters]";
$recordTable{START}[27][0][2] = "Egress Local Signaling IP Address (Applicable only for PSTN-IP and IP-IP calls) [ASCII IPv4 address in dotted decimal format e.g 10.1.1.1 or IPv6 address in hexadecimal format e.g 3ffe:1900:4545:3:200:f8ff:fe21:67cf, up to 39 Characters]";
$recordTable{START}[28][0][2] = "Egress Remote Signaling IP Address (Applicable only for PSTN-IP and IP-IP calls) [ASCII IPv4 address in dotted decimal format e.g 10.1.1.1 or IPv6 address in hexadecimal format e.g 3ffe:1900:4545:3:200:f8ff:fe21:67cf, up to 39 Characters]";
$recordTable{START}[29][0][2] = "Ingress Trunk Group Name [string up to 23 chars]";
$recordTable{START}[30][0][2] = "Ingress PSTN Circuit End Point (Shelf [1-6]:Slot[1-16]:Port[1-28]:Ds0[1-32]: Cic[1-65535]:Local Point Code[32 Bit HEX format]:Remote Point Code[32 Bit HEX format] ) (Applicable only for PSTN-IP and PSTN-PSTN Calls)		 ";
$recordTable{START}[31][0][2] = "Ingress IP Circuit End Point (Local IP Address:Port/Remote IP Address :Port) [IPv4 address in dotted decimal format,e.g 10.1.1.1 or IPv6 address in hexadecimal format e.g 3ffe:1900:4545:3:200:f8ff:fe21:67cf, up to 39 Characters] [Port Number - 0 to 65535] (Applicable only for IP-PSTN and IP-IP Calls)";
$recordTable{START}[32][0][2] = "Egress PSTN Circuit End Point (Shelf [1-6]:Slot[1-16]:Port[1-28]:Ds0[1-32]: Cic[1-65535]:Local Point Code[32 Bit HEX format]:Remote Point Code[32 Bit HEX format] ) (Applicable only for IP-PSTN and PSTN-PSTN Calls)";
$recordTable{START}[33][0][2] = "Egress IP Circuit End Point (Local IP Address:Port/Remote IP Address:Port) [IPv4 address in dotted decimal format,e.g 10.1.1.1 or IPv6 address in hexadecimal format e.g 3ffe:1900:4545:3:200:f8ff:fe21:67cf, up to 39 Characters] [Port Number - 0 to 65535] (Applicable only for PSTN-IP and IP-IP Calls)";
$recordTable{START}[34][0][2] = "Originating Line Information (OLIP), a.k.a info digits [Decimal Value. Values match ANSI T1.113 (ANSI ISUP) See Table at the end for OLIP values ]";
$recordTable{START}[35][0][2] = "Jurisdiction Information Parameter [JIP] [string up to 15 characters]";
$recordTable{START}[36][0][2] = "Carrier Code [ String up to 5 characters, for e.g 0288]";
$recordTable{START}[37][0][2] = "Call Group ID (32 bit in HEX format, i.e 8 digits)";
$recordTable{START}[38][0][2] = "Time Elapsed from Receipt of Setup Message to Receipt of Exit Message (EXM) in 10ms Ticks. [Decimal number from 0 to 4294967295]";
$recordTable{START}[39][0][2] = "Time Elapsed from Receipt of Setup Message to Generation of Exit Message (EXM) in 10ms Ticks. [Decimal number from 0 to 4294967295]";
$recordTable{START}[40][0][2] = "Calling Party Nature of Address. [Decimal Value. See Nature of Address Enumeration Table at end for values]";
$recordTable{START}[41][0][2] = "Called Party Nature of Address. [Decimal Value. See Nature of Address Enumeration Table at end for values]";
$recordTable{START}[42][0][2] = "Ingress Protocol Variant Specific Data [String with double quote delimiters, i.e. \"JAPAN,0,0,...0x00\" length is up to 377 characters, including delimiters] Accounting data which is specific to the ingress signaling protocol. See tables at end for detailed information.";
$recordTable{START}[43][0][2] = "Ingress Signaling Type [Decimal Value. See Signaling Type Enumeration Table at the end for values]";
$recordTable{START}[44][0][2] = "Egress Signaling Type [Decimal Value. See Signaling Type Enumeration Table at the end for values]";
$recordTable{START}[45][0][2] = "Ingress Far End Switch Type [Decimal Value. See Far End Switch Type Table at the end for values]";
$recordTable{START}[46][0][2] = "Egress Far End Switch Type [Decimal Value. See Far End Switch Type Table at the end for values]";
$recordTable{START}[47][0][2] = "Carrier Code of the Carrier that owns the Ingress Trunk Group [String up to 5 characters]";
$recordTable{START}[48][0][2] = "Carrier Code of the Carrier that owns the Egress Trunk Group [String up to 5 characters]";
$recordTable{START}[49][0][2] = "Calling Party Category [Hex Value. See Calling Party Category Table at end for values]";
$recordTable{START}[50][0][2] = "Dialed Number - Actual dialed number received by the Sonus Gateway before any digit manipulation was performed by the Softswitch. [String up to 30 characters]";
$recordTable{START}[51][0][2] = "Carrier Selection Information [Decimal Value. See Table at end for values]";
$recordTable{START}[52][0][2] = "Called Number Numbering Plan [Decimal Value. See Table at end for values]";
$recordTable{START}[53][0][2] = "Generic Address Parameter - The original called number if LNP was performed by a switch preceding the GSX. [String up to 30 characters]";
$recordTable{START}[54][0][2] = "Egress Trunk Group Name [string up to 23 chars]";
$recordTable{START}[55][0][2] = "Egress Protocol Variant Specific Data [String with double quote delimiters, i.e. \"JAPAN,0,0,...0x00\" length is up to 377 characters, including delimiters] Accounting data which is specific to the egress signaling protocol. See tables at end for detailed information.";
$recordTable{START}[56][0][2] = "Incoming Calling Number - This field represents the calling number presented to the GSX prior to any digit manipulation or translation by the PSX. It is the Calling Number in the Incoming Signaling Message (IAM/SETUP) to the GSX translation. [string up to 30 characters] (For NTT Japan this may be the Calling User Number from \"End of Information Transfer\" parameter.)	 ";
$recordTable{START}[57][0][2] = "AMA Call Type (a.k.a. AMA Call Code) [Decimal number from 000 to 999, leading zeros are displayed]";
$recordTable{START}[58][0][2] = "Message Billing Indicator (MBI) [Decimal number from 000 to 999, leading zeros are displayed]";
$recordTable{START}[59][0][2] = "Originating LATA [String up to 3 characters] Represents the Originating Local Access and Transport Area (LATA).";
$recordTable{START}[60][0][2] = "Route Index Used [Decimal value from 1 to 10] Signifies which route in the Policy Response was used for this call. If no routes were successful, then this field will be empty (\"\"). The Policy Response can only hold up to 10 routes, so 10 is the maximum value for this field.";
$recordTable{START}[61][0][2] = "Calling Party Number Presentation Restriction [Decimal value. See table at end for values]";
$recordTable{START}[62][0][2] = "Incoming ISUP Charge Number [String up to 30 characters] This is the billing number provided in the IAM prior to any Softswitch manipulation or translation. Only applicable for SS7 calls.";
$recordTable{START}[63][0][2] = "Incoming ISUP Charge Number Nature of Address [Decimal Value. See Nature of Address Enumeration Table at end for values] This is the billing number NOA provided in the IAM prior to any Softswitch manipulation or translation. Only applicable for SS7 calls.";
$recordTable{START}[64][0][2] = "Dialed Number Nature Of Address [Decimal Value. See Nature of Address Enumeration Table at end for values]";
$recordTable{START}[65][0][2] = "GSX Call ID (a.k.a. GCID) [32 Bits in Hex format, eg 0x01234567] This is the GSX's internally assigned Global Call ID (GCID).";
$recordTable{START}[66][0][2] = "Charge Flag [0-None, 1-No Charge, 2-Charge, 3-Spare, 4-No Indication]";
$recordTable{START}[67][0][2] = "AMA Service Logic ID (AMAslpID) [String up to 9 characters] This field records an identification of the service logic in the SCP that was used. The value is contained in an AMAslpID parameter received from the SCP.";
$recordTable{START}[68][0][2] = "AMA BAF Module [String up to 256 characters] This field records a variety of billing information. The first 3 characters specify a Module Code. This code specifies which BAF table should be used to interpret the remaining characters. Refer to GR-1100-CORE, Section 5.7 BAF Module List for details.";
$recordTable{START}[69][0][2] = "AMA Set Hex AB Indicator [Boolean. 0=FALSE, 1=TRUE] If TRUE, then the AMA BAF Module contains a known or suspected error.";
$recordTable{START}[70][0][2] = "Service Feature ID [Decimal number from 000 to 999] This field indicates a customer's originating or terminating line characteristics.";
$recordTable{START}[71][0][2] = "FE Parameter [8 or 10 byte hex value] Source: Backwards call indicator. Contains the optional FE parameter which is part of the backwards call control messages ACM, CPG, ANM and Gateway-to-Gateway Signalling. See table at end for detailed description.";
$recordTable{START}[72][0][2] = "Satellite Indicator [0=No Satellite, 1=Satellite] Source: Nature of Connection Indicator. Indicates whether or not a satellite trunk was used.";
$recordTable{START}[73][0][2] = "PSX Billing Information [Hex value up to 255 bytes] Use *+h 60 Route Index Used to match the PSX Billing Information See table at end for definitions.";
$recordTable{START}[74][0][2] = "Originating TDM Trunk Group Type [Decimal value, range 0 to 255] See table at end for definitions.";
$recordTable{START}[75][0][2] = "Terminating TDM Trunk Group Type [Decimal value, range 0 to 255] See table at end for definitions.";
$recordTable{START}[76][0][2] = "Ingress Trunk Member Number [Decimal value, range 0 to 65535] This field identifies the selected DS0 within a trunk group.";
$recordTable{START}[77][0][2] = "Egress Trunk Group ID [Decimal value, range 0 to 4095] Egress trunk group ID on the egress GSX. The value of this field will be different than the one received in the FE parameter if the final switch is not the same as the egress GSX.";
$recordTable{START}[78][0][2] = "Egress Switch ID [Decimal value, range 0 to 1023] Egress switch ID on the egress GSX. The value of this field will be different than the one received in the FE parameter if the final switch is not the same as the egress GSX.";
$recordTable{START}[79][0][2] = "Active Call Ingress Local ATM Address (Applicable only for ATM Calls) [ string up to 42 characters, see ATM Address format at end ] The ATM address of the local physical port attached to the ATM network on the ingress leg of the call.";
$recordTable{START}[80][0][2] = "Active Call Ingress Remote ATM Address (Applicable only for ATM Calls) [ string up to 42 characters, see ATM Address format at end ] The ATM address of the remote physical port attached to the ATM network on the ingress leg of the call.";
$recordTable{START}[81][0][2] = "Active Call Egress Local ATM Address (Applicable only for ATM Calls) [ string up to 42 characters, see ATM Address format at end ] The ATM address of the local physical port attached to the ATM network on the egress leg of the call.";
$recordTable{START}[82][0][2] = "Active Call Egress Remote ATM Address (Applicable only for ATM Calls) [ string up to 42 characters, see ATM Address format at end ] The ATM address of the remote physical port attached to the ATM network on the egress leg of the call.";
$recordTable{START}[83][0][2] = "Policy Response Call Type [Decimal value from 0 to 62]";
$recordTable{START}[84][0][2] = "Outgoing Route Identification - [Decimal value from 0 to 65535] This field represents the Outgoing Trunk Group Number for call that overflows from one gateway to another via a Singapore Inter-Gateway Circuit (IGC) trunk. This value is extracted from the ISUP Address Complete Message's (ACM) optional \"Outgoing Route Identification (ORI)\" parameter. Only internetworking calls will have this field populated.";
$recordTable{START}[85][0][2] = "Outgoing Message Identification - (0-National Route, 1-Transit Route, 2-Terminating Route, 3-Spare) This field represents what type of route taken. See OMI section at end for population information.";
$recordTable{START}[86][0][2] = "Incoming Route Identification - [Decimal value from 0 to 65535] This field represents incoming source (incoming trunk group number). It is used to determine whether the source is from domestic or international network. The GSX extracts this value from the ISUP IAM's optional \"Incoming Route Identification (INRI)\" parameter. This optional parameter is specific to Singapore deployments. If INRI is not present, then this field will be blank.";
$recordTable{START}[87][0][2] = "Calling Name [String up to 24 characters with string delimiters \"\" ] Represents the name of the calling party.";
$recordTable{START}[88][0][2] = "Calling Name Type (0-Invalid, 1-Spare, 2-Calling Name, 3-Original Calling Name, 4-Redirect Name, 5-Connected Name)";
$recordTable{START}[89][0][2] = "Incoming Calling Party Numbering Plan [Decimal Value. See Table at end for values] This field represents the Calling Party Numbering Plan received in the incoming setup message. For ISUP calls this value is contained in the optional Calling Party Number parameter in the Initial Address Message (IAM). For SIP calls, this value is contained in the FROM, TO, REQUEST URI, CONTACT and DIVERSION headers.";
$recordTable{START}[90][0][2] = "Outgoing Calling Party Numbering Plan [Decimal Value. See Table at end for values] This field represents the Calling Party Numbering Plan sent by the GSX in outgoing messages. The PSX determines this value during the route process. The outgoing plan is either equal to the incoming plan or the plan provisioned against the ingress trunk group.";
$recordTable{START}[91][0][2] = "Calling Party Business Group ID [Decimal value from 0 to 4294967295, If data is not present or unknown, then a one \"1\" (Public Business Group) will be logged] This value represents the Business Group ID of the calling party. The GSX receives this value in the SIP INCOMING INVITE message. Currently SIP is the only protocol which supports Business Group IDs. For all other protocols (ISUP, H323, etc.) this field will be logged as \"1\".";
$recordTable{START}[92][0][2] = "Called Party Business Group ID [Decimal value from 0 to 4294967295, If data is not present or unknown, then a one \"1\" (Public Business Group) will be logged] This value represents the Business Group ID of the called party. The GSX receives this value in the SIP INCOMING INVITE message. This value is then sent to the PSX in the Policy Request message. As part of the routing process the PSX may modify this value and return it in the Policy Response. The GSX logs the value supplied by the PSX, not the value received in the INVITE message. In release 4.1, SIP is the only protocol which supports Business Group IDs. For all other protocols (ISUP, H323, etc.) this field will be logged as \"1\".";
$recordTable{START}[93][0][2] = "Calling Party Public Presence Directory Number [String up to 30 characters] The Calling Party Public Presence Directory Number (PPDN) is an optional SIP parameter which is propagated as the calling number when a call goes into the Public PSTN. If the SIP Invite message's Remote Party ID header contains id-context=ppdn, then the Remote Party ID will be interpreted and logged as the Calling PPDN. If the id-context is not PPDN or if the ingress protocol is not SIP, then this field will be left blank (\"\").";
$recordTable{START}[94][0][2] = "Elapsed Time from Receipt of Setup Message to Last Call Routing Attempt in 10ms Ticks. [Decimal number from 0 to 4294967295]";
$recordTable{START}[95][0][2] = "Billing Number NOA [Decimal Value. See Nature of Address Enumeration Table at end for values] This field is the Nature of Address Indicator sent in outgoing Charge Number parameters. The PSX sets this value to either the Incoming Charge Number NOA or to the Billing Number NOA provisioned against the ingress Trunk Group.";
$recordTable{START}[96][0][2] = "Incoming Calling Number NOA [Decimal Value. See Nature of Address Enumeration Table at end for values] This field is the Nature of Address Indicator received in the incoming setup message.";
$recordTable{START}[97][0][2] = "Egress Trunk Group Member Number [Decimal value, range 0 to 65535] This field uniquely identifies the DS0 circuit used for this call in the egress Trunk Group. If the Trunk Member for the egress trunk group is not configured, then this field will be left blank (\"\"). Trunk Member can only be configured for ISDN, ISUP and CAS trunks. For Gateway to Gateway calls, both the originating and terminating gateways will log the terminating gateway's Egress Trunk Group Member Number.";
$recordTable{START}[98][0][2] = "Selected Route Type [Decimal value. See Route Type Enumeration Table at end for values]";
$recordTable{START}[99][0][2] = "Cumulative Route Index - [Decimal value from 1 to 65535] Signifies which route in the Rotue Label (*+h 60) was used for this call. Starting with Release 5.0, the Route Label may contain more than 10 routes. If no routes were successful, then this field will be empty (\"\"). If the first Policy Responsed contain a successful route, then this field will equal Route Index Used (*+h 60).";
$recordTable{START}[100][0][2] = "Calling Party Subaddress [String up to 30 characters] This field identifies the subaddress associated with the origin of an ISDN PRI call.";
$recordTable{START}[101][0][2] = "Outgoing Trunk Group Number in EXM [String up to 6 characters] Outgoing TGN is an optional parameter contained in the Exit Message (EXM). If an EXM was received and it contained an Outgoing TGN, then this field will be populated with the TGN. If an EXM was generated, then the Outgoing TGN will be populated from the service group profile. Otherwise this field will be left blank.";
$recordTable{START}[102][0][2] = "Ingress Local Signaling IP Address (Applicable only for IP-PSTN and IP-IP calls) [ASCII IPv4 address in dotted decimal format e.g 10.1.1.1 or IPv6 address in hexadecimal format e.g 3ffe:1900:4545:3:200:f8ff:fe21:67cf, up to 39 Characters]";
$recordTable{START}[103][0][2] = "Ingress Remote Signaling IP Address (Applicable only for IP-PSTN and IP-IP calls) [ASCII IPv4 address in dotted decimal format e.g 10.1.1.1 or IPv6 address in hexadecimal format e.g 3ffe:1900:4545:3:200:f8ff:fe21:67cf, up to 39 Characterss]";
$recordTable{START}[104][0][2] = "Record Sequence Number [Decimal value from 0 to 4294967295]";
$recordTable{START}[105][0][2] = "Transmission Medium Requirement [Decimal Value, range 0 to 255, or empty] See TRANSMISSION MEDIUM REQUEST table at end for description and values.";
$recordTable{START}[106][0][2] = "Information Transfer Rate [Decimal Value, range 0 to 31, or empty] See INFORMATION TRANSFER RATE table at end for description and values.";
$recordTable{START}[107][0][2] = "USI User Info Layer 1 [Decimal Value, range 0 to 31, or empty] See USI USER INFO LAYER 1 table at end for description and values.";
$recordTable{START}[108][0][2] = "Unrecognized Raw ISUP Calling Party Category [Decimal value from 0 to 255] If the GSX does not recognize the recevied calling party category, then the actual (raw) value received will be logged in this field. Otherwise, this field will be empty (\"\").";
$recordTable{START}[109][0][2] = "Egress Release Link Trunking (RLT) Feature Specific Data (FSD) [See RLT Table at end for values]";
$recordTable{START}[110][0][2] = "Two B-Channel Transfer (TBCT) Feature Specific Data (FSD) [See TBCT Table at end for values]";
$recordTable{START}[111][0][2] = "Calling Party Business Unit [Decimal value from 0 to 4294967295, or empty] Repesents the calling party Business Unit (aka Sub-Group ID) and is supplied by the PSX in the Policy Response. If business unit data is not available for the call, then this field will be empty.";
$recordTable{START}[112][0][2] = "Called Party Business Unit [Decimal value from 0 to 4294967295, or empty] Repesents the called party Business Unit (aka Sub-Group ID) and is supplied by the PSX in the Policy Response. If business unit data is not available for the call, then this field will be empty.";
$recordTable{START}[113][0][2] = "Redirecting Feature Specific Data (FSD) [See REDI Table at end for values]";
$recordTable{START}[114][0][2] = "Ingress Release Link Trunking (RLT) Feature Specific Data (FSD) [See RLT Table at end for values]";
$recordTable{START}[115][0][2] = "PSX Index ( decimal value from 0 to 10 )";
$recordTable{START}[116][0][2] = "PSX Congestion Level ( decimal value from 0 to 3. 0=Clear, 1=Low, 2=Medium, 3=High, empty=CongestionControlDisabled )";
$recordTable{START}[117][0][2] = "PSX Processing Time ( decimal value from 0 to 2^16 -1 in milliseconds )";
$recordTable{START}[118][0][2] = "Script Name (String up to 23 characters) Name of the Sonus CPL script last executed for this call. If no script is executed, then this field will be empty (\"\").";
$recordTable{START}[119][0][2] = "Ingress External Accounting Data ( String upto 150 characters )";
$recordTable{START}[120][0][2] = "Egress External Accounting Data ( String upto 150 characters )";
$recordTable{START}[121][0][2] = "Call Supervision Type ( enum CPC_CALL_SUPERVISION_TYPE_ENUM. 0=Disabled, 1=HW Answer, 2=SW Answer )";
$recordTable{START}[122][0][2] = "Ingress SIP Feature Specific Data (FSD) [See SREF/SREPL Table at end for values]";
$recordTable{START}[123][0][2] = "Egress SIP Feature Specific Data (FSD) [See SREF/SREPL Table at end for values]";
$recordTable{START}[124][0][2] = "Network Transfer Feature Specific Data (FSD) [See NWXF Table at end for values]";
$recordTable{START}[125][0][2] = "Call Condition ( decimal value from 0 to 39, or empty ) Call Condition provides the cirteria for determining AMA call type value for billing records. It's determined by the PSX based on the type of call along with other network information( Terminating, Inter/Intra Network). [see Call Condition Table at end for values]";
$recordTable{START}[126][0][2] = "Toll Indicator ( Decimal value, range 0 to 64, or empty) Provides the toll indication for the call as determined by the PSX. [see Toll Indicator table at end for values]";
$recordTable{START}[127][0][2] = "Generic Number ( number, string up to 30 characters ) This field contains the digits from the Generic number, i.e. the \"number\" subfield. This field is presented based on the ISUP signaling received at the gateway, e.g. ISUP IAM, SGM. Note: The \"Generic Address Parameter\" field refers to Called Party Number for LNP translation. The meaning of this Generic Number field is based on the Generic Number Type. For example, if the Generic Number Type sets to CPC_ADDR_GAP_CALLING_NUMBER, it refers to the \"Additional Calling Party Number\".";
$recordTable{START}[128][0][2] = "Generic Number Presentation Restriction Indicator ( Enumeration, 1 chararacter ) This field contains the Presentation Restriction Indicator from the Generic number. Enum of CPC_ADDR_PRESENTATION_RESTRICTION_INDICATOR_ENUM.";
$recordTable{START}[129][0][2] = "Generic Number Numbering Plan ( Enumberation, 1-2 characters ) This field contains the numbering plan from the Generic number. Enum of CPC_ADDR_NUMBERING_PLAN_ENUM";
$recordTable{START}[130][0][2] = "Generic Number Nature of Address ( Enumeration, 1-3 characters ) This field contains the Nature of Address from the Generic number. Enum of CPC_ADDR_NATURE_OF_ADDR_ENUM";
$recordTable{START}[131][0][2] = "Generic Number Type ( Enumeration, 1-2 characters ) This field contains the Generic Number Type from the Generic Number (e.g., when the Generic Number Type sets to 9, the Generic Number fields present the \"Additional Calling Party Number\"). This field is presented based on the ISUP signaling received at the gateway, e.g, ISUP IAM, SGM.";
$recordTable{START}[132][0][2] = "Originating Trunk Type ( KDDI specific raw hex data, 2 chars ) This field contains one byte hex code representing the originating trunk type as specified by customer. This field is associated with the corresponding field of trunk group screen on PSX.";
$recordTable{START}[133][0][2] = "Terminating Trunk Type ( KDDI specific raw hex data, 2 chars ) This field contains one byte hex code representing the terminating trunk type as specified by customer. This field is associated with the corresponding field of trunk group screen on PSX.";
$recordTable{START}[134][0][2] = "VPN Calling Private Presence Number ( 0-30 characters ) This field contains VPN Calling Private Presence Number for VPN originated calls. This field comes from the PSX Policy Response. This field is only populated for VPN generated calls and is empty for all other calls.";
$recordTable{START}[135][0][2] = "VPN Calling Public Presence Number ( 0-30 characters ) This field contains VPN Calling Public Presence Number for VPN originated calls in E-164 format. This field comes from the PSX Policy Response. This field is only populated for VPN generated calls and is empty for all other calls.";
$recordTable{START}[136][0][2] = "Furnish Charging Info (0-800 hexadecimal characters ) This field contains external Furnish Charging Info provided by SCP. Field is populated as it's original ASN.1 binary format across PSX-GSX and within GSX DS/CC/CAM to reduce the traffic and ICM/memory usage. Each byte of binary data is represented as two hexadecimal characters by CAM during ASCII CDR formatting.";
$recordTable{START}[137][0][2] = "Announcement Id ( Decimal value between 1- 65535 ) This field contains the ID of the last announcement played by the GSX on this call.";
$recordTable{START}[138][0][2] = "Network Data - Source Information ( Enumeration, 1-2 characters ) This field contains the Source Informtaion type from the Network Data (C3/E0) parameter in the IAM message.";
$recordTable{START}[139][0][2] = "Network Data - Partition ID (Decimal value between 0 - 4095 ) This field contains the Partition ID used from the Network Data (C3/E0) parameter in the IAM message.";
$recordTable{START}[140][0][2] = "Network Data - Network ID (Decimal value between 0 - 32767 ) This field contains the Network ID used from the Network Data (C3/E0) parameter in the IAM message.";
$recordTable{START}[141][0][2] = "Network Data - NCOS (Decimal value between 0 - 65536 ) This field contains the NCOS used from the Network Data (C3/E0) parameter in the IAM message.";
$recordTable{START}[142][0][2] = "ISDN Access Indicator ( Decimal value from 0 to 1. 0=ISUP Not Used all the way, 1=ISUP Used all the way ) ISDN Access Indicator value from the Forward Call Indicator parameter. This is presented as an optional parameter in the incoming signaling, e.g. ISUP IAM, ISDN SETUP, or SIP INVITE.";
$recordTable{START}[143][0][2] = "Network Call Reference - Call Identity (Decimal Value, range 0-16777215, or empty) This filed contains the Call Identity from the Network Call Reference parameter in the IAM message, used for billing.";
$recordTable{START}[144][0][2] = "Network Call Reference - Signaling Point Code (Decimal Value, range 0-16383, or empty) This filed contains the Signaling Point Code from the Network Call Reference parameter in the IAM message, used for billing.";
$recordTable{START}[145][0][2] = "Ingress ISUP MIME Protocol Specific Data ISUP protocol specific CDR data based on the contents of the ISUP mime data carried in SIP-I messages. See PCR1234.";
$recordTable{START}[146][0][2] = "Egress ISUP MIME Protocol Specific Data ISUP protocol specific CDR data based on the contents of the ISUP mime data carried in SIP-I messages. See PCR1234.";
$recordTable{START}[147][0][2] = "Video Data - A quoted comma separated string. In START record only the following sub-fields are populated: Video BW Ingress IP Video Endpoint Egress IP Video Endpoint See \"Video Data CDR\" description of sub-fields below.";
$recordTable{START}[148][0][2] = "SVS Customer (KDDI Global network specific) This field contains the trunk group number field from the K-ISUP Route Information parameter. See Pcr1624.";
$recordTable{START}[149][0][2] = "SVS Vendor - deprecated in 7.2.2 as part of Pcr1624 This field contains the terminating route information in KDDI Global network. See PCR1338.";
$recordTable{START}[150][0][2] = "Remote GSX Billing Indicator ( BOOLEAN, 0 or 1 or empty ) This optional CAM field indicates whether a CDR record includes billing info from remote GSX for GSX-GSX calls. This field is empty by default since \"Remote GSX Info Propagation\" feature is disabled by default. When \"Remote GSX Info Propagation\" feature is enabled along with the \"Send Immediate\" option (PCR 1216), this field is present with TRUE or FALSE. Value 0 indicates this CDR record does not contain billing info from destination GSX. Value 1 indicates this CDR record contains billing info from both originating GSX and destination GSX. Note: When this indicator is set to 1(TRUE), then the following 4 fields contain billing info of destination GSX instead of this GSX. --- \"Egress PSTN Circuit End Point\" START-32 --- \"Egress IP Circuit End Point\" START-33 --- \"Egress Signaling Type\" START-44 --- \"Egress PVSD\" START-55";
$recordTable{START}[151][0][2] = "Call To Test PSX This field will be used to determine is a call was made to a Test PSX";
$recordTable{START}[152][0][2] = "Psx Overlap Route Requests This field contains the Number of PSX dips by this call with the Called Party Number incomplete. ";
$recordTable{START}[153][0][2] = "Call Setup Delay [String with double quote delimiters, i.e. \"232,878,30,1140\" length is up to 21 characters, including delimiters] Accounting data which is specific to the SIP-SIP call. See tables at end for detailed information.";
$recordTable{START}[153][1][2] = "Request Latency ( Decimal value between 0 - 999 )";
$recordTable{START}[153][2][2] = "Downstream Latency ( Decimal value between 0 - 99999 )";
$recordTable{START}[153][3][2] = "Response Latency ( Decimal value between 0 - 999 )";
$recordTable{START}[153][4][2] = "Upstream Latency ( Decimal value between 0 - 99999 )";
$recordTable{START}[154][0][2] = "Overload Status This field will be used to indicate the resource congestion level on the node or a server which processes the call.";
$recordTable{START}[155][0][2] = "Ingress Bicc Info This field will be used to indicate the Ingress Bicc Specific CDR Information ";
$recordTable{START}[156][0][2] = "Egress Bicc Info This field will be used to indicate the Egress Bicc Specific CDR Information ";
$recordTable{START}[157][0][2] = "MLPP Precedence Level A field for reporting Precedence Level of the MLPP service. When service is not enabled the field will be empty. (1=Flash Override 2=Flash 3=Immediate 4=Priority 5=Routine)			";
$recordTable{START}[158][0][2] = "MSRP Service Type This field describes the type of MSRP session that is being setup based on the SDP in the SIP INVITE message. An MSRP session could either be a File-transfer session or an IM session. (0=MSRP IM Session 1=MSRP File transfer session)";
$recordTable{START}[159][0][2] = "NPUKK Special Routing Information - (Hex, with 0x, 0x1,0x2,0x12,0x11,0x10) This is a one byte field received in the ingress IAM (or as configured in CLI) and passed on to CC. Bit numbers 1,3 and 5 are of importance now and in future  other bits may be of use as well.";
$recordTable{START}[160][0][2] = "NPUKK Customer or Carrier Identification - This is a USHORT received in the ingress IAM (or as configured in CLI) with a value ranging from 0 to 16383 and indicates the customer or the carrier number associated with the incoming call.";
$recordTable{START}[161][0][2] = "NPUKK ServiceType Identifier - This is a one byte field received in the ingress IAM (or as configured in CLI) and  passed on to CC as it is. Values are expected from 0 to 127. ";
$recordTable{START}[162][0][2] = "NPSSP Special Handling Information - (Hex, with 0x, 0x10 or 0x14 or 0x11 etc) This is a one byte field received in the ingress IAM and passed on to CC as it is.  Bit numbers 1 is of importance now and in future other bits may be of use as well. ";
$recordTable{START}[163][0][2] = "NPSSP ServiceType Identifier - This is a one byte field received in the ingress IAM and passed on to CC as it is.  Values are expected from 0 to 127.";
$recordTable{START}[164][0][2] = "ONI Str - (String of up to 12 characters or empty) This is binary bit array received from the network in IAM, and will be stored in a character array. This field will be passed on to PSX, based on which the PSX sends routes and the ONI Str itself to be sent out on the egress side.";
$recordTable{START}[165][0][2] = "Suppress ONI This field is set to 1 when the \"Suppress ONI\" flag in the \"Signaling Profile\" of Egress Trunk Group in PSX is enabled. By default this flag is disabled. 0=\"Suppress ONI\" flag in Signaling profile of Egress trunk group is disabled. 1=\"Suppress ONI\" flag in Signaling profile of Egress trunk group is enabled.";
$recordTable{START}[166][0][2] = "Global Charge Reference - (Up to 40 ASCII characters or Empty) This is a field of 20 byte long array used for CDR correlation. The bytes will be  output in hex format. Each byte would need two ASCII characters. ISUP Signaling  profile flag GCR should be supported on ingress or egress side.";
$recordTable{START}[167][0][2] = "IP Call Limit at ingress SIP Peer - This field tells whether this call has arrived at the GSX from a particular peer for  which the CAC limit has already reached its maximum. (1) A \"SIP CAC Profile\" containing \"Call Overage Limit\" > 0 is configured and this Cac Profile is attached to a SIP Peer. (2) A \"SIP CAC Profile\" containing \"Call Overage Limit\" > 0 is configured and this  	 Cac Profile is attached to a SIP Service group in \"Registrant CAC Profile\". 0=IP Call Limit not exceeded at ingress SIP Peer 1=IP Call Limit exceeded at ingress SIP Peer ";
$recordTable{START}[168][0][2] = "IP Call Limit at ingress IPTG This field tells whether this call has arrived at the GSX for a particular IP TG for  which the Call limit has already reached its maximum. An Ingress IP TG with  \"IP Oversubscription Factor\" > 0 is configured. 0=IP Call Limit not exceeded at ingress IPTG 1=IP Call Limit exceeded at ingress IPTG ";
$recordTable{START}[169][0][2] = "IP BW Limit at ingress IPTG This field tells whether this call has arrived at the GSX for a particular IP TG for  which the BW limit has already reached its maximum. An Ingress IP TG with  \"IP Oversubscription Factor\" > 0 is configured. 0=IP BW Limit not exceeded at ingress IPTG 1=IP BW Limit exceeded at ingress IPTG 	 ";
$recordTable{START}[170][0][2] = "IP Call Limit at egress SIP Peer This field tells whether this call is destined for a particular peer from GSX for  which the CAC limit has already reached its maximum. (1) A \"SIP CAC Profile\" containing \"Call Overage Limit\" > 0 is configured and this CAC Profile is attached to a SIP Peer. (2) A \"SIP CAC Profile\" containing \"Call Overage Limit\" > 0 is configured and 	 this CAC Profile is attached to a SIP Service group in \"Registrant CAC Profile\". 0=IP Call Limit not exceeded at egress SIP Peer 1=IP Call Limit exceeded at egress SIP Peer ";
$recordTable{START}[171][0][2] = "IP Call Limit at egress IPTG This field tells whether this call destined for a particular IP TG for which the  Call limit has already reached its maximum. An Egress IP TG with  \"IP Oversubscription Factor\" > 0 is configured. 0=IP Call Limit not exceeded at egress IPTG 1=IP Call Limit exceeded at egress IPTG ";
$recordTable{START}[172][0][2] = "IP BW Limit at egress IPTG This field tells whether this call destined for a particular IP TG for which the  BW limit has already reached its maximum. An Egress IP TG with \"IP Oversubscription Factor\" > 0 is configured.  0=IP BW Limit not exceeded at egress IPTG 1=IP BW Limit exceeded at egress IPTG";
$recordTable{START}[173][0][2] = "RESERVED: PSX Name";
$recordTable{START}[174][0][2] = "RESERVED: No of PSX tried";
$recordTable{START}[175][0][2] = "RESERVED: Final route label";
$recordTable{START}[176][0][2] = "MTA Information";
$recordTable{START}[177][0][2] = "Access Network Charging Information";
$recordTable{START}[178][0][2] = "Access Transfer Specific Data";
$recordTable{START}[179][0][2] = "Emergency Indicator This field tells whether this call is categorised as Emergency call. 1=Emergency Call";
$recordTable{START}[180][0][2] = "UE Roaming Status";
$recordTable{START}[181][0][2] = "Ingress Zone Name";
$recordTable{START}[182][0][2] = "Egress Zone Name";
$recordTable{START}[183][0][2] = "Ingress Zone ID";
$recordTable{START}[184][0][2] = "Egress Zone ID";
$recordTable{START}[185][0][2] = "Ingress IpPrefix TgName";

$recordTable{STOP}[1][0][1] = "Record Type";
$recordTable{STOP}[2][0][1] = "Gateway Name";
$recordTable{STOP}[3][0][1] = "Accounting ID";
$recordTable{STOP}[4][0][1] = "Start Time (system ticks)";
$recordTable{STOP}[5][0][1] = "Node Time Zone";
$recordTable{STOP}[6][0][1] = "Start Time (MM/DD/YYYY)";
$recordTable{STOP}[7][0][1] = "Start Time (HH/MM/SS.s)";
$recordTable{STOP}[8][0][1] = "Ticks from Setup Msg to Policy Response";
$recordTable{STOP}[9][0][1] = "Ticks from Setup Msg to Alert/Proc/Prog";
$recordTable{STOP}[10][0][1] = "Ticks from Setup Msg to Service Est";
$recordTable{STOP}[11][0][1] = "Disconnect Time (MM/DD/YYYY)";
$recordTable{STOP}[12][0][1] = "Disconnect Time (HH:MM:SS.s)";
$recordTable{STOP}[13][0][1] = "Ticks from Disconnect to Call Termination";
$recordTable{STOP}[14][0][1] = "Call Service Duration";
$recordTable{STOP}[15][0][1] = "Call Disconnect Reason";
$recordTable{STOP}[16][0][1] = "Service Delivered";
$recordTable{STOP}[17][0][1] = "Call Direction";
$recordTable{STOP}[17][0][2] = "Call Direction - PSTN-TO-IP/PSTN-TO-PSTN/IP-TO-PSTN/PSTN-TO-TERM/IP-TO-TERM/ TERM-TO-PSTN/TERM-TO-IP/IP-TO-IP (up to 12 characters).";
$recordTable{STOP}[18][0][1] = "Service Provider";
$recordTable{STOP}[19][0][1] = "Transit Network Selection Code (TNS)";
$recordTable{STOP}[20][0][1] = "Calling Number";
$recordTable{STOP}[21][0][1] = "Called Number";
$recordTable{STOP}[22][0][1] = "Extra Called Address Digits";
$recordTable{STOP}[23][0][1] = "Number of Called Num Translations";
$recordTable{STOP}[24][0][1] = "Called Number Before Translation #1";
$recordTable{STOP}[25][0][1] = "Translation Type #1";
$recordTable{STOP}[26][0][1] = "Called Number Before Translation #2";
$recordTable{STOP}[27][0][1] = "Translation Type #2";
$recordTable{STOP}[28][0][1] = "Billing Number";
$recordTable{STOP}[29][0][1] = "Route Label";
$recordTable{STOP}[30][0][1] = "Route Attempt Number";
$recordTable{STOP}[31][0][1] = "Route Selected";
$recordTable{STOP}[32][0][1] = "Egress Local Signaling IP Address";
$recordTable{STOP}[33][0][1] = "Egress Remote Signaling IP Address";
$recordTable{STOP}[34][0][1] = "Ingress Trunk Group Name";
$recordTable{STOP}[35][0][1] = "Ingress PSTN Circuit End Point";
$recordTable{STOP}[36][0][1] = "Ingress IP Circuit End Point";
$recordTable{STOP}[37][0][1] = "Egress PSTN Circuit End Point";
$recordTable{STOP}[38][0][1] = "Egress IP Circuit End Point";
$recordTable{STOP}[39][0][1] = "Ingress Number of Audio Bytes Sent";
$recordTable{STOP}[40][0][1] = "Ingress Number of Audio Packets Sent";
$recordTable{STOP}[41][0][1] = "Ingress Number of Audio Bytes Received";
$recordTable{STOP}[42][0][1] = "Ingress Number of Audio Packets Received";
$recordTable{STOP}[43][0][1] = "Originating Line Information (OLIP)";
$recordTable{STOP}[44][0][1] = "Jurisdiction Information Parameter (JIP)";
$recordTable{STOP}[45][0][1] = "Carrier Code";
$recordTable{STOP}[46][0][1] = "Call Group ID";
$recordTable{STOP}[47][0][1] = "Script Log Data";
$recordTable{STOP}[48][0][1] = "Ticks from Setup Msg to Rx of EXM";
$recordTable{STOP}[49][0][1] = "Ticks from Setup Msg to Generation of EXM";
$recordTable{STOP}[50][0][1] = "Calling Party Nature of Address";
$recordTable{STOP}[51][0][1] = "Called Party Nature of Address";
$recordTable{STOP}[52][0][1] = "Ingress Protocol Variant Specific Data";
$recordTable{STOP}[53][0][1] = "Ingress Signaling Type";
$recordTable{STOP}[54][0][1] = "Egress Signaling Type";
$recordTable{STOP}[55][0][1] = "Ingress Far End Switch Type";
$recordTable{STOP}[56][0][1] = "Egress Far End Switch Type";
$recordTable{STOP}[57][0][1] = "Carrier Code of Carrier who Owns iTG Far End";
$recordTable{STOP}[58][0][1] = "Carrier Code of Carrier who Owns eTG Far End";
$recordTable{STOP}[59][0][1] = "Calling Party Category";
$recordTable{STOP}[60][0][1] = "Dialed Number";
$recordTable{STOP}[61][0][1] = "Carrier Selection Information";
$recordTable{STOP}[62][0][1] = "Called Number Numbering Plan";
$recordTable{STOP}[63][0][1] = "Generic Address Parameter";
$recordTable{STOP}[64][0][1] = "Disconnect Initiator";
$recordTable{STOP}[65][0][1] = "Ingress Number of Packets Recorded as Lost";
$recordTable{STOP}[66][0][1] = "Ingress Interarrival Packet Jitter";
$recordTable{STOP}[67][0][1] = "Ingress Last Measurement for Latency";
$recordTable{STOP}[68][0][1] = "Egress Trunk Group Name";
$recordTable{STOP}[69][0][1] = "Egress Protocol Variant Specific Data";
$recordTable{STOP}[70][0][1] = "Incoming Calling Number";
$recordTable{STOP}[71][0][1] = "AMA Call Type";
$recordTable{STOP}[72][0][1] = "Message Billing Indicator (MBI)";
$recordTable{STOP}[73][0][1] = "LATA";
$recordTable{STOP}[74][0][1] = "Route Index Used";
$recordTable{STOP}[75][0][1] = "Calling Party Presentation Restriction";
$recordTable{STOP}[76][0][1] = "Incoming ISUP Charge Number";
$recordTable{STOP}[77][0][1] = "Incoming ISUP Nature Of Address";
$recordTable{STOP}[78][0][1] = "Dialed Number Nature of Address";
$recordTable{STOP}[79][0][1] = "Ingress Codec Info";
$recordTable{STOP}[80][0][1] = "Egress Codec Info";
$recordTable{STOP}[81][0][1] = "Ingress RTP Packetization Time";
$recordTable{STOP}[82][0][1] = "Global Call ID (GCID)";
$recordTable{STOP}[83][0][1] = "Originator Echo Cancellation";
$recordTable{STOP}[84][0][1] = "Terminator Echo Cancellation";
$recordTable{STOP}[85][0][1] = "Charge Flag";
$recordTable{STOP}[86][0][1] = "AMA slp ID";
$recordTable{STOP}[87][0][1] = "AMA BAF Module";
$recordTable{STOP}[88][0][1] = "AMA Set Hex AB Indication";
$recordTable{STOP}[89][0][1] = "Service Feature ID";
$recordTable{STOP}[90][0][1] = "FE Parameter";
$recordTable{STOP}[91][0][1] = "Satellite Indicator";
$recordTable{STOP}[92][0][1] = "PSX Billing Info";
$recordTable{STOP}[93][0][1] = "Originating TDM Trunk Group Type";
$recordTable{STOP}[94][0][1] = "Terminating TDM Trunk Group Type";
$recordTable{STOP}[95][0][1] = "Ingress Trunk Member Number";
$recordTable{STOP}[96][0][1] = "Egress Trunk Group ID";
$recordTable{STOP}[97][0][1] = "Egress Switch ID";
$recordTable{STOP}[98][0][1] = "Ingress Local ATM Address";
$recordTable{STOP}[99][0][1] = "Ingress Remote ATM Address";
$recordTable{STOP}[100][0][1] = "Egress Local ATM Address";
$recordTable{STOP}[101][0][1] = "Egress Remote ATM Address";
$recordTable{STOP}[102][0][1] = "PSX Call Type";
$recordTable{STOP}[103][0][1] = "Outgoing Route Trunk Group ID";
$recordTable{STOP}[104][0][1] = "Outgoing Route Message ID";
$recordTable{STOP}[105][0][1] = "Incoming Route ID";
$recordTable{STOP}[106][0][1] = "Calling Name";
$recordTable{STOP}[107][0][1] = "Calling Name Type";
$recordTable{STOP}[108][0][1] = "Incoming Calling Party Numbering Plan";
$recordTable{STOP}[109][0][1] = "Outgoing Calling Party Numbering Plan";
$recordTable{STOP}[110][0][1] = "Calling Party Business Group ID";
$recordTable{STOP}[111][0][1] = "Called Party Business Group ID";
$recordTable{STOP}[112][0][1] = "Calling Party PPDN";
$recordTable{STOP}[113][0][1] = "Ticks from Setup Msg to Last Route Attempt";
$recordTable{STOP}[114][0][1] = "Billing Number Nature of Address";
$recordTable{STOP}[115][0][1] = "Incoming Calling Number Nature of Address";
$recordTable{STOP}[116][0][1] = "Egress Trunk Member Number";
$recordTable{STOP}[117][0][1] = "Selected Route Type";
$recordTable{STOP}[118][0][1] = "Telcordia Long Duration Record Type";
$recordTable{STOP}[119][0][1] = "Ticks From Previous Record";
$recordTable{STOP}[120][0][1] = "Cumulative Route Index";
$recordTable{STOP}[121][0][1] = "Call Disconnect Reason Sent to Ingress";
$recordTable{STOP}[122][0][1] = "Call Disconnect Reason Sent to Egress";
$recordTable{STOP}[123][0][1] = "ISDN PRI Calling Party Subaddress";
$recordTable{STOP}[124][0][1] = "Outgoing Trunk Group Number in EXM";
$recordTable{STOP}[125][0][1] = "Ingress Local Signaling IP Address";
$recordTable{STOP}[126][0][1] = "Ingress Remote Signaling IP Address";
$recordTable{STOP}[127][0][1] = "Record Sequence Number";
$recordTable{STOP}[128][0][1] = "Transmission Medium Requirement";
$recordTable{STOP}[129][0][1] = "Information Transfer Rate";
$recordTable{STOP}[130][0][1] = "USI User Info Layer 1";
$recordTable{STOP}[131][0][1] = "Unrecognized Raw ISUP Calling Party Category";
$recordTable{STOP}[132][0][1] = "FSD: Egress Release Link Trunking";
$recordTable{STOP}[133][0][1] = "FSD: Two B-Channel Transfer";
$recordTable{STOP}[134][0][1] = "Calling Party Business Unit";
$recordTable{STOP}[135][0][1] = "Called Party Business Unit";
$recordTable{STOP}[136][0][1] = "FSD: Redirecting";
$recordTable{STOP}[137][0][1] = "FSD: Ingress Release Link Trunking";
$recordTable{STOP}[138][0][1] = "PSX Index";
$recordTable{STOP}[139][0][1] = "PSX Congestion Level";
$recordTable{STOP}[140][0][1] = "PSX Processing Time (milliseconds)";
$recordTable{STOP}[141][0][1] = "Script Name";
$recordTable{STOP}[142][0][1] = "Ingress External Accounting Data";
$recordTable{STOP}[143][0][1] = "Egress External Accounting Data";
$recordTable{STOP}[144][0][1] = "Egress RTP Packetization Time";
$recordTable{STOP}[145][0][1] = "Egress Number of Audio Bytes Sent";
$recordTable{STOP}[146][0][1] = "Egress Number of Audio Packets Sent";
$recordTable{STOP}[147][0][1] = "Egress Number of Audio Bytes Received";
$recordTable{STOP}[148][0][1] = "Egress Number of Audio Packets Received";
$recordTable{STOP}[149][0][1] = "Egress Number of Packets Recorded as Lost";
$recordTable{STOP}[150][0][1] = "Egress Interarrival Packet Jitter";
$recordTable{STOP}[151][0][1] = "Egress Last Measurement for Latency";
$recordTable{STOP}[152][0][1] = "Ingress Maximum Packet Outage";
$recordTable{STOP}[153][0][1] = "Egress Maximum Packet Outage";
$recordTable{STOP}[154][0][1] = "Ingress Packet Playout Buffer Quality";
$recordTable{STOP}[155][0][1] = "Egress Packet Playout Buffer Quality";
$recordTable{STOP}[156][0][1] = "Answer Supervision Type";
$recordTable{STOP}[157][0][1] = "Ingress Sip Refer or Sip Replaces Feature Specific Data";
$recordTable{STOP}[158][0][1] = "Egress Sip Refer or Sip Replaces Feature Specific Data";
$recordTable{STOP}[159][0][1] = "Network Transfers Feature Specific Data";
$recordTable{STOP}[160][0][1] = "Call Condition";
$recordTable{STOP}[161][0][1] = "Toll Indicator";
$recordTable{STOP}[162][0][1] = "Generic Number ( Number )";
$recordTable{STOP}[163][0][1] = "Generic Number Presentation Restriction Indicator";
$recordTable{STOP}[164][0][1] = "Generic Number Numbering Plan";
$recordTable{STOP}[165][0][1] = "Generic Number Nature of Address";
$recordTable{STOP}[166][0][1] = "Generic Number Type";
$recordTable{STOP}[167][0][1] = "Originating Trunk Type";
$recordTable{STOP}[168][0][1] = "Terminating Trunk Type";
$recordTable{STOP}[169][0][1] = "Remote GSX Billing Indicator";
$recordTable{STOP}[170][0][1] = "VPN Calling Private Presence Number";
$recordTable{STOP}[171][0][1] = "VPN Calling Public Presence Number";
$recordTable{STOP}[172][0][1] = "External Furnish Charging Info";
$recordTable{STOP}[173][0][1] = "Ingress Policing Discards";
$recordTable{STOP}[174][0][1] = "Egress Policing Discards";
$recordTable{STOP}[175][0][1] = "Announcement Id";
$recordTable{STOP}[176][0][1] = "Network Data - Source Information";
$recordTable{STOP}[177][0][1] = "Network Data - Partition ID";
$recordTable{STOP}[178][0][1] = "Network Data - Network ID";
$recordTable{STOP}[179][0][1] = "Network Data - NCOS";
$recordTable{STOP}[180][0][1] = "Ingress SRTP (Secure RTP/RTCP)";
$recordTable{STOP}[181][0][1] = "Egress SRTP (Secure RTP/RTCP)";
$recordTable{STOP}[182][0][1] = "ISDN access Indicator";
$recordTable{STOP}[183][0][1] = "Call Disconnect Location";
$recordTable{STOP}[184][0][1] = "Call Disconnect Location Transmitted to Ingress";
$recordTable{STOP}[185][0][1] = "Call Disconnect Location Transmitted to Egress";
$recordTable{STOP}[186][0][1] = "Network Call Reference - Call Identity";
$recordTable{STOP}[187][0][1] = "Network Call Reference - Signaling Point Code";
$recordTable{STOP}[188][0][1] = "Ingress MIME Protocol Variant Specific Data";
$recordTable{STOP}[189][0][1] = "Egress MIME Protocol Variant Specific Data";
$recordTable{STOP}[190][0][1] = "Modem Tone Type";
$recordTable{STOP}[191][0][1] = "Modem Tone Signal Level";
$recordTable{STOP}[192][0][1] = "Video Data";
$recordTable{STOP}[192][1][1] = "Video Bandwidth";
$recordTable{STOP}[192][2][1] = "Video Call Duration";
$recordTable{STOP}[192][3][1] = "Ingress IP Video End Point";
$recordTable{STOP}[192][4][1] = "Egress IP Video End Point";
$recordTable{STOP}[193][0][1] = "Video Statistics - Ingress/Egress Video Statistics.";
$recordTable{STOP}[193][1][1] = "Ingress Number of Video Bytes Sent";
$recordTable{STOP}[193][2][1] = "Ingress Number of Video Packets Sent";
$recordTable{STOP}[193][3][1] = "Ingress Number of Video Bytes Received";
$recordTable{STOP}[193][4][1] = "Ingress Number of Video Packets Received";
$recordTable{STOP}[193][5][1] = "Ingress number of Video packets lost";
$recordTable{STOP}[193][6][1] = "Ingress maximum Video packet outage";
$recordTable{STOP}[193][7][1] = "Ingress Video policer discards";
$recordTable{STOP}[193][8][1] = "Egress Number of Video Bytes Sent";
$recordTable{STOP}[193][9][1] = "Egress Number of Video Packets Sent";
$recordTable{STOP}[193][10][1] = "Egress Number of Video Bytes Received";
$recordTable{STOP}[193][11][1] = "Egress Number of Video Packets Received";
$recordTable{STOP}[193][12][1] = "Egress number of Video packets lost";
$recordTable{STOP}[193][13][1] = "Egress maximum video packet outage";
$recordTable{STOP}[193][14][1] = "Egress video policer discards";
$recordTable{STOP}[194][0][1] = "SVS Customer";
$recordTable{STOP}[195][0][1] = "SVS Vendor - Deprecated in 7.2.2 as part of Pcr1624";
$recordTable{STOP}[196][0][1] = "Call To Test PSX";
$recordTable{STOP}[197][0][1] = "Psx Overlap Route Requests";
$recordTable{STOP}[198][0][1] = "Call Setup Delay";
$recordTable{STOP}[198][1][1] = "Request Latency (msec)";
$recordTable{STOP}[198][2][1] = "Downstream Latency (msec)";
$recordTable{STOP}[198][3][1] = "Response Latency (msec)";
$recordTable{STOP}[198][4][1] = "Upstream Latency (msec)";
$recordTable{STOP}[199][0][1] = "Overload Status";
$recordTable{STOP}[200][0][1] = "reserved";
$recordTable{STOP}[201][0][1] = "reserved";
$recordTable{STOP}[202][0][1] = "Ingress DSP Data Bitmap";
$recordTable{STOP}[203][0][1] = "Egress DSP Data Bitmap";
$recordTable{STOP}[204][0][1] = "Call Recorded Indicator";
$recordTable{STOP}[205][0][1] = "Call Recorded RTP Tx Ip Address";
$recordTable{STOP}[206][0][1] = "Call Recorded RTP Tx Port Number";
$recordTable{STOP}[207][0][1] = "Call Recorded RTP Rv Ip Address";
$recordTable{STOP}[208][0][1] = "Call Recorded RTP Rv Port Number";
$recordTable{STOP}[209][0][1] = "Mlpp Precedence Level";
$recordTable{STOP}[210][0][1] = "reserved";
$recordTable{STOP}[211][0][1] = "reserved";
$recordTable{STOP}[212][0][1] = "reserved";
$recordTable{STOP}[213][0][1] = "reserved";
$recordTable{STOP}[214][0][1] = "reserved";
$recordTable{STOP}[215][0][1] = "reserved";
$recordTable{STOP}[216][0][1] = "reserved";
$recordTable{STOP}[217][0][1] = "Global Charge Reference";
$recordTable{STOP}[218][0][1] = "reserved: IP Call Limit at Ingress SIP Peer";
$recordTable{STOP}[219][0][1] = "reserved: IP Call Limit at Ingress IPTG";
$recordTable{STOP}[220][0][1] = "reserved: IP BW Limit at Ingress IPTG";
$recordTable{STOP}[221][0][1] = "reserved: IP Call Limit at Egress SIP Peer";
$recordTable{STOP}[222][0][1] = "reserved: IP Call Limit at Egress IPTG";
$recordTable{STOP}[223][0][1] = "reserved: IP BW Limit at Egress IPTG";
$recordTable{STOP}[224][0][1] = "reserved: PSX Name";
$recordTable{STOP}[225][0][1] = "reserved: No of PSX tried";
$recordTable{STOP}[226][0][1] = "Ingress Inbound R-Factor";
$recordTable{STOP}[227][0][1] = "Ingress Outbount R-Factor";
$recordTable{STOP}[228][0][1] = "Egress Inbound R-Factor";
$recordTable{STOP}[229][0][1] = "Egress Outbount R-Factor";
$recordTable{STOP}[230][0][1] = "Media Stream Data - All the media streams data";
$recordTable{STOP}[230][1][1] = "Number of streams";
$recordTable{STOP}[230][2][1] = "mediaType1";
$recordTable{STOP}[230][3][1] = "streamIndex1";
$recordTable{STOP}[230][4][1] = "ingress codec used1";
$recordTable{STOP}[230][5][1] = "ingress local IP1";
$recordTable{STOP}[230][6][1] = "ingress remote IP1";
$recordTable{STOP}[230][7][1] = "ingress SRTP info1";
$recordTable{STOP}[230][8][1] = "ingress bw1";
$recordTable{STOP}[230][9][1] = "egress codec used1";
$recordTable{STOP}[230][10][1] = "egress local IP1";
$recordTable{STOP}[230][11][1] = "egress remote IP1";
$recordTable{STOP}[230][12][1] = "egress SRTP info1";
$recordTable{STOP}[230][13][1] = "egress bw1";
$recordTable{STOP}[230][14][1] = "ingress private leg local EP1";
$recordTable{STOP}[230][15][1] = "ingress private leg remote EP1";
$recordTable{STOP}[230][16][1] = "egress private leg local EP1";
$recordTable{STOP}[230][17][1] = "egress private leg remote EP1";
$recordTable{STOP}[230][18][1] = "mediaType2";
$recordTable{STOP}[230][19][1] = "streamIndex2";
$recordTable{STOP}[230][20][1] = "ingress codec used2";
$recordTable{STOP}[230][21][1] = "ingress local IP2";
$recordTable{STOP}[230][22][1] = "ingress remote IP2";
$recordTable{STOP}[230][23][1] = "ingress SRTP info2";
$recordTable{STOP}[230][24][1] = "ingress bw2";
$recordTable{STOP}[230][25][1] = "egress codec used2";
$recordTable{STOP}[230][26][1] = "egress local IP2";
$recordTable{STOP}[230][27][1] = "egress remote IP2";
$recordTable{STOP}[230][28][1] = "egress SRTP info2";
$recordTable{STOP}[230][29][1] = "egress bw2";
$recordTable{STOP}[230][30][1] = "ingress private leg local EP2";
$recordTable{STOP}[230][31][1] = "ingress private leg remote EP2";
$recordTable{STOP}[230][32][1] = "egress private leg local EP2";
$recordTable{STOP}[230][33][1] = "egress private leg remote EP2";
$recordTable{STOP}[230][34][1] = "mediaType3";
$recordTable{STOP}[230][35][1] = "streamIndex3";
$recordTable{STOP}[230][36][1] = "ingress codec used3";
$recordTable{STOP}[230][37][1] = "ingress local IP3";
$recordTable{STOP}[230][38][1] = "ingress remote IP3";
$recordTable{STOP}[230][39][1] = "ingress SRTP info3";
$recordTable{STOP}[230][40][1] = "ingress bw3";
$recordTable{STOP}[230][41][1] = "egress codec used3";
$recordTable{STOP}[230][42][1] = "egress local IP3";
$recordTable{STOP}[230][43][1] = "egress remote IP3";
$recordTable{STOP}[230][44][1] = "egress SRTP info3";
$recordTable{STOP}[230][45][1] = "egress bw3";
$recordTable{STOP}[230][46][1] = "ingress private leg local EP3";
$recordTable{STOP}[230][47][1] = "ingress private leg remote EP3";
$recordTable{STOP}[230][48][1] = "egress private leg local EP3";
$recordTable{STOP}[230][49][1] = "egress private leg remote EP3";
$recordTable{STOP}[230][50][1] = "mediaType4";
$recordTable{STOP}[230][51][1] = "streamIndex4";
$recordTable{STOP}[230][52][1] = "ingress codec used4";
$recordTable{STOP}[230][53][1] = "ingress local IP4";
$recordTable{STOP}[230][54][1] = "ingress remote IP4";
$recordTable{STOP}[230][55][1] = "ingress SRTP info4";
$recordTable{STOP}[230][56][1] = "ingress bw4";
$recordTable{STOP}[230][57][1] = "egress codec used4";
$recordTable{STOP}[230][58][1] = "egress local IP4";
$recordTable{STOP}[230][59][1] = "egress remote IP4";
$recordTable{STOP}[230][60][1] = "egress SRTP info4";
$recordTable{STOP}[230][61][1] = "egress bw4";
$recordTable{STOP}[230][62][1] = "ingress private leg local EP4";
$recordTable{STOP}[230][63][1] = "ingress private leg remote EP4";
$recordTable{STOP}[230][64][1] = "egress private leg local EP4";
$recordTable{STOP}[230][65][1] = "egress private leg remote EP4";
$recordTable{STOP}[230][66][1] = "mediaType5";
$recordTable{STOP}[230][67][1] = "streamIndex5";
$recordTable{STOP}[230][68][1] = "ingress codec used5";
$recordTable{STOP}[230][69][1] = "ingress local IP5";
$recordTable{STOP}[230][70][1] = "ingress remote IP5";
$recordTable{STOP}[230][71][1] = "ingress SRTP info5";
$recordTable{STOP}[230][72][1] = "ingress bw5";
$recordTable{STOP}[230][73][1] = "egress codec used5";
$recordTable{STOP}[230][74][1] = "egress local IP5";
$recordTable{STOP}[230][75][1] = "egress remote IP5";
$recordTable{STOP}[230][76][1] = "egress SRTP info5";
$recordTable{STOP}[230][77][1] = "egress bw5";
$recordTable{STOP}[230][78][1] = "ingress private leg local EP5";
$recordTable{STOP}[230][79][1] = "ingress private leg remote EP5";
$recordTable{STOP}[230][80][1] = "egress private leg local EP5";
$recordTable{STOP}[230][81][1] = "egress private leg remote EP5";
$recordTable{STOP}[230][82][1] = "mediaType6";
$recordTable{STOP}[230][83][1] = "streamIndex6";
$recordTable{STOP}[230][84][1] = "ingress codec used6";
$recordTable{STOP}[230][85][1] = "ingress local IP6";
$recordTable{STOP}[230][86][1] = "ingress remote IP6";
$recordTable{STOP}[230][87][1] = "ingress SRTP info6";
$recordTable{STOP}[230][88][1] = "ingress bw6";
$recordTable{STOP}[230][89][1] = "egress codec used6";
$recordTable{STOP}[230][90][1] = "egress local IP6";
$recordTable{STOP}[230][91][1] = "egress remote IP6";
$recordTable{STOP}[230][92][1] = "egress SRTP info6";
$recordTable{STOP}[230][93][1] = "egress bw6";
$recordTable{STOP}[230][94][1] = "ingress private leg local EP6";
$recordTable{STOP}[230][95][1] = "ingress private leg remote EP6";
$recordTable{STOP}[230][96][1] = "egress private leg local EP6";
$recordTable{STOP}[230][97][1] = "egress private leg remote EP6";
$recordTable{STOP}[231][0][1] = "Media Stream Statistics - All the media streams statistics";
$recordTable{STOP}[231][1][1] = "Number of streams";
$recordTable{STOP}[231][2][1] = "mediaType1";
$recordTable{STOP}[231][3][1] = "streamIndex1";
$recordTable{STOP}[231][4][1] = "ingress packetSent1";
$recordTable{STOP}[231][5][1] = "ingress packetReceived1";
$recordTable{STOP}[231][6][1] = "ingress octetSent1";
$recordTable{STOP}[231][7][1] = "ingress octetReceived1";
$recordTable{STOP}[231][8][1] = "ingress packetLost1";
$recordTable{STOP}[231][9][1] = "ingress packetDiscarded1";
$recordTable{STOP}[231][10][1] = "egress packetSent1";
$recordTable{STOP}[231][11][1] = "egress packetReceived1";
$recordTable{STOP}[231][12][1] = "egress octetSent1";
$recordTable{STOP}[231][13][1] = "egress octetReceived1";
$recordTable{STOP}[231][14][1] = "egress packetLost1";
$recordTable{STOP}[231][15][1] = "egress packetDiscarded1";
$recordTable{STOP}[231][16][1] = "mediaType2";
$recordTable{STOP}[231][17][1] = "streamIndex2";
$recordTable{STOP}[231][18][1] = "ingress packetSent2";
$recordTable{STOP}[231][19][1] = "ingress packetReceived2";
$recordTable{STOP}[231][20][1] = "ingress octetSent2";
$recordTable{STOP}[231][21][1] = "ingress octetReceived2";
$recordTable{STOP}[231][22][1] = "ingress packetLost2";
$recordTable{STOP}[231][23][1] = "ingress packetDiscarded2";
$recordTable{STOP}[231][24][1] = "egress packetSent2";
$recordTable{STOP}[231][25][1] = "egress packetReceived2";
$recordTable{STOP}[231][26][1] = "egress octetSent2";
$recordTable{STOP}[231][27][1] = "egress octetReceived2";
$recordTable{STOP}[231][28][1] = "egress packetLost2";
$recordTable{STOP}[231][29][1] = "egress packetDiscarded2";
$recordTable{STOP}[231][30][1] = "mediaType3";
$recordTable{STOP}[231][31][1] = "streamIndex3";
$recordTable{STOP}[231][32][1] = "ingress packetSent3";
$recordTable{STOP}[231][33][1] = "ingress packetReceived3";
$recordTable{STOP}[231][34][1] = "ingress octetSent3";
$recordTable{STOP}[231][35][1] = "ingress octetReceived3";
$recordTable{STOP}[231][36][1] = "ingress packetLost3";
$recordTable{STOP}[231][37][1] = "ingress packetDiscarded3";
$recordTable{STOP}[231][38][1] = "egress packetSent3";
$recordTable{STOP}[231][39][1] = "egress packetReceived3";
$recordTable{STOP}[231][40][1] = "egress octetSent3";
$recordTable{STOP}[231][41][1] = "egress octetReceived3";
$recordTable{STOP}[231][42][1] = "egress packetLost3";
$recordTable{STOP}[231][43][1] = "egress packetDiscarded3";
$recordTable{STOP}[231][44][1] = "mediaType4";
$recordTable{STOP}[231][45][1] = "streamIndex4";
$recordTable{STOP}[231][46][1] = "ingress packetSent4";
$recordTable{STOP}[231][47][1] = "ingress packetReceived4";
$recordTable{STOP}[231][48][1] = "ingress octetSent4";
$recordTable{STOP}[231][49][1] = "ingress octetReceived4";
$recordTable{STOP}[231][50][1] = "ingress packetLost4";
$recordTable{STOP}[231][51][1] = "ingress packetDiscarded4";
$recordTable{STOP}[231][52][1] = "egress packetSent4";
$recordTable{STOP}[231][53][1] = "egress packetReceived4";
$recordTable{STOP}[231][54][1] = "egress octetSent4";
$recordTable{STOP}[231][55][1] = "egress octetReceived4";
$recordTable{STOP}[231][56][1] = "egress packetLost4";
$recordTable{STOP}[231][57][1] = "egress packetDiscarded4";
$recordTable{STOP}[231][58][1] = "mediaType5";
$recordTable{STOP}[231][59][1] = "streamIndex5";
$recordTable{STOP}[231][60][1] = "ingress packetSent5";
$recordTable{STOP}[231][61][1] = "ingress packetReceived5";
$recordTable{STOP}[231][62][1] = "ingress octetSent5";
$recordTable{STOP}[231][63][1] = "ingress octetReceived5";
$recordTable{STOP}[231][64][1] = "ingress packetLost5";
$recordTable{STOP}[231][65][1] = "ingress packetDiscarded5";
$recordTable{STOP}[231][66][1] = "egress packetSent5";
$recordTable{STOP}[231][67][1] = "egress packetReceived5";
$recordTable{STOP}[231][68][1] = "egress octetSent5";
$recordTable{STOP}[231][69][1] = "egress octetReceived5";
$recordTable{STOP}[231][70][1] = "egress packetLost5";
$recordTable{STOP}[231][71][1] = "egress packetDiscarded5";
$recordTable{STOP}[231][72][1] = "mediaType6";
$recordTable{STOP}[231][73][1] = "streamIndex6";
$recordTable{STOP}[231][74][1] = "ingress packetSent6";
$recordTable{STOP}[231][75][1] = "ingress packetReceived6";
$recordTable{STOP}[231][76][1] = "ingress octetSent6";
$recordTable{STOP}[231][77][1] = "ingress octetReceived6";
$recordTable{STOP}[231][78][1] = "ingress packetLost6";
$recordTable{STOP}[231][79][1] = "ingress packetDiscarded6";
$recordTable{STOP}[231][80][1] = "egress packetSent6";
$recordTable{STOP}[231][81][1] = "egress packetReceived6";
$recordTable{STOP}[231][82][1] = "egress octetSent6";
$recordTable{STOP}[231][83][1] = "egress octetReceived6";
$recordTable{STOP}[231][84][1] = "egress packetLost6";
$recordTable{STOP}[231][85][1] = "egress packetDiscarded6 ";
$recordTable{STOP}[232][0][1] = "Transcoded Indicator";
$recordTable{STOP}[233][0][1] = "Negotiated HD Codec Rate";
$recordTable{STOP}[234][0][1] = "Remote Ingress Audio RTCP Learned Metrics";
$recordTable{STOP}[234][1][1] = "Ingress Packets Sent";
$recordTable{STOP}[234][2][1] = "Ingress Octets Sent";
$recordTable{STOP}[234][3][1] = "Ingress SSRC";
$recordTable{STOP}[234][4][1] = "Ingress Fraction Lost";
$recordTable{STOP}[234][5][1] = "Ingress Inter Arrival Jitter";
$recordTable{STOP}[234][6][1] = "Ingress Cummulative Number of Packet Lost";
$recordTable{STOP}[234][7][1] = "Ingress Extended Highest Sequence Number";
$recordTable{STOP}[234][8][1] = "Ingress Round Trip Time";
$recordTable{STOP}[235][0][1] = "Remote Egress Audio RTCP Learned Metrics";
$recordTable{STOP}[235][1][1] = "Egress Packets Sent";
$recordTable{STOP}[235][2][1] = "Egress Octets Sent";
$recordTable{STOP}[235][3][1] = "Egress SSRC";
$recordTable{STOP}[235][4][1] = "Egress Fraction Lost";
$recordTable{STOP}[235][5][1] = "Egress Inter Arrival Jitter";
$recordTable{STOP}[235][6][1] = "Egress Cummulative Number of Packet Lost";
$recordTable{STOP}[235][7][1] = "Egress Extended Highest Sequence Number";
$recordTable{STOP}[235][8][1] = "Egress Round Trip Time";
$recordTable{STOP}[236][0][1] = "reserved for Final Route Label";
$recordTable{STOP}[237][0][1] = "MTA Information";
$recordTable{STOP}[237][1][1] = "Origination Primary";
$recordTable{STOP}[237][2][1] = "Origination Secondary";
$recordTable{STOP}[237][3][1] = "Destination Primary";
$recordTable{STOP}[237][4][1] = "Destination Secondary";
$recordTable{STOP}[238][0][1] = "VBR Common Billing Data";
$recordTable{STOP}[239][0][1] = "VBR Route Billing Data";
$recordTable{STOP}[240][0][1] = "Access Transfer Specific Data";
$recordTable{STOP}[240][1][1] = "Feature ID";
$recordTable{STOP}[240][2][1] = "Transfer Type";
$recordTable{STOP}[240][3][1] = "Source access GCID";
$recordTable{STOP}[240][4][1] = "Traget access GCID";
$recordTable{STOP}[240][5][1] = "Original Calling Number";
$recordTable{STOP}[240][6][1] = "Original Called Number";
$recordTable{STOP}[241][0][1] = "Emergency Indicator";
$recordTable{STOP}[242][0][1] = "Ingress Dtls-Srtp: Dtls-Srtp Ingress Status Info";
$recordTable{STOP}[243][0][1] = "Egress Dtls-Srtp: Dtls-Srtp Egress Status Info";
$recordTable{STOP}[244][0][1] = "UE Roaming Status";
$recordTable{STOP}[245][0][1] = "Access Network Charging Information";
$recordTable{STOP}[246][0][1] = "Ingress Signaled Session Bandwidth in kbps";
$recordTable{STOP}[247][0][1] = "Ingress Rx Computed Session Bandwidth in kbps";
$recordTable{STOP}[248][0][1] = "Ingress Tx Computed Session Bandwidth in kbps";
$recordTable{STOP}[249][0][1] = "Ingress Configured Bandwidth Reduction Factor";
$recordTable{STOP}[250][0][1] = "Ingress Estimated Bandwidth Reduction Factor";
$recordTable{STOP}[251][0][1] = "Egress Signaled Session Bandwidth in kbps";
$recordTable{STOP}[252][0][1] = "Egress Rx Computed Session Bandwidth in kbps";
$recordTable{STOP}[253][0][1] = "Egress Tx Computed Session Bandwidth in kbps";
$recordTable{STOP}[254][0][1] = "Egress Configured Bandwidth Reduction Factor";
$recordTable{STOP}[255][0][1] = "Egress Estimated Bandwidth Reduction Factor";
$recordTable{STOP}[256][0][1] = "Additional Media Stream Statistics";
$recordTable{STOP}[256][1][1] = "Entries per stream";
$recordTable{STOP}[256][2][1] = "Number of streams";
$recordTable{STOP}[256][3][1] = "ingress lostPktBursts1";
$recordTable{STOP}[256][4][1] = "ingress lostPktSingles1";
$recordTable{STOP}[256][5][1] = "ingress codecParams1";
$recordTable{STOP}[256][6][1] = "egress lostPktBursts1";
$recordTable{STOP}[256][7][1] = "egress lostPktSingles1";
$recordTable{STOP}[256][8][1] = "egress codecParams1";
$recordTable{STOP}[256][9][1] = "transcode indicator1";
$recordTable{STOP}[256][10][1] = "ingress lostPktBursts2";
$recordTable{STOP}[256][11][1] = "ingress lostPktSingles2";
$recordTable{STOP}[256][12][1] = "ingress codecParams2";
$recordTable{STOP}[256][13][1] = "egress lostPktBursts2";
$recordTable{STOP}[256][14][1] = "egress lostPktSingles2";
$recordTable{STOP}[256][15][1] = "egress codecParams2";
$recordTable{STOP}[256][16][1] = "transcode indicator2";
$recordTable{STOP}[256][17][1] = "ingress lostPktBursts3";
$recordTable{STOP}[256][18][1] = "ingress lostPktSingles3";
$recordTable{STOP}[256][19][1] = "ingress codecParams3";
$recordTable{STOP}[256][20][1] = "egress lostPktBursts3";
$recordTable{STOP}[256][21][1] = "egress lostPktSingles3";
$recordTable{STOP}[256][22][1] = "egress codecParams3";
$recordTable{STOP}[256][23][1] = "transcode indicator3";
$recordTable{STOP}[256][24][1] = "ingress lostPktBursts4";
$recordTable{STOP}[256][25][1] = "ingress lostPktSingles4";
$recordTable{STOP}[256][26][1] = "ingress codecParams4";
$recordTable{STOP}[256][27][1] = "egress lostPktBursts4";
$recordTable{STOP}[256][28][1] = "egress lostPktSingles4";
$recordTable{STOP}[256][29][1] = "egress codecParams4";
$recordTable{STOP}[256][30][1] = "transcode indicator4";
$recordTable{STOP}[256][31][1] = "ingress lostPktBursts5";
$recordTable{STOP}[256][32][1] = "ingress lostPktSingles5";
$recordTable{STOP}[256][33][1] = "ingress codecParams5";
$recordTable{STOP}[256][34][1] = "egress lostPktBursts5";
$recordTable{STOP}[256][35][1] = "egress lostPktSingles5";
$recordTable{STOP}[256][36][1] = "egress codecParams5";
$recordTable{STOP}[256][37][1] = "transcode indicator5";
$recordTable{STOP}[256][38][1] = "ingress lostPktBursts6";
$recordTable{STOP}[256][39][1] = "ingress lostPktSingles6";
$recordTable{STOP}[256][40][1] = "ingress codecParams6";
$recordTable{STOP}[256][41][1] = "egress lostPktBursts6";
$recordTable{STOP}[256][42][1] = "egress lostPktSingles6";
$recordTable{STOP}[256][43][1] = "egress codecParams6";
$recordTable{STOP}[256][44][1] = "transcode indicator6";
$recordTable{STOP}[257][0][1] = "Ingress Zone Name";
$recordTable{STOP}[258][0][1] = "Egress Zone Name";
$recordTable{STOP}[259][0][1] = "Ingress Zone Id";
$recordTable{STOP}[260][0][1] = "Egresss Zone Id";
$recordTable{STOP}[261][0][1] = "Video Cac";
$recordTable{STOP}[262][0][1] = "Ingress IpPrefix TgName";
$recordTable{STOP}[263][0][1] = "Transcode Resource Type";
$recordTable{STOP}[264][0][1] = "MRF INFORMATION";
$recordTable{STOP}[264][1][1] = "Signaling IP";
$recordTable{STOP}[264][2][1] = "Signaling PORT";
$recordTable{STOP}[265][0][1] = "Parent Call GCID";
$recordTable{STOP}[266][0][1] = "Call Recorder 1 RTP Tx Ip Address";
$recordTable{STOP}[267][0][1] = "Call Recorder 1 RTP Tx Port Number";
$recordTable{STOP}[268][0][1] = "Call Recorder 1 RTP Rx Ip Address";
$recordTable{STOP}[269][0][1] = "Call Recorder 1 RTP Rx Port Number";
$recordTable{STOP}[270][0][1] = "Call Recorder 2 RTP Tx Ip Address ";
$recordTable{STOP}[271][0][1] = "Call Recorder 2 RTP Tx Port Number";
$recordTable{STOP}[272][0][1] = "Call Recorder 2 RTP Rx Ip Address";
$recordTable{STOP}[273][0][1] = "Call Recorder 2 RTP Rx Port Number";
$recordTable{STOP}[274][0][1] = "Call Recorder 3 RTP Tx Ip Address";
$recordTable{STOP}[275][0][1] = "Call Recorder 3 RTP Tx Port Number";
$recordTable{STOP}[276][0][1] = "Call Recorder 3 RTP Rx Ip Address";
$recordTable{STOP}[277][0][1] = "Call Recorded 3 RTP Rx Port Number";
$recordTable{STOP}[278][0][1] = "Signaling Only Mode";
$recordTable{STOP}[279][0][1] = "Audio Stream Statistics";
$recordTable{STOP}[279][1][1] = "Entries per stream";
$recordTable{STOP}[279][2][1] = "Number of streams";
$recordTable{STOP}[279][3][1] = "ingress mosCq1";
$recordTable{STOP}[279][4][1] = "egress mosCq1";
$recordTable{STOP}[279][5][1] = "ingress mosCq2";
$recordTable{STOP}[279][6][1] = "egress mosCq2";
$recordTable{STOP}[280][0][1] = "Audio Stream RTCP-XR Voice Metric Statistics";
$recordTable{STOP}[280][1][1] = "Entries per stream";
$recordTable{STOP}[280][2][1] = "Number of streams";
$recordTable{STOP}[280][3][1] = "ingress pktLossRate1";
$recordTable{STOP}[280][4][1] = "ingress pktDiscardRate1";
$recordTable{STOP}[280][5][1] = "ingress pktBurstDensity1";
$recordTable{STOP}[280][6][1] = "ingress pktGapDensity1";
$recordTable{STOP}[280][7][1] = "ingress pktBurstDuration1";
$recordTable{STOP}[280][8][1] = "ingress pktGapDuration1";
$recordTable{STOP}[280][9][1] = "ingress roundTripTime1";
$recordTable{STOP}[280][10][1] = "ingress endSystemDelay1";
$recordTable{STOP}[280][11][1] = "ingress gapMinThreshold1";
$recordTable{STOP}[280][12][1] = "ingress jitterBufferAdaptive1";
$recordTable{STOP}[280][13][1] = "ingress jitterBufferRate1";
$recordTable{STOP}[280][14][1] = "ingress jitterNominalDelay1";
$recordTable{STOP}[280][15][1] = "ingress jitterMaxDelay1";
$recordTable{STOP}[280][16][1] = "ingress jitterAbsMaxDelay1";
$recordTable{STOP}[280][17][1] = "ingress rFactor1";
$recordTable{STOP}[280][18][1] = "ingress mosCq1";
$recordTable{STOP}[280][19][1] = "egress pktLossRate1";
$recordTable{STOP}[280][20][1] = "egress pktDiscardRate1";
$recordTable{STOP}[280][21][1] = "egress pktBurstDensity1";
$recordTable{STOP}[280][22][1] = "egress pktGapDensity1";
$recordTable{STOP}[280][23][1] = "egress pktBurstDuration1";
$recordTable{STOP}[280][24][1] = "egress pktGapDuration1";
$recordTable{STOP}[280][25][1] = "egress roundTripTime1";
$recordTable{STOP}[280][26][1] = "egress endSystemDelay1";
$recordTable{STOP}[280][27][1] = "egress gapMinThreshold1";
$recordTable{STOP}[280][28][1] = "egress jitterBufferAdaptive1";
$recordTable{STOP}[280][29][1] = "egress jitterBufferRate1";
$recordTable{STOP}[280][30][1] = "egress jitterNominalDelay1";
$recordTable{STOP}[280][31][1] = "egress jitterMaxDelay1";
$recordTable{STOP}[280][32][1] = "egress jitterAbsMaxDelay1";
$recordTable{STOP}[280][33][1] = "egress rFactor1";
$recordTable{STOP}[280][34][1] = "egress mosCq1";
$recordTable{STOP}[280][35][1] = "ingress pktLossRate2";
$recordTable{STOP}[280][36][1] = "ingress pktDiscardRate2";
$recordTable{STOP}[280][37][1] = "ingress pktBurstDensity2";
$recordTable{STOP}[280][38][1] = "ingress pktGapDensity2";
$recordTable{STOP}[280][39][1] = "ingress pktBurstDuration2";
$recordTable{STOP}[280][40][1] = "ingress pktGapDuration2";
$recordTable{STOP}[280][41][1] = "ingress roundTripTime2";
$recordTable{STOP}[280][42][1] = "ingress endSystemDelay2";
$recordTable{STOP}[280][43][1] = "ingress gapMinThreshold2";
$recordTable{STOP}[280][44][1] = "ingress jitterBufferAdaptive2";
$recordTable{STOP}[280][45][1] = "ingress jitterBufferRate2";
$recordTable{STOP}[280][46][1] = "ingress jitterNominalDelay2";
$recordTable{STOP}[280][47][1] = "ingress jitterMaxDelay2";
$recordTable{STOP}[280][48][1] = "ingress jitterAbsMaxDelay2";
$recordTable{STOP}[280][49][1] = "ingress rFactor2";
$recordTable{STOP}[280][50][1] = "ingress mosCq2";
$recordTable{STOP}[280][51][1] = "egress pktLossRate2";
$recordTable{STOP}[280][52][1] = "egress pktDiscardRate2";
$recordTable{STOP}[280][53][1] = "egress pktBurstDensity2";
$recordTable{STOP}[280][54][1] = "egress pktGapDensity2";
$recordTable{STOP}[280][55][1] = "egress pktBurstDuration2";
$recordTable{STOP}[280][56][1] = "egress pktGapDuration2";
$recordTable{STOP}[280][57][1] = "egress roundTripTime2";
$recordTable{STOP}[280][58][1] = "egress endSystemDelay2";
$recordTable{STOP}[280][59][1] = "egress gapMinThreshold2";
$recordTable{STOP}[280][60][1] = "egress jitterBufferAdaptive2";
$recordTable{STOP}[280][61][1] = "egress jitterBufferRate2";
$recordTable{STOP}[280][62][1] = "egress jitterNominalDelay2";
$recordTable{STOP}[280][63][1] = "egress jitterMaxDelay2";
$recordTable{STOP}[280][64][1] = "egress jitterAbsMaxDelay2";
$recordTable{STOP}[280][65][1] = "egress rFactor2";
$recordTable{STOP}[280][66][1] = "egress mosCq2";
$recordTable{STOP}[281][0][1] = "Media Stream SRTP Statistics";
$recordTable{STOP}[281][1][1] = "Entries per stream";
$recordTable{STOP}[281][2][1] = "Number of streams";
$recordTable{STOP}[281][3][1] = "ingress authFailureCount1";
$recordTable{STOP}[281][4][1] = "ingress outsideReplayCount1";
$recordTable{STOP}[281][5][1] = "egress authFailureCount1";
$recordTable{STOP}[281][6][1] = "egress outsideReplayCount1";
$recordTable{STOP}[281][7][1] = "ingress authFailureCount2";
$recordTable{STOP}[281][8][1] = "ingress outsideReplayCount2";
$recordTable{STOP}[281][9][1] = "egress authFailureCount2";
$recordTable{STOP}[281][10][1] = "egress outsideReplayCount2";
$recordTable{STOP}[281][11][1] = "ingress authFailureCount3";
$recordTable{STOP}[281][12][1] = "ingress outsideReplayCount3";
$recordTable{STOP}[281][13][1] = "egress authFailureCount3";
$recordTable{STOP}[281][14][1] = "egress outsideReplayCount3";
$recordTable{STOP}[281][15][1] = "ingress authFailureCount4";
$recordTable{STOP}[281][16][1] = "ingress outsideReplayCount4";
$recordTable{STOP}[281][17][1] = "egress authFailureCount4";
$recordTable{STOP}[281][18][1] = "egress outsideReplayCount4";
$recordTable{STOP}[281][19][1] = "ingress authFailureCount5";
$recordTable{STOP}[281][20][1] = "ingress outsideReplayCount5";
$recordTable{STOP}[281][21][1] = "egress authFailureCount5";
$recordTable{STOP}[281][22][1] = "egress outsideReplayCount5";
$recordTable{STOP}[281][23][1] = "ingress authFailureCount6";
$recordTable{STOP}[281][24][1] = "ingress outsideReplayCount6";
$recordTable{STOP}[281][25][1] = "egress authFailureCount6";
$recordTable{STOP}[281][26][1] = "egress outsideReplayCount6";
$recordTable{STOP}[282][0][1] = "DSP insertion/rejection reason";
$recordTable{STOP}[282][1][1] = "Entries per stream";
$recordTable{STOP}[282][2][1] = "Number of streams";
$recordTable{STOP}[282][3][1] = "ingress dspReason1";
$recordTable{STOP}[282][4][1] = "egress dspReason1";
$recordTable{STOP}[282][5][1] = "ingress dspReason2";
$recordTable{STOP}[282][6][1] = "egress dspReason2";
$recordTable{STOP}[283][0][1] = "Call Established Time";
$recordTable{STOP}[284][0][1] = "Over Flow Packets Count";
$recordTable{STOP}[284][1][1] = "ingress overFlowPacketsCount1";
$recordTable{STOP}[284][2][1] = "egress overFlowPacketsCount1";
$recordTable{STOP}[284][3][1] = "ingress overFlowPacketsCount2";
$recordTable{STOP}[284][4][1] = "egress overFlowPacketsCount2";
$recordTable{STOP}[284][5][1] = "ingress overFlowPacketsCount3";
$recordTable{STOP}[284][6][1] = "egress overFlowPacketsCount3";
$recordTable{STOP}[284][7][1] = "ingress overFlowPacketsCount4";
$recordTable{STOP}[284][8][1] = "egress overFlowPacketsCount4";
$recordTable{STOP}[284][9][1] = "ingress overFlowPacketsCount5";
$recordTable{STOP}[284][10][1] = "egress overFlowPacketsCount5";
$recordTable{STOP}[284][11][1] = "ingress overFlowPacketsCount6";
$recordTable{STOP}[284][12][1] = "egress overFlowPacketsCount6";
$recordTable{STOP}[1][0][2] = "\"STOP\"";
$recordTable{STOP}[2][0][2] = "Gateway Name [String Up To 27 Characters]";
$recordTable{STOP}[3][0][2] = "Accounting ID (64 Bit in HEX format i.e 16 digits]";
$recordTable{STOP}[4][0][2] = "Start Time in System Ticks - Timestamp of when Setup Request was  received. [Decimal number from 0 to 4294967295] ";
$recordTable{STOP}[5][0][2] = "Node Time Zone [String up to 26 Characters long]";
$recordTable{STOP}[6][0][2] = "Start Time (mm/dd/yyyy) - Timestamp of when Setup Request was  received. (GMT) [eg : 02/06/1999]";
$recordTable{STOP}[7][0][2] = "Start Time (hh:mm:ss.s)(GMT) [eg : 12:20:38.5]";
$recordTable{STOP}[8][0][2] = "Time Elapsed from Receipt of Setup Message to Policy Server/Sonus Softswitch Response in 10 ms Ticks [Decimal number from 0 to 4294967295]";
$recordTable{STOP}[9][0][2] = "Time Elapsed from Receipt of Setup Message to Receipt of Alerting/Proc/Prog in 10 ms Ticks [Decimal number from 0 to 4294967295]";
$recordTable{STOP}[10][0][2] = "Time Elapsed from Setup to Service Est (Receipt of Answer and Completion of Cut-through) in 10ms Ticks.[Decimal number from 0 to 4294967295]";
$recordTable{STOP}[11][0][2] = "Disconnect Time (mm/dd/yyyy) - TimeStamp of when a Disconnect Request was received for the call. (GMT)[eg : 02/06/1999]";
$recordTable{STOP}[12][0][2] = "Disconnect Time (hh:mm:ss.s) (GMT) [eg : 12:20:38.5]";
$recordTable{STOP}[13][0][2] = "Time Elapsed from Receipt of Disconnect to completion of Call  Termination in 10ms ticks. [Decimal number from 0 to 4294967295]";
$recordTable{STOP}[14][0][2] = "Call Service Duration in 10ms ticks [Decimal number from 0 to 4294967295]";
$recordTable{STOP}[15][0][2] = "Call Disconnect Reason [1 to 255]";
$recordTable{STOP}[16][0][2] = "Service Delivered (VoIP/Circuit Switched Voice/VTOA) [String Up To 22 Characters]";
$recordTable{STOP}[17][0][2] = "Call Direction (PSTN-TO-IP/PSTN-TO-PSTN/IP-TO-PSTN/PSTN-TO-TERM/IP-TO-TERM/TERM-TO-IP/TERM-TO-PSTN/PSTN-TO-VTOA/VTOA-TO-PSTN/IP-TO-IP) [String up to 12 characters ]";
$recordTable{STOP}[18][0][2] = "Service Provider [String up to 23 characters]";
$recordTable{STOP}[19][0][2] = "Transit Network Selection Code [4 Digits] [ String up to 4 characters, for e.g 0288]";
$recordTable{STOP}[20][0][2] = "Calling Number [String up to 30 characters]";
$recordTable{STOP}[21][0][2] = "Called Number [String up to 30 characters]";
$recordTable{STOP}[22][0][2] = "Extra Called Address Digits [String up to 30 characters, not used in routing the call, received via Overlap Address Messages such as SAM]";
$recordTable{STOP}[23][0][2] = "Number of Called Num Translations done by this Node [Decimal number from 0 to 2]";
$recordTable{STOP}[24][0][2] = "Called Number Before Trans #1 [String up to 30 characters]";
$recordTable{STOP}[25][0][2] = "Translation Type - 1(0-None, 1-LNP, 2-TollFree, 3-Private, 4-Reserved)";
$recordTable{STOP}[26][0][2] = "Called Number Before Trans #2 [String up to 30 characters]";
$recordTable{STOP}[27][0][2] = "Translation Type - 2 (0-None, 1-LNP, 2-TollFree, 3-Private, 4-Reserved)";
$recordTable{STOP}[28][0][2] = "Billing Number [String up to 30 characters]";
$recordTable{STOP}[29][0][2] = "Route Label [String up to 23 characters]";
$recordTable{STOP}[30][0][2] = "Route Attempt Number [1 to 10]";
$recordTable{STOP}[31][0][2] = "Route Selected (GwInfo:TG Name) [string up to 51 characters] If the Gateway name is known, then GwInfo is the Gateway Name [string up to 27 characters] Else, GwInfo is the Gateway IP Address [ASCII IP address in dotted decimal format e.g 10.1.1.1, up to 15 Characters] TG Name is Trunk Group Name [string up to 23 characters]";
$recordTable{STOP}[32][0][2] = "Egress Local Signaling IP Address (Applicable only for PSTN-IP and IP-IP calls) [ASCII IPv4 address in dotted decimal format e.g 10.1.1.1 or IPv6 address in hexadecimal format e.g 3ffe:1900:4545:3:200:f8ff:fe21:67cf, up to 39 Characters]";
$recordTable{STOP}[33][0][2] = "Egress Remote Signaling IP Address (Applicable only for PSTN-IP and IP-IP calls) [ASCII IPv4 address in dotted decimal format e.g 10.1.1.1 or IPv6 address in hexadecimal format e.g 3ffe:1900:4545:3:200:f8ff:fe21:67cf, up to 39 Characters]";
$recordTable{STOP}[34][0][2] = "Ingress Trunk Group Name [string up to 23 chars]";
$recordTable{STOP}[35][0][2] = "Ingress PSTN Circuit End Point (Shelf [1-6]:Slot[1-16]:Port[1-28]:Ds0[1-32]: Cic[1-65535]:Local Point Code[32 Bit HEX format]:Remote Point Code[32 Bit HEX format] ) (Applicable only for PSTN-IP and PSTN-PSTN Calls)";
$recordTable{STOP}[36][0][2] = "Ingress IP Circuit End Point (Local IP Address:Port/Remote IP Address :Port) [IPv4 address in dotted decimal format,e.g 10.1.1.1 or IPv6 address in hexadecimal format e.g 3ffe:1900:4545:3:200:f8ff:fe21:67cf, up to 39 Characters] [Port Number - 0 to 65535] (Applicable only for IP-PSTN and IP-IP Calls)";
$recordTable{STOP}[37][0][2] = "Egress PSTN Circuit End Point (Shelf [1-6]:Slot[1-16]:Port[1-28]:Ds0[1-32]: Cic[1-65535]:Local Point Code[32 Bit HEX format]:Remote Point Code[32 Bit HEX format] ) (Applicable only for IP-PSTN and PSTN-PSTN Calls)";
$recordTable{STOP}[38][0][2] = "Egress IP Circuit End Point (Local IP Address:Port/Remote IP  Address:Port) [IPv4 address in dotted decimal format,e.g 10.1.1.1 or IPv6 address in hexadecimal format e.g 3ffe:1900:4545:3:200:f8ff:fe21:67cf, up to 39 Characters] [Port Number - 0 to 65535]	 (Applicable only for PSTN-IP and IP-IP Calls)";
$recordTable{STOP}[39][0][2] = "Ingress Number of Audio Bytes Sent [Decimal Representation of 64 Bit Number, i.e 1 to 1.844674407 * 10^19] Applicable only to IP calls whose ingress leg contained a DSP resource.";
$recordTable{STOP}[40][0][2] = "Ingress Number of Audio Packets Sent [Decimal Representation of 64 Bit Number, i.e 1 to 1.844674407 * 10^19] Applicable only to IP calls whose ingress leg contained a DSP resource.";
$recordTable{STOP}[41][0][2] = "Ingress Number of Audio Bytes Rcvd [Decimal Representation of 64 Bit Number, i.e 1 to 1.844674407 * 10^19] Applicable only to IP calls whose ingress leg contained a DSP resource.";
$recordTable{STOP}[42][0][2] = "Ingress Number of Audio Packets Rcvd. [Decimal Representation of 64 Bit Number, i.e 1 to 1.844674407 * 10^19] Applicable only to IP calls whose ingress leg contained a DSP resource.";
$recordTable{STOP}[43][0][2] = "Originating Line Information (OLIP), a.k.a info digits [Decimal Value. Values match ANSI T1.113 (ANSI ISUP) See Table at the end for OLIP values ]";
$recordTable{STOP}[44][0][2] = "Jurisdiction Information Parameter [JIP] [string up to 15 characters]";
$recordTable{STOP}[45][0][2] = "Carrier Code [String up to 5 characters, for e.g 0288]";
$recordTable{STOP}[46][0][2] = "Call Group ID (32 bit in HEX format, i.e 8 digits)";
$recordTable{STOP}[47][0][2] = "Script Log Data (A string which contains data logged by a Sonus CPL script which was executed for the call) Multiple variables may be logged within this field, with each variable data separated by a '/'. The data for each script variable includes the variable ID and the variable value, with a \":\" as the separator. For e.g the script log data string might look like : 12:9786928999/108:12345 This indicates data for two variables namely, variable ID - 12, and Variable ID 108. The value of variable 12 is 9786928999, and the value of variable 108 is 12345.";
$recordTable{STOP}[48][0][2] = "Time Elapsed from Receipt of Setup Message to Receipt of Exit Message (EXM) in 10ms Ticks. [Decimal number from 0 to 4294967295]";
$recordTable{STOP}[49][0][2] = "Time Elapsed from Receipt of Setup Message to Generation of Exit Message (EXM) in 10ms Ticks. [Decimal number from 0 to 4294967295]";
$recordTable{STOP}[50][0][2] = "Calling Party Nature of Address. [Decimal Value. See Nature of Address Enumeration Table at end for values]";
$recordTable{STOP}[51][0][2] = "Called Party Nature of Address. [Decimal Value. See Nature of Address Enumeration Table at end for values]";
$recordTable{STOP}[52][0][2] = "Ingress Protocol Variant Specific Data [String with double quote delimiters, i.e. \"JAPAN,0,0,...0x00\" length is up to 377 characters, including delimiters] Accounting data which is specific to the ingress signaling protocol. See tables at end for detailed information.";
$recordTable{STOP}[53][0][2] = "Ingress Signaling Type [Decimal Value. See Signaling Type Table at the end for values]";
$recordTable{STOP}[54][0][2] = "Egress Signaling Type [Decimal Value. See Signaling Type Table at the end for values]";
$recordTable{STOP}[55][0][2] = "Ingress Far End Switch Type [Decimal Value. See Far End Switch Type Table at the end for values]";
$recordTable{STOP}[56][0][2] = "Egress Far End Switch Type [Decimal Value. See Far End Switch Type Table at the end for values]";
$recordTable{STOP}[57][0][2] = "Carrier Code of the Carrier that owns the Ingress Trunk Group [String up to 5 characters]";
$recordTable{STOP}[58][0][2] = "Carrier Code of the Carrier that owns the Egress Trunk Group [String up to 5 characters]";
$recordTable{STOP}[59][0][2] = "Calling Party Category [Hex Value. See Table at end for values]";
$recordTable{STOP}[60][0][2] = "Dialed Number - Actual dialed number received by the Sonus Gateway before any digit manipulation was performed by the Softswitch. [String up to 30 characters]";
$recordTable{STOP}[61][0][2] = "Carrier Selection Information [Decimal Value. See Table at end for values]";
$recordTable{STOP}[62][0][2] = "Called Number Numbering Plan [Decimal Value. See Table at end for values]";
$recordTable{STOP}[63][0][2] = "Generic Address Parameter - The original called number if LNP was performed by a switch preceding the GSX. [String up to 30 characters]";
$recordTable{STOP}[64][0][2] = "Disconnect Initiator [0-Internal, 1-Calling Party, 2-Called Party, 3-Internal Early, 4-Calling Party Early] This indicates whether call release was initiated by the calling party (by the ingress signaling group), or the called party (by the egress signaling group), or was released internally by the call control entity in the GSX9000 (due either to some error in the processing of the call or to a release initiated by a party on the peer call in a multiparty feature such as ISDN Two B-Channel Transfer or SS7 Release Link Trunking). Value 3(Internal Early) and 4(Calling Party Early) are used by ATTEMPT records only (added in V6.1.4 for KDDI Early Call Attempts ).";
$recordTable{STOP}[65][0][2] = "Ingress Number of packets recorded as lost [Decimal representation of a 32 bit number] RTP statistics; Applicable only to IP calls whose ingress leg contained a DSP resource.";
$recordTable{STOP}[66][0][2] = "Ingress maximum interarrival packet jitter experienced in a call [Decimal - 16 bit value in millisecond units] RTP statistics; Applicable only to IP calls whose ingress leg contained a DSP resource.";
$recordTable{STOP}[67][0][2] = "Ingress last measurement for latency (RTCP statistics, applicable only ingress leg is IP) [Decimal - 16 bit value in millisecond units]";
$recordTable{STOP}[68][0][2] = "Egress Trunk Group Name [string up to 23 chars]";
$recordTable{STOP}[69][0][2] = "Egress Protocol Variant Specific Data [String with double quote delimiters, i.e. \"JAPAN,0,0,...0x00\" length is up to 377 characters, including delimiters] Accounting data which is specific to the egress signaling protocol. See tables at end for detailed information.";
$recordTable{STOP}[70][0][2] = "Incoming Calling Number - This field represents the calling number presented to the GSX prior to any digit manipulation or translation by the PSX. It is the Calling Number in the Incoming Signaling Message (IAM/SETUP) to the GSX translation. [string up to 30 characters] (For NTT Japan this may be the Calling User Number from \"End of Information Transfer\" parameter.)	 ";
$recordTable{STOP}[71][0][2] = "AMA Call Type (a.k.a. AMA Call Code) [Decimal number from 000 to 999, leading zeros are displayed]";
$recordTable{STOP}[72][0][2] = "Message Billing Indicator (MBI) [Decimal number from 000 to 999, leading zeros are displayed]";
$recordTable{STOP}[73][0][2] = "Originating LATA [String up to 3 characters] Represents the Originating Local Access and Transport Area (LATA).";
$recordTable{STOP}[74][0][2] = "Route Index Used [Decimal value from 1 to 10] Signifies which route in the Policy Response was used for this call. If no routes were successful, then this field will be empty (\"\"). The Policy Response can only hold up to 10 routes, so 10 is the maximum value for this field.";
$recordTable{STOP}[75][0][2] = "Calling Party Number Presentation Restriction [Decimal value. See table at end for values]";
$recordTable{STOP}[76][0][2] = "Incoming ISUP Charge Number [String up to 30 characters] This is the billing number provided in the IAM prior to any Softswitch manipulation or translation. Only applicable for SS7 calls.";
$recordTable{STOP}[77][0][2] = "Incoming ISUP Charge Number Nature of Address [Decimal Value. See Nature of Address Enumeration Table at end for values] This is the billing number NOA provided in the IAM prior to any Softswitch manipulation or translation. Only applicable for SS7 calls.";
$recordTable{STOP}[78][0][2] = "Dialed Number Nature Of Address [Decimal Value. See Nature of Address Enumeration Table at end for values]";
$recordTable{STOP}[79][0][2] = "Ingress Codec Type [<networkType>:<codecType>:<audioEncoding> See Codec Type table at end for values]";
$recordTable{STOP}[80][0][2] = "Egress Codec Type [<networkType>:<codecType>:<audioEncoding> See Codec Type table at end for values]";
$recordTable{STOP}[81][0][2] = "Ingress RTP Packetization Time [Decimal value from 10 to 40] Length of RTP packet in milliseconds. Ingress leg must be must be IP for this field to be applicable.";
$recordTable{STOP}[82][0][2] = "GSX Call ID (a.k.a. GCID) [32 Bits in Hex format, eg 0x01234567] This is the GSX's internally assigned Global Call ID (GCID).";
$recordTable{STOP}[83][0][2] = "Originator Echo Cancellation [Boolean. 0=FALSE, 1=TRUE] Indicates whether or not the GSX performed echo cancellation on the ingress leg of the call. (Only applicable for calls with PSTN ingress)";
$recordTable{STOP}[84][0][2] = "Terminator Echo Cancellation [Boolean. 0=FALSE, 1=TRUE] Indicates whether or not the GSX performed echo cancellation on the egress leg of the call. (Only applicable for calls with PSTN egress)";
$recordTable{STOP}[85][0][2] = "Charge Flag [0-None, 1-No Charge, 2-Charge, 3-Spare, 4-No Indication] Only applies to Incoming call (It means, GSX sends back ACM/ANM) and it reflects the value from PSX. If PSX does not send any value, GSX does not generate this field. ";
$recordTable{STOP}[86][0][2] = "AMA Service Logic ID (AMAslpID) [String up to 9 characters] This field records an identification of the service logic in the SCP tath was used. The value is contained in an AMAslpID parameter received from the SCP.";
$recordTable{STOP}[87][0][2] = "AMA BAF Module [String up to 256 characters] This field records a variety of billing information. The first 3 characters specify a Module Code. This code specifies which BAF table should be used to interpret the remaining characters. Refer to GR-1100-CORE, Section 5.7 BAF Module List for details.";
$recordTable{STOP}[88][0][2] = "AMA Set Hex AB Indicator [Boolean. 0=FALSE, 1=TRUE] If TRUE, then the AMA BAF Module contains a known or suspected error.";
$recordTable{STOP}[89][0][2] = "Service Feature ID [Decimal number from 000 to 999] This field indicates a customer's originating or terminating line characteristics.";
$recordTable{STOP}[90][0][2] = "FE Parameter [8 or 10 byte hex value] Source: Backwards call indicator. Contains the optional FE parameter which is part of the backwards call control messages ACM, CPG, ANM and Gateway-to-Gateway Signalling. See table at end for detailed description.";
$recordTable{STOP}[91][0][2] = "Satellite Indicator [0=No Satellite, 1=Satellite] Source: Nature of Connection Indicator. Indicates whether or not a satellite trunk was used.";
$recordTable{STOP}[92][0][2] = "PSX Billing Information [Hex value up to 255 bytes] Use *+h 74 Route Index Used to match the PSX Billing Information See table at end for definitions.";
$recordTable{STOP}[93][0][2] = "Originating TDM Trunk Group Type [Decimal value, range 0 to 255] See table at end for definitions.";
$recordTable{STOP}[94][0][2] = "Terminating TDM Trunk Group Type [Decimal value, range 0 to 255] See table at end for definitions.";
$recordTable{STOP}[95][0][2] = "Ingress Trunk Member Number [Decimal value, range 0 to 65535] This field identifies the selected DS0 within a trunk group.";
$recordTable{STOP}[96][0][2] = "Egress Trunk Group ID [Decimal value, range 0 to 4095] Egress trunk group ID on the egress GSX. The value of this field will be different than the one received in the FE parameter if the final switch is not the same as the egress GSX.";
$recordTable{STOP}[97][0][2] = "Egress Switch ID [Decimal value, range 0 to 1023] Egress switch ID on the egress GSX. The value of this field will be different than the one received in the FE parameter if the final switch is not the same as the egress GSX.";
$recordTable{STOP}[98][0][2] = "Active Call Ingress Local ATM Address (Applicable only for ATM Calls) [ string up to 42 characters, see ATM Address format at end ] The ATM address of the local physical port attached to the ATM network on the ingress leg of the call.";
$recordTable{STOP}[99][0][2] = "Active Call Ingress Remote ATM Address (Applicable only for ATM Calls) [ string up to 42 characters, see ATM Address format at end ] The ATM address of the remote physical port attached to the ATM network on the ingress leg of the call.";
$recordTable{STOP}[100][0][2] = "Active Call Egress Local ATM Address (Applicable only for ATM Calls) [ string up to 42 characters, see ATM Address format at end ] The ATM address of the local physical port attached to the ATM network on the egress leg of the call.";
$recordTable{STOP}[101][0][2] = "Active Call Egress Remote ATM Address (Applicable only for ATM Calls) [ string up to 42 characters, see ATM Address format at end ] The ATM address of the remote physical port attached to the ATM network on the egress leg of the call.";
$recordTable{STOP}[102][0][2] = "Policy Response Call Type [Decimal value from 0 to 62]";
$recordTable{STOP}[103][0][2] = "Outgoing Route Identification - [Decimal value from 0 to 65535] This field represents the Outgoing Trunk Group Number for call that overflows from one gateway to another via a Singapore Inter-Gateway Circuit (IGC) trunk. This value is extracted from the ISUP Address Complete Message's (ACM) optional \"Outgoing Route Identification (ORI)\" parameter. Only internetworking calls will have this field populated.";
$recordTable{STOP}[104][0][2] = "Outgoing Message Identification - (0-National Route, 1-Transit Route, 2-Terminating Route, 3-Spare) This field represents what type of route taken. See OMI section at end for population information.";
$recordTable{STOP}[105][0][2] = "Incoming Route Identification - [Decimal value from 0 to 65535] This field represents incoming source (incoming trunk group number). It is used to determine whether the source is from domestic or international network. The GSX extracts this value from the ISUP IAM's optional \"Incoming Route Identification (INRI)\" parameter( optional parameter specific to Singapore deployments). If INRI is not present, then this field will be populated based on the ingress trunk group ID/Number on the PSX configuration.";
$recordTable{STOP}[106][0][2] = "Calling Name [String up to 24 characters with string delimiters \"\" ] Represents the name of the calling party.";
$recordTable{STOP}[107][0][2] = "Calling Name Type (0-Invalid, 1-Spare, 2-Calling Name, 3-Original Calling Name, 4-Redirect Name, 5-Connected Name)";
$recordTable{STOP}[108][0][2] = "Incoming Calling Party Numbering Plan [Decimal Value. See Table at end for values] This field represents the Calling Party Numbering Plan received in the incoming setup message. For ISUP calls this value is contained in the optional Calling Party Number parameter in the Initial Address Message (IAM). For SIP calls, this value is contained in the FROM, TO, REQUEST URI, CONTACT and DIVERSION headers.";
$recordTable{STOP}[109][0][2] = "Outgoing Calling Party Numbering Plan [Decimal Value. See Table at end for values] This field represents the Calling Party Numbering Plan sent by the GSX in outgoing messages. The PSX determines this value during the route process. The outgoing plan is either equal to the incoming plan or the plan provisioned against the ingress trunk group.";
$recordTable{STOP}[110][0][2] = "Calling Party Business Group ID [Decimal value from 0 to 4294967295, If data is not present or unknown, then a one \"1\" (Public Business Group) will be logged] This value represents the Business Group ID of the calling party. The GSX receives this value in the SIP INCOMING INVITE message. Currently SIP is the only protocol which supports Business Group IDs. For all other protocols (ISUP, H323, etc.) this field will be logged as \"1\".";
$recordTable{STOP}[111][0][2] = "Called Party Business Group ID [Decimal value from 0 to 4294967295, If data is not present or unknown, then a one \"1\" (Public Business Group) will be logged] This value represents the Business Group ID of the called party. The GSX receives this value in the SIP INCOMING INVITE message. This value is then sent to the PSX in the Policy Request message. As part of the routing process the PSX may modify this value and return it in the Policy Response. The GSX logs the value supplied by the PSX, not the value received in the INVITE message. In release 4.1, SIP is the only protocol which supports Business Group IDs. For all other protocols (ISUP, H323, etc.) this field will be logged as \"1\".";
$recordTable{STOP}[112][0][2] = "Calling Party Public Presence Directory Number [String up to 30 characters] The Calling Party Public Presence Directory Number (PPDN) is an optional SIP parameter which is propagated as the calling number when a call goes into the Public PSTN. If the SIP Invite message's Remote Party ID header contains id-context=ppdn, then the Remote Party ID will be interpreted and logged as the Calling PPDN. If the id-context is not PPDN or if the ingress protocol is not SIP, then this field will be left blank (\"\").";
$recordTable{STOP}[113][0][2] = "Elapsed Time from Receipt of Setup Message to Last Call Routing Attempt in 10ms Ticks. [Decimal number from 0 to 4294967295]";
$recordTable{STOP}[114][0][2] = "Billing Number NOA [Decimal Value. See Nature of Address Enumeration Table at end for values] This field is the Nature of Address Indicator sent in outgoing Charge Number parameters. The PSX sets this value to either the Incoming Charge Number NOA or to the Billing Number NOA provisioned against the ingress Trunk Group.";
$recordTable{STOP}[115][0][2] = "Incoming Calling Number NOA [Decimal Value. See Nature of Address Enumeration Table at end for values] This field is the Nature of Address Indicator received in the incoming setup message.";
$recordTable{STOP}[116][0][2] = "Egress Trunk Group Member Number [Decimal value, range 0 to 65535] This field uniquely identifies the DS0 circuit used for this call in the egress Trunk Group. If the Trunk Member for the egress trunk group is not configured, then this field will be left blank (\"\"). Trunk Member can only be configured for ISDN, ISUP and CAS trunks. For Gateway to Gateway calls, both the originating and terminating gateways will log the terminating gateway's Egress Trunk Group Member Number.";
$recordTable{STOP}[117][0][2] = "Selected Route Type [Decimal value. See Route Type Enumeration Table at end for values]";
$recordTable{STOP}[118][0][2] = "Telcordia Long Duration Record Type [Decimal Value, 0 or 2]. Indicates which type of Telcordia Long Duration record this is. Telcordia defines a long duration call as one whose duration exceeds 1440 minutes (24 hours) at the configured audit time (once per day). During this audit, an intermediate record will be generated for all long duration calls. If a long duration record (i.e. INTERMEDIATE record with field 101 set to \"1\") was previously generated for this call, then this STOP record is considered a Continuation record \"2\". Otherwise, this is not a long duration record (call too short, or telcordia mode not enabled) and a \"0\" will be logged. 0 - Not a Telcordia Long Duration 1 - Telcordia First Record (n/a for STOP records) 2 - Telcordia Continuation Record";
$recordTable{STOP}[119][0][2] = "Time Elapsed From Previous Record [Decimal number from 0 to 4294967295] Time in 10ms ticks from the previous record (START or INTERMEDIATE) to this record (STOP).";
$recordTable{STOP}[120][0][2] = "Cumulative Route Index - [Decimal value from 1 to 65535] Signifies which route in the Rotue Label (*+h 74) was used for this call. Starting with Release 5.0, the Route Label may contain more than 10 routes. If no routes were successful, then this field will be empty (\"\"). If the first Policy Responsed contain a successful route, then this field will equal Route Index Used (*+h 74).";
$recordTable{STOP}[121][0][2] = "Call Disconnect Reason Transmitted to Ingress - [1 to 705, or empty] This value represents the disconnect reason (a.k.a. cause code) sent by the GSX to the calling party. If the release was initiated by the calling party, then this field will empty. If actual disconnect reason (received or internally generated) is not defined by the ingress signaling protocol, then the reason will be mapped to a reason which is defined before being sent.";
$recordTable{STOP}[122][0][2] = "Call Disconnect Reason Transmitted to Egress - [1 to 705, or empty] This value represents the disconnect reason (a.k.a. cause code) sent by the GSX to the called party. If the release was initiated by the called party, then this field will empty. If actual disconnect reason (received or internally generated) is not defined by the egress signaling protocol, then the reason will be mapped to a reason which is defined before being sent.";
$recordTable{STOP}[123][0][2] = "Calling Party Subaddress [String up to 30 characters] This field identifies the subaddress associated with the origin of an ISDN PRI call.";
$recordTable{STOP}[124][0][2] = "Outgoing Trunk Group Number in EXM [String up to 6 characters] Outgoing TGN is an optional parameter contained in the Exit Message (EXM). If an EXM was received and it contained an Outgoing TGN, then this field will be populated with the TGN. If an EXM was generated, then the Outgoing TGN will be populated from the service group profile. Otherwise this field will be left blank.";
$recordTable{STOP}[125][0][2] = "Ingress Local Signaling IP Address (Applicable only for IP-PSTN and IP-IP calls) [ASCII IPv4 address in dotted decimal format e.g 10.1.1.1 or IPv6 address in hexadecimal format e.g 3ffe:1900:4545:3:200:f8ff:fe21:67cf, up to 39 Characters]";
$recordTable{STOP}[126][0][2] = "Ingress Remote Signaling IP Address (Applicable only for IP-PSTN and IP-IP calls) [ASCII IPv4 address in dotted decimal format e.g 10.1.1.1 or IPv6 address in hexadecimal format e.g 3ffe:1900:4545:3:200:f8ff:fe21:67cf, up to 39 Characters]";
$recordTable{STOP}[127][0][2] = "Record Sequence Number [Decimal value from 0 to 4294967295]";
$recordTable{STOP}[128][0][2] = "Transmission Medium Requirement [Decimal Value, range 0 to 255, or empty] See TRANSMISSION MEDIUM REQUEST table at end for description and values.";
$recordTable{STOP}[129][0][2] = "Information Transfer Rate [Decimal Value, range 0 to 31, or empty] See INFORMATION TRANSFER RATE table at end for description and values.";
$recordTable{STOP}[130][0][2] = "USI User Info Layer 1 [Decimal Value, range 0 to 31, or empty] See USI USER INFO LAYER 1 table at end for description and values.";
$recordTable{STOP}[131][0][2] = "Unrecognized Raw ISUP Calling Party Category [Decimal value from 0 to 255] If the GSX does not recognize the recevied calling party category, then the actual (raw) value received will be logged in this field. Otherwise, this field will be empty (\"\").";
$recordTable{STOP}[132][0][2] = "Egress Release Link Trunking (RLT) Feature Specific Data (FSD) [See RLT Table at end for values]";
$recordTable{STOP}[133][0][2] = "Two B-Channel Transfer (TBCT) Feature Specific Data (FSD) [See TBCT Table at end for values]";
$recordTable{STOP}[134][0][2] = "Calling Party Business Unit [Decimal value from 0 to 4294967295, or empty] Repesents the calling party Business Unit (aka Sub-Group ID) and is supplied by the PSX in the Policy Response. If business unit data is not available for the call, then this field will be empty.";
$recordTable{STOP}[135][0][2] = "Called Party Business Unit [Decimal value from 0 to 4294967295, or empty] Repesents the called party Business Unit (aka Sub-Group ID) and is supplied by the PSX in the Policy Response. If business unit data is not available for the call, then this field will be empty.";
$recordTable{STOP}[136][0][2] = "Redirecting Feature Specific Data (FSD) [See REDI Table at end for values]";
$recordTable{STOP}[137][0][2] = "Ingress Release Link Trunking (RLT) Feature Specific Data (FSD) [See RLT Table at end for values]";
$recordTable{STOP}[138][0][2] = "PSX Index ( decimal value from 0 to 10 )";
$recordTable{STOP}[139][0][2] = "PSX Congestion Level ( decimal value 0 to 3. 0=Clear, 1=Low, 2=Medium, 3=High, empty=CongestionControlDisabled )";
$recordTable{STOP}[140][0][2] = "PSX Processing Time ( decimal value from 0 to 2^16 -1 in milliseconds )";
$recordTable{STOP}[141][0][2] = "Script Name (String up to 23 characters) Name of the Sonus CPL script last executed for this call. If no script is executed, then this field will be empty (\"\").";
$recordTable{STOP}[142][0][2] = "Ingress External Accounting Data ( String upto 150 characters )";
$recordTable{STOP}[143][0][2] = "Egress External Accounting Data ( String upto 150 characters )";
$recordTable{STOP}[144][0][2] = "Egress RTP Packetization Time [Decimal value from 10 to 40] Length of RTP packet in milliseconds. Egress leg of the call must be IP for this field to be applicable.";
$recordTable{STOP}[145][0][2] = "Egress Number of Audio Bytes Sent [Decimal Representation of 64 Bit Number, i.e 1 to 1.844674407 * 10^19] Applicable only to IP calls whose egress leg contained a DSP resource.";
$recordTable{STOP}[146][0][2] = "Egress Number of Audio Packets Sent [Decimal Representation of 64 Bit Number, i.e 1 to 1.844674407 * 10^19] Applicable only to IP calls whose egress leg contained a DSP resource.";
$recordTable{STOP}[147][0][2] = "Egress Number of Audio Bytes Rcvd [Decimal Representation of 64 Bit Number, i.e 1 to 1.844674407 * 10^19] Applicable only to IP calls whose egress leg contained a DSP resource.";
$recordTable{STOP}[148][0][2] = "Egress Number of Audio Packets Rcvd. [Decimal Representation of 64 Bit Number, i.e 1 to 1.844674407 * 10^19] Applicable only to IP calls whose egress leg contained a DSP resource.";
$recordTable{STOP}[149][0][2] = "Egress Number of packets recorded as lost [Decimal representation of a 32 bit number] RTP statistics; Applicable only to IP calls whose egress leg contained a DSP resource.";
$recordTable{STOP}[150][0][2] = "Egress maximum interarrival packet jitter experienced in a call 	 [Decimal - 16 bit value in millisecond units] RTP statistics; Applicable only to IP calls whose egress leg contained a DSP resource.";
$recordTable{STOP}[151][0][2] = "Egress last measurement for latency (RTCP statistics, applicable only egress leg is IP) [Decimal - 16 bit value in millisecond units]";
$recordTable{STOP}[152][0][2] = "Ingress Maximum Packet Outage [Decimal - 16 bit value in millisecond units] Maximum duration between received packets. Applicable only to IP calls whose ingress leg contained a DSP resource.";
$recordTable{STOP}[153][0][2] = "Egress Maximum Packet Outage [Decimal - 16 bit value in millisecond units] Maximum duration between received packets. Applicable only to IP calls whose egress leg contained a DSP resource.";
$recordTable{STOP}[154][0][2] = "Ingress Packet Playout Buffer Quality [Byte array, see DSP Timeseries table] Applicable only to IP calls whose ingress leg contained a DSP resource.";
$recordTable{STOP}[155][0][2] = "Egress Packet Playout Buffer Quality [Byte array, see DSP Timeseries table] Applicable only to IP calls whose egress leg contained a DSP resource.";
$recordTable{STOP}[156][0][2] = "Call Supervision Type ( enum CPC_CALL_SUPERVISION_TYPE_ENUM. 0=Disabled, 1=HW Answer, 2=SW Answer )";
$recordTable{STOP}[157][0][2] = "Ingress SIP Feature Specific Data (FSD) [See SREF/SREPL Table at end for values]";
$recordTable{STOP}[158][0][2] = "Egress SIP Feature Specific Data (FSD) [See SREF/SREPL Table at end for values]";
$recordTable{STOP}[159][0][2] = "Network Transfer Feature Specific Data (FSD) [See NWXF Table at end for values]";
$recordTable{STOP}[160][0][2] = "Call Condition ( decimal value from 0 to 39, or empty ) Call Condition provides the cirteria for determining AMA call type value for billing records. It's determined by the PSX based on the type of call along with other network information( Terminating, Inter/Intra Network). [see Call Condition Table at end for values]";
$recordTable{STOP}[161][0][2] = "Toll Indicator ( Decimal value, range 0 to 64, or empty) Provides the toll indication for the call as determined by the PSX. [see Toll Indicator table at end for values]";
$recordTable{STOP}[162][0][2] = "Generic Number ( number, string up to 30 characters or empty) This field contains the digits from the Generic number, i.e. the \"number\" subfield. This field is presented based on the ISUP signaling received at the gateway, e.g. ISUP IAM, SGM. Note: The \"Generic Address Parameter\" field refers to Called Party Number for LNP translation. The meaning of this Generic Number field is based on the Generic Number Type. For example, if the Generic Number Type sets to CPC_ADDR_GAP_CALLING_NUMBER, it refers to the \"Additional Calling Party Number\".";
$recordTable{STOP}[163][0][2] = "Generic Number Presentation Restriction Indicator ( Enumeration, 1 chararacter or empty ) This field contains the Presentation Restriction Indicator from the Generic number. Enum of CPC_ADDR_PRESENTATION_RESTRICTION_INDICATOR_ENUM.";
$recordTable{STOP}[164][0][2] = "Generic Number Numbering Plan ( Enumeration, 1-2 characters or empty ) This field contains the numbering plan from the Generic number. Enum of CPC_ADDR_NUMBERING_PLAN_ENUM";
$recordTable{STOP}[165][0][2] = "Generic Number Nature of Address ( Enumeration, 1-3 characters or empty ) This field contains the Nature of Address from the Generic number. Enum of CPC_ADDR_NATURE_OF_ADDR_ENUM";
$recordTable{STOP}[166][0][2] = "Generic Number Type ( Enumeration, 1-2 characters or empty ) This field contains the Generic Number Type from the Generic Number (e.g., when the Generic Number Type sets to 9, the Generic Number fields present the \"Additional Calling Party Number\"). This field is presented based on the ISUP signaling received at the gateway, e.g, ISUP IAM, SGM.";
$recordTable{STOP}[167][0][2] = "Originating Trunk Type ( KDDI specific raw hex data, 2 chars ) This field contains one byte hex code representing the originating trunk type as specified by customer. This field is associated with the corresponding field of trunk group screen on PSX.";
$recordTable{STOP}[168][0][2] = "Terminating Trunk Type ( KDDI specific raw hex data, 2 chars ) This field contains one byte hex code representing the terminating trunk type as specified by customer. This field is associated with the corresponding field of trunk group screen on PSX.";
$recordTable{STOP}[169][0][2] = "Remote GSX Billing Indicator ( BOOLEAN, 0 or 1 or empty ) This optional CAM field indicates whether a CDR record includes billing info from remote GSX for GSX-GSX calls. This field is empty by default since \"Remote GSX Info Propagation\" feature is disabled by default. When \"\"Remote GSX Info Propagation\" feature is enabled, this field is present with TRUE or FALSE. Value 0 indicates this CDR record do not contain billing info from destination GSX. 1 indicates this CDR record contains billing info from both originating GSX and destination GSX. Note: When this indicator is set to 1(TRUE), then the following fields contain billing info of destination GSX instead of this GSX. --- \"Egress PSTN Circuit End Point\" STOP-37 --- \"Egress IP Circuit End Point\" STOP-38 --- \"Egress Signaling Type\" STOP-54 --- \"Egress PVSD\" STOP-69 --- \"Call Disconnect Reason Transmitted to Egress\" STOP-122 --- \"Modem Tone Type\" STOP-190 --- \"Modem Tone Signal Level\" STOP-191 ";
$recordTable{STOP}[170][0][2] = "VPN Calling Private Presence Number ( 0-30 characters ) This field contains VPN Calling Private Presence Number for VPN originated calls. This field comes from the PSX Policy Response. This field is only populated for VPN generated calls and is empty for all other calls.";
$recordTable{STOP}[171][0][2] = "VPN Calling Public Presence Number ( 0-30 characters ) This field contains VPN Calling Public Presence Number for VPN originated calls in E-164 format. This field comes from the PSX Policy Response. This field is only populated for VPN  generated calls and is empty for all other calls.";
$recordTable{STOP}[172][0][2] = "Furnish Charging Info (0-800 hexadecimal characters ) This field contains external Furnish Charging Info provided by SCP. Field is populated as it's original ASN.1 binary format across PSX-GSX and within GSX DS/CC/CAM to reduce the traffic and ICM/memory usage. Each byte of binary data is represented as two hexadecimal characters by CAM during ASCII CDR formatting.";
$recordTable{STOP}[173][0][2] = "Ingress Policing Discards [Decimal Representation of 64 Bit Number, i.e 1 to 1.844674407 * 10^19] This field contains the number of ingress packets discarded due to policing. ";
$recordTable{STOP}[174][0][2] = "Egress Policing Discards [Decimal Representation of 64 Bit Number, i.e 1 to 1.844674407 * 10^19] This field contains the number of egress packets discarded due to policing.";
$recordTable{STOP}[175][0][2] = "Announcement Id ( Decimal value between 1- 65535 ) This field contains the ID of the last announcement played by the GSX on this call.		 ";
$recordTable{STOP}[176][0][2] = "Network Data - Source Information ( Enumeration, 1-2 characters ) This field contains the Source Informtaion type from the Network Data (C3/E0) parameter in the IAM message.";
$recordTable{STOP}[177][0][2] = "Network Data - Partition ID (Decimal value between 0 - 4095 ) This field contains the Partition ID used from the Network Data (C3/E0) parameter in the IAM message.";
$recordTable{STOP}[178][0][2] = "Network Data - Network ID (Decimal value between 0 - 32767 ) This field contains the Network ID used from the Network Data (C3/E0) parameter in the IAM message.";
$recordTable{STOP}[179][0][2] = "Network Data - NCOS (Decimal value between 0 - 65536 ) This field contains the NCOS used from the Network Data (C3/E0) parameter in the IAM message.";
$recordTable{STOP}[180][0][2] = "Ingress sRTP/sRTCP (Secure RTP/RTCP) See sRTP/sRTCP CDR description below.";
$recordTable{STOP}[181][0][2] = "Egress sRTP/sRTCP (Secure RTP/RTCP) See sRTP/sRTCP CDR description below.	 ";
$recordTable{STOP}[182][0][2] = "ISDN Access Indicator ( Decimal value from 0 to 1. 0=ISUP Not Used all the way, 1=ISUP Used all the way ) ISDN Access Indicator value from the Forward Call Indicator parameter. This is presented as an optional parameter in the incoming signaling, e.g. ISUP IAM, ISDN SETUP, or SIP INVITE.";
$recordTable{STOP}[183][0][2] = "Call Disconnect Location. ( Enumeration, decimal value of CPC_OP_CAUSE_LOCATION_STANDARD_ENUM. See Disconnect Location Table at end for values] The Location value from the Cause Indicator parameter in the ISUP REL message. When the call is released by the network, this field will contain the Location value from the Cause Indicator received by the GSX. When the GSX initiates the release, this field will contain the Location value in the Cause Indicator generated by the GSX.";
$recordTable{STOP}[184][0][2] = "Call Disconnect Location Transmitted to Ingress. [Enumeration, decimal value of CPC_OP_CAUSE_LOCATION_STANDARD_ENUM. See Disconnect Location Table at end for values] The Location value from the Cause Indicator parameter in the ISUP REL message sent to the ingress network. ";
$recordTable{STOP}[185][0][2] = "Call Disconnect Location Transmitted to Egress. [Enumeration, decimal value of CPC_OP_CAUSE_LOCATION_STANDARD_ENUM. See Disconnect Location Table at end for values] The Location value from the Cause Indicator parameter in the ISUP REL message sent to the egress network. ";
$recordTable{STOP}[186][0][2] = "Network Call Reference - Call Identity (Decimal Value, range 0-16777215, or empty) This filed contains the Call Identity from the Network Call Reference parameter in the IAM message, used for billing.";
$recordTable{STOP}[187][0][2] = "Network Call Reference - Signaling Point Code (Decimal Value, range 0-16383, or empty) This filed contains the Signaling Point Code from the Network Call Reference parameter in the IAM message, used for billing.";
$recordTable{STOP}[188][0][2] = "Ingress ISUP MIME Protocol Specific Data ISUP protocol specific CDR data based on the contents of the ISUP mime data carried in SIP-I messages. See PCR1234.";
$recordTable{STOP}[189][0][2] = "Egress ISUP MIME Protocol Specific Data ISUP protocol specific CDR data based on the contents of the ISUP mime data carried in SIP-I messages. See PCR1234.";
$recordTable{STOP}[190][0][2] = "Modem Tone Type ( Decimal value: 1-4 ) This field contains the detected modem tone type while the call is terminated.	";
$recordTable{STOP}[191][0][2] = "Modem Tome Signal Level ( Decimal value between 0-36 ) This field contains the detected modem tone signal level while the call is terminated.";
$recordTable{STOP}[192][0][2] = "Video Data - A quoted comma separated string of the following sub-fields: Video Call Bandwidth Video Call Duration Ingress IP Video End Point Egress IP Video End Point Video Codec";
$recordTable{STOP}[193][0][2] = "Video Statistics - A quoted comma separated string of the following sub-fields: Ingress Number of Video Bytes Sent Ingress Number of Video Packets Sent Ingress Number of Video Bytes Received Ingress Number of Video Packets Received Ingress number of Video packets lost Ingress maximum Video packet outage Ingress Video policer discards Egress Number of Video Bytes Sent Egress Number of Video Packets Sent Egress Number of Video Bytes Received Egress Number of Video Packets Received Egress number of Video packets lost Egress maximum video packet outage Egress video policer discards  See \"Video Data CDR\" description of sub-fields below. ";
$recordTable{STOP}[194][0][2] = "SVS Customer (KDDI Global network specific) This field contains the trunk group number field from the K-ISUP Route Information parameter. See Pcr1624.";
$recordTable{STOP}[195][0][2] = "SVS Vendor - deprecated in 7.2.2 as part of Pcr1624 This field contains the terminating route information in KDDI Global network. See PCR1338.";
$recordTable{STOP}[196][0][2] = "Call To Test PSX This field will be used to determine is a call was made to a Test PSX";
$recordTable{STOP}[197][0][2] = "Psx Overlap Route Requests This field contains the Number of PSX dips by this call with the Called Party Number incomplete.";
$recordTable{STOP}[198][0][2] = "Call Setup Delay [String with double quote delimiters, i.e. \"232,878,30,1140\" length is up to 21 characters, including delimiters] Accounting data which is specific to the SIP-SIP call. See tables at end for detailed information.";
$recordTable{STOP}[198][1][2] = "Request Latency ( Decimal value between 0 - 999 )";
$recordTable{STOP}[198][2][2] = "Downstream Latency ( Decimal value between 0 - 99999 )";
$recordTable{STOP}[198][3][2] = "Response Latency ( Decimal value between 0 - 999 )";
$recordTable{STOP}[198][4][2] = "Upstream Latency ( Decimal value between 0 - 99999 )";
$recordTable{STOP}[199][0][2] = "Overload Status This field will be used to indicate the resource congestion level on the node or a server which processes the call.";
$recordTable{STOP}[200][0][2] = "Ingress Bicc Info This field will be used to indicate the Ingress Bicc Specific CDR Information ";
$recordTable{STOP}[201][0][2] = "Egress Bicc Info This field will be used to indicate the Egress Bicc Specific CDR Information ";
$recordTable{STOP}[202][0][2] = "Ingress DSP Data Bitmap This field will be used to indicate the Ingress DSP flags in the CDR Information";
$recordTable{STOP}[203][0][2] = "Egress DSP Data Bitmap This field will be used to indicate the Egress DSP flags in the CDR Information";
$recordTable{STOP}[204][0][2] = "Call Recorded Indicator e.g (Yes or No) Length is up to 3 characters";
$recordTable{STOP}[205][0][2] = "Call Recorded RTP Tx IP address e.g. (10.160.100.100 or 3ffe:1900:4545:3:200:f8ff:fe21:67cf) Length is up to 39 characters";
$recordTable{STOP}[206][0][2] = "Call Recorded RTP Tx Port Number e.g. (10002) Length is up to 5 characters";
$recordTable{STOP}[207][0][2] = "Call Recorded RTP Rv IP address e.g. (10.160.100.100 or 3ffe:1900:4545:3:200:f8ff:fe21:67cf) Length is up to 39 characters";
$recordTable{STOP}[208][0][2] = "Call Recorded RTP Rv Port Number e.g. (10003) Length is up to 5 characters";
$recordTable{STOP}[209][0][2] = "MLPP Precedence Level A field for reporting Precedence Level of the MLPP service, when service not enabled the field will be empty. 1=Flash Override  2=Flash  3=Immediate  4=Priority 5=Routine";
$recordTable{STOP}[210][0][2] = "MSRP Service Type This field describes the type of MSRP session that is being setup based on the SDP in the SIP INVITE message. An MSRP session could either be a File-transfer session or an IM session. 0=MSRP IM Session 1=MSRP File transfer session";
$recordTable{STOP}[211][0][2] = "NPUKK Special Routing Information (Hex, with 0x, 0x1,0x2,0x12,0x11,0x10) This is a one byte field received in the ingress IAM (or as configured in CLI) and  passed on to CC. Bit numbers 1,3 and 5 are of importance now and in future  other bits may be of use as well.	  ";
$recordTable{STOP}[212][0][2] = "NPUKK Customer or Carrier Identification This is a USHORT received in the ingress IAM (or as configured in CLI) with a  value ranging from 0 to 16383 and indicates the customer or the carrier number  associated with the incoming call. ";
$recordTable{STOP}[213][0][2] = "NPUKK ServiceType Identifier This is a one byte field received in the ingress IAM (or as configured in CLI) and  passed on to CC as it is. Values are expected from 0 to 127. ";
$recordTable{STOP}[214][0][2] = "NPSSP Special Handling Information (Hex, with 0x, 0x10 or 0x14 or 0x11 etc) This is a one byte field received in the ingress IAM and passed on to CC as it is.  Bit numbers 1 is of importance now and in future other bits may be of use as well. ";
$recordTable{STOP}[215][0][2] = "NPSSP ServiceType Identifier This is a one byte field received in the ingress IAM and passed on to CC as it is.  Values are expected from 0 to 127. ";
$recordTable{STOP}[216][0][2] = "Total ITX Charge Units (Decimal number ranging from 0 to 4294967295) Charge Units come as one byte field in the ITX message. During a call, several  ITX messages are expected. Total ITX Charge Units is the aggregate of these  charge units for the duration of the call.";
$recordTable{STOP}[217][0][2] = "Global Charge Reference (Up to 40 ASCII characters or Empty) This is a field of 20 byte long array used for CDR correlation. The bytes will be  output in hex format. Each byte would need two ASCII characters. ISUP Signaling  profile flag GCR should be supported on ingress or egress side.";
$recordTable{STOP}[218][0][2] = "IP Call Limit at ingress SIP Peer This field tells whether this call has arrived at the GSX from a particular peer for  which the CAC limit has already reached its maximum. (1) A \"SIP CAC Profile\" containing \"Call Overage Limit\" > 0 is configured and this  Cac Profile is attached to a SIP Peer. (2) A \"SIP CAC Profile\" containing \"Call Overage Limit\" > 0 is configured and this  	 Cac Profile is attached to a SIP Service group in \"Registrant CAC Profile\". 0=IP Call Limit not exceeded at ingress SIP Peer 1=IP Call Limit exceeded at ingress SIP Peer ";
$recordTable{STOP}[219][0][2] = "IP Call Limit at ingress IPTG This field tells whether this call has arrived at the GSX for a particular IP TG for  which the Call limit has already reached its maximum. An Ingress IP TG with  \"IP Oversubscription Factor\" > 0 is configured. 0=IP Call Limit not exceeded at ingress IPTG 1=IP Call Limit exceeded at ingress IPTG ";
$recordTable{STOP}[220][0][2] = "IP BW Limit at ingress IPTG This field tells whether this call has arrived at the GSX for a particular IP TG for  which the BW limit has already reached its maximum. An Ingress IP TG with  \"IP Oversubscription Factor\" > 0 is configured. 0=IP BW Limit not exceeded at ingress IPTG 1=IP BW Limit exceeded at ingress IPTG 	 ";
$recordTable{STOP}[221][0][2] = "IP Call Limit at egress SIP Peer This field tells whether this call is destined for a particular peer from GSX for  which the CAC limit has already reached its maximum. (1) A \"SIP CAC Profile\" containing \"Call Overage Limit\" > 0 is configured and  this CAC Profile is attached to a SIP Peer. (2) A \"SIP CAC Profile\" containing \"Call Overage Limit\" > 0 is configured and 	 this CAC Profile is attached to a SIP Service group in \"Registrant CAC Profile\". 0=IP Call Limit not exceeded at egress SIP Peer 1=IP Call Limit exceeded at egress SIP Peer ";
$recordTable{STOP}[222][0][2] = "IP Call Limit at egress IPTG This field tells whether this call destined for a particular IP TG for which the  Call limit has already reached its maximum. An Egress IP TG with  \"IP Oversubscription Factor\" > 0 is configured. 0=IP Call Limit not exceeded at egress IPTG 1=IP Call Limit exceeded at egress IPTG ";
$recordTable{STOP}[223][0][2] = "IP BW Limit at egress IPTG This field tells whether this call destined for a particular IP TG for which the  BW limit has already reached its maximum. An Egress IP TG with \"IP Oversubscription Factor\" > 0 is configured.  0=IP BW Limit not exceeded at egress IPTG 1=IP BW Limit exceeded at egress IPTG";
$recordTable{STOP}[224][0][2] = "RESERVED: PSX Name";
$recordTable{STOP}[225][0][2] = "RESERVED: No. of PSX tried ";
$recordTable{STOP}[226][0][2] = "RESERVED: Ingress Inbound R-Factor ";
$recordTable{STOP}[227][0][2] = "RESERVED: Ingress Outbound R-Factor ";
$recordTable{STOP}[228][0][2] = "RESERVED: Egress Inbound R-Factor ";
$recordTable{STOP}[229][0][2] = "RESERVED: Egress Outbound R-Factor ";
$recordTable{STOP}[230][0][2] = "Media Stream Data - A quoted comma separated string This field contains the media stream data for all the streams with the following sub-fields: (Number of streams,mediaType1, streamIndex1 ingress codec used1, ingress local IP1, ingress remote IP1, ingress SRTP info1, ingress bw1 egress codec used1, egress local IP1, egress remote IP1, egress SRTP info1, egress bw1, ingress private leg local EP1, ingress private leg remote EP1, egress private leg local EP1, egress private leg remote EP1, mediaType2, streamIndex2 ingress codec used2, ingress local IP2, ingress remote IP2, ingress SRTP info2, ingress bw2 egress codec used2, egress local IP2, egress remote IP2, egress SRTP info2, egress bw2, ingress private leg local EP2, ingress private leg remote EP2,  egress private leg local EP2, egress private leg remote EP2)";
$recordTable{STOP}[231][0][2] = "Media Stream Stats - A quoted comma separated string This field contains the media stream statistics for all the streams with the following sub-fields: (Number of streams, mediaType1, streamIndex1, ingress packetSent1, ingress packetReceived1, ingress octetSent1, ingress octetReceived1, ingress packetLost1, ingress packetDiscarded1, egress packetSent1, egress packetReceived1, egress octetSent1, egress octetReceived1, egress packetLost1, egress packetDiscarded1, mediaType2, streamIndex2, ingress packetSent2, ingress packetReceived2, ingress octetSent2, ingress octetReceived2, ingress packetLost2, ingress packetDiscarded2, egress packetSent2, egress packetReceived2, egress octetSent2, egress octetReceived2, egress packetLost2, egress packetDiscarded2 )";
$recordTable{STOP}[232][0][2] = "Transcoded Indicator . This field tells whether or not a session had been transcoded. ";
$recordTable{STOP}[233][0][2] = "Negotiated HD codec rate per legs. This field tells whether this actual negotiated bit rate of the HD codec leg(s) is used. ";
$recordTable{STOP}[234][0][2] = "Remote Ingress Audio RTCP Learned Metrics This field has the remote Audio RTCP statistics from ingress and egress endpoint recieved by NP See tables at end for detailed information. Ingress Packets Sent Ingress Octets Sent Ingress SSRC Ingress Fraction Lost Ingress Inter Arrival Jitter Ingress Cummulative Number of Packet Lost Ingress Extended Highest Sequence Number Ingress Round Trip Time";
$recordTable{STOP}[235][0][2] = "Remote Egress Audio RTCP Learned Metrics This field has the remote Audio RTCP statistics from ingress and egress endpoint recieved by NP See tables at end for detailed information. Egress Packets Sent Egress Octets Sent Egress SSRC Egress Fraction Lost Egress Inter Arrival Jitter Egress Cummulative Number of Packet Lost Egress Extended Highest Sequence Number Egress Round Trip Time";
$recordTable{STOP}[236][0][2] = "RESERVED: Final Route Label";
$recordTable{STOP}[237][0][2] = "MTA Information";
$recordTable{STOP}[238][0][2] = "VBR Common Billing Data";
$recordTable{STOP}[239][0][2] = "VBR Route Billing Data";
$recordTable{STOP}[240][0][2] = "Access Transfer Specific Data";
$recordTable{STOP}[241][0][2] = "Emergency Indicator This field tells whether this call is categorised as Emergency call. 1=Emergency Call";
$recordTable{STOP}[242][0][2] = "Ingress Dtls-Srtp: Dtls-Srtp Ingress status info";
$recordTable{STOP}[243][0][2] = "Egress Dtls-Srtp: Dtls-Srtp Egress status info";
$recordTable{STOP}[244][0][2] = "UE Roaming Status";
$recordTable{STOP}[245][0][2] = "Access Network Charging Information";
$recordTable{STOP}[246][0][2] = "Ingress Signaled Session Bandwidth in kbps";
$recordTable{STOP}[247][0][2] = "Ingress Rx Computed Session Bandwidth in kbps";
$recordTable{STOP}[248][0][2] = "Ingress Tx Computed Session Bandwidth in kbps";
$recordTable{STOP}[249][0][2] = "Ingress Configured Bandwidth Reduction Factor";
$recordTable{STOP}[250][0][2] = "Ingress Estimated Bandwidth Reduction Factor";
$recordTable{STOP}[251][0][2] = "Egress Signaled Session Bandwidth in kbps";
$recordTable{STOP}[252][0][2] = "Egress Rx Computed Session Bandwidth in kbps";
$recordTable{STOP}[253][0][2] = "Egress Tx Computed Session Bandwidth in kbps";
$recordTable{STOP}[254][0][2] = "Egress Configured Bandwidth Reduction Factor";
$recordTable{STOP}[255][0][2] = "Egress Estimated Bandwidth Reduction Factor";
$recordTable{STOP}[256][0][2] = "Additional Media Stream Statistics - ( - 1 Entries per stream - 2 Number of streams - 3 ingress lostPktBursts1 - 4 ingress lostPktSingles1 - 5 ingress codecParams1 - 6 egress lostPktBursts1 - 7 egress lostPktSingles1 - 8 egress codecParams1 - 9 transcode indicator1 - 10 ingress lostPktBursts2 - 11 ingress lostPktSingles2 - 12 ingress codecParams2 - 13 egress lostPktBursts2 - 14 egress lostPktSingles2 - 15 egress codecParams2 - 16 transcode indicator2 - 17 ingress lostPktBursts3 - 18 ingress lostPktSingles3 - 19 ingress codecParams3  - 20 egress lostPktBursts3 - 21 egress lostPktSingles3 - 22 egress codecParams3 - 23 transcode indicator3 - 24 ingress lostPktBursts4 - 25 ingress lostPktSingles4 - 26 ingress codecParams4 - 27 egress lostPktBursts4 - 28 egress lostPktSingles4 - 29 egress codecParams4 - 30 transcode indicator4 - 31 ingress lostPktBursts5 - 32 ingress lostPktSingles5 - 33 ingress codecParams5 - 34 egress lostPktBursts5 - 35 egress lostPktSingles5 - 36 egress codecParams5 - 37 transcode indicator5 - 38 ingress lostPktBursts6 - 39 ingress lostPktSingles6 - 40 ingress codecParams6 - 41 egress lostPktBursts6 - 42 egress lostPktSingles6 - 43 egress codecParams6 - 44 transcode indicator6";
$recordTable{STOP}[257][0][2] = "Ingress Zone Name";
$recordTable{STOP}[258][0][2] = "Egress Zone Name";
$recordTable{STOP}[259][0][2] = "Ingress Zone ID";
$recordTable{STOP}[260][0][2] = "Egress Zone ID";
$recordTable{STOP}[261][0][2] = "Video CAC";
$recordTable{STOP}[262][0][2] = "Ingress IpPrefix TgName";
$recordTable{STOP}[263][0][2] = "Transcode Resource Type";
$recordTable{STOP}[264][0][2] = "MRF INFORMATION - ( - 1 Signaling IP - 2 Signaling PORT)";
$recordTable{STOP}[266][0][2] = "Call Recorder 1 RTP Tx IP address e.g. (10.160.100.100 or 3ffe:1900:4545:3:200:f8ff:fe21:67cf) Length is up to 39 characters";
$recordTable{STOP}[267][0][2] = "Call Recorder 1 RTP Tx Port Number e.g. (10002) Length is up to 5 characters";
$recordTable{STOP}[268][0][2] = "Call Recorder 1 RTP Rx IP address e.g. (10.160.100.100 or 3ffe:1900:4545:3:200:f8ff:fe21:67cf) Length is up to 39 characters";
$recordTable{STOP}[269][0][2] = "Call Recorder 1 RTP Rx Port Number e.g. (10003) Length is up to 5 characters";
$recordTable{STOP}[270][0][2] = "Call Recorder 2 RTP Tx IP address  e.g. (10.160.100.100 or 3ffe:1900:4545:3:200:f8ff:fe21:67cf) Length is up to 39 characters";
$recordTable{STOP}[271][0][2] = "Call Recorder 2 RTP Tx Port Number  e.g. (10002) Length is up to 5 characters";
$recordTable{STOP}[272][0][2] = "Call Recorder 2 RTP Rx IP address  e.g. (10.160.100.100 or 3ffe:1900:4545:3:200:f8ff:fe21:67cf) Length is up to 39 characters";
$recordTable{STOP}[273][0][2] = "Call Recorder 2 RTP Rx Port Number  e.g. (10003) Length is up to 5 characters";
$recordTable{STOP}[274][0][2] = "Call Recorder 3 RTP Tx IP address  e.g. (10.160.100.100 or 3ffe:1900:4545:3:200:f8ff:fe21:67cf) Length is up to 39 characters";
$recordTable{STOP}[275][0][2] = "Call Recorder 3 RTP Tx Port Number  e.g. (10002) Length is up to 5 characters";
$recordTable{STOP}[276][0][2] = "Call Recorder 3 RTP Rx IP address  e.g. (10.160.100.100 or 3ffe:1900:4545:3:200:f8ff:fe21:67cf) Length is up to 39 characters";
$recordTable{STOP}[277][0][2] = "Call Recorder 3 RTP Rx Port Number  e.g. (10003) Length is up to 5 characters";
$recordTable{STOP}[278][0][2] = "Signaling Only Mode";
$recordTable{STOP}[279][0][2] = "Audio Stream Statistics - ( - 1 Entries per stream - 2 Number of streams - 3 ingress mosCq1 - 4 egress mosCq1 - 5 ingress mosCq2 - 6 egress mosCq2";
$recordTable{STOP}[280][0][2] = "Audio Stream RTCP-XR Voice Metric Statistics - ( - 1 Entries per stream - 2 Number of streams - 3 ingress pktLossRate1 - 4 ingress pktDiscardRate1 - 5 ingress pktBurstDensity1 - 6 ingress pktGapDensity1 - 7 ingress pktBurstDuration1 - 8 ingress pktGapDuration1 - 9 ingress roundTripTime1 - 10 ingress endSystemDelay1 - 11 ingress gapMinThreshold1 - 12 ingress jitterBufferAdaptive1 - 13 ingress jitterBufferRate1 - 14 ingress jitterNominalDelay1 - 15 ingress jitterMaxDelay1 - 16 ingress jitterAbsMaxDelay1 - 17 ingress rFactor1 - 18 ingress mosCq1 - 19 egress pktLossRate1 - 20 egress pktDiscardRate1 - 21 egress pktBurstDensity1 - 22 egress pktGapDensity1 - 23 egress pktBurstDuration1 - 24 egress pktGapDuration1 - 25 egress roundTripTime1 - 26 egress endSystemDelay1 - 27 egress gapMinThreshold1 - 28 egress jitterBufferAdaptive1 - 29 egress jitterBufferRate1 - 30 egress jitterNominalDelay1 - 31 egress jitterMaxDelay1 - 32 egress jitterAbsMaxDelay1 - 33 egress rFactor1 - 34 egress mosCq1 - 35 ingress pktLossRate2 - 36 ingress pktDiscardRate2 - 37 ingress pktBurstDensity2 - 38 ingress pktGapDensity2 - 39 ingress pktBurstDuration2 - 40 ingress pktGapDuration2 - 41 ingress roundTripTime2 - 42 ingress endSystemDelay2 - 43 ingress gapMinThreshold2 - 44 ingress jitterBufferAdaptive2 - 45 ingress jitterBufferRate2 - 46 ingress jitterNominalDelay2 - 47 ingress jitterMaxDelay2 - 48 ingress jitterAbsMaxDelay2 - 49 ingress rFactor2 - 50 ingress mosCq2 - 51 egress pktLossRate2 - 52 egress pktDiscardRate2 - 53 egress pktBurstDensity2 - 54 egress pktGapDensity2 - 55 egress pktBurstDuration2 - 56 egress pktGapDuration2 - 57 egress roundTripTime2 - 58 egress endSystemDelay2 - 59 egress gapMinThreshold2 - 60 egress jitterBufferAdaptive2 - 61 egress jitterBufferRate2 - 62 egress jitterNominalDelay2 - 63 egress jitterMaxDelay2 - 64 egress jitterAbsMaxDelay2 - 65 egress rFactor2 - 66 egress mosCq2";
$recordTable{STOP}[281][0][2] = "Media Stream SRTP Statistics - ( - 1 Entries per stream - 2 Number of streams - 3 ingress authFailureCount1 - 4 ingress outsideReplayCount1 - 5 egress authFailureCount1 - 6 egress outsideReplayCount1 - 7 ingress authFailureCount2 - 8 ingress outsideReplayCount2 - 9 egress authFailureCount2 - 10 egress outsideReplayCount2 - 11 ingress authFailureCount3 - 12 ingress outsideReplayCount3 - 13 egress authFailureCount3 - 14 egress outsideReplayCount3 - 15 ingress authFailureCount4 - 16 ingress outsideReplayCount4 - 17 egress authFailureCount4 - 18 egress outsideReplayCount4 - 19 ingress authFailureCount5 - 20 ingress outsideReplayCount5 - 21 egress authFailureCount5 - 22 egress outsideReplayCount5 - 23 ingress authFailureCount6 - 24 ingress outsideReplayCount6 - 25 egress authFailureCount6 - 26 egress outsideReplayCount6";
$recordTable{STOP}[282][0][2] = "DSP insertion/rejection reason  - ( - 1 Entries per stream - 2 Number of streams - 3 ingress dspReason1 - 4 egress dspReason1 - 5 ingress dspReason2 - 6 egress dspReason2";
$recordTable{STOP}[283][0][2] = "Call Established Time";
$recordTable{STOP}[284][0][2] = "Over Flow Packets Count - (  -    1 ingress overFlowPacketsCount1 -  2 egress overFlowPacketsCount1 - 3 ingress overFlowPacketsCount2 - 4 egress overFlowPacketsCount2 - 5 ingress overFlowPacketsCount3 - 6 egress overFlowPacketsCount3 - 7 ingress overFlowPacketsCount4 - 8 egress overFlowPacketsCount4 - 9 ingress overFlowPacketsCount5 - 10 egress overFlowPacketsCount5 - 11 ingress overFlowPacketsCount6 - 12 egress overFlowPacketsCount6";

$recordTable{ATTEMPT}[1][0][1] = "Record Type";
$recordTable{ATTEMPT}[2][0][1] = "Gateway Name";
$recordTable{ATTEMPT}[3][0][1] = "Accounting ID";
$recordTable{ATTEMPT}[4][0][1] = "Start Time (system ticks)";
$recordTable{ATTEMPT}[5][0][1] = "Node Time Zone";
$recordTable{ATTEMPT}[6][0][1] = "Start Time (MM/DD/YYYY)";
$recordTable{ATTEMPT}[7][0][1] = "Start Time (HH/MM/SS.s)";
$recordTable{ATTEMPT}[8][0][1] = "Ticks from Setup Msg to Policy Response";
$recordTable{ATTEMPT}[9][0][1] = "Ticks from Setup Msg to Alert/Proc/Prog";
$recordTable{ATTEMPT}[10][0][1] = "Disconnect Time (HH:MM:SS.s)";
$recordTable{ATTEMPT}[11][0][1] = "Ticks from Disconnect to Call Termination";
$recordTable{ATTEMPT}[12][0][1] = "Call Disconnect Reason";
$recordTable{ATTEMPT}[13][0][1] = "Service Delivered";
$recordTable{ATTEMPT}[14][0][1] = "Call Direction";
$recordTable{ATTEMPT}[14][0][2] = "Call Direction - PSTN-TO-IP/PSTN-TO-PSTN/IP-TO-PSTN/PSTN-TO-TERM/IP-TO-TERM/ TERM-TO-PSTN/TERM-TO-IP/IP-TO-IP (up to 12 characters).";
$recordTable{ATTEMPT}[15][0][1] = "Service Provider";
$recordTable{ATTEMPT}[16][0][1] = "Transit Network Selection Code (TNS)";
$recordTable{ATTEMPT}[17][0][1] = "Calling Number";
$recordTable{ATTEMPT}[18][0][1] = "Called Number";
$recordTable{ATTEMPT}[19][0][1] = "Extra Called Address Digits";
$recordTable{ATTEMPT}[20][0][1] = "Number of Called Num Translations";
$recordTable{ATTEMPT}[21][0][1] = "Called Number Before Translation #1";
$recordTable{ATTEMPT}[22][0][1] = "Translation Type #1";
$recordTable{ATTEMPT}[23][0][1] = "Called Number Before Translation #2";
$recordTable{ATTEMPT}[24][0][1] = "Translation Type #2";
$recordTable{ATTEMPT}[25][0][1] = "Billing Number";
$recordTable{ATTEMPT}[26][0][1] = "Route Label";
$recordTable{ATTEMPT}[27][0][1] = "Route Attempt Number";
$recordTable{ATTEMPT}[28][0][1] = "Route Selected";
$recordTable{ATTEMPT}[29][0][1] = "Egress Local Signaling IP Address";
$recordTable{ATTEMPT}[30][0][1] = "Egress Remote Signaling IP Address";
$recordTable{ATTEMPT}[31][0][1] = "Ingress Trunk Group Name";
$recordTable{ATTEMPT}[32][0][1] = "Ingress PSTN Circuit End Point";
$recordTable{ATTEMPT}[33][0][1] = "Ingress IP Circuit End Point";
$recordTable{ATTEMPT}[34][0][1] = "Egress PSTN Circuit End Point";
$recordTable{ATTEMPT}[35][0][1] = "Egress IP Circuit End Point";
$recordTable{ATTEMPT}[36][0][1] = "Originating Line Information (OLIP)";
$recordTable{ATTEMPT}[37][0][1] = "Jurisdiction Information Parameter (JIP)";
$recordTable{ATTEMPT}[38][0][1] = "Carrier Code";
$recordTable{ATTEMPT}[39][0][1] = "Call Group ID";
$recordTable{ATTEMPT}[40][0][1] = "Script Log Data";
$recordTable{ATTEMPT}[41][0][1] = "Ticks from Setup Msg to Rx of EXM";
$recordTable{ATTEMPT}[42][0][1] = "Ticks from Setup Msg to Generation of EXM";
$recordTable{ATTEMPT}[43][0][1] = "Calling Party Nature of Address";
$recordTable{ATTEMPT}[44][0][1] = "Called Party Nature of Address";
$recordTable{ATTEMPT}[45][0][1] = "Ingress Protocol Variant Specific Data";
$recordTable{ATTEMPT}[46][0][1] = "Ingress Signaling Type";
$recordTable{ATTEMPT}[47][0][1] = "Egress Signaling Type";
$recordTable{ATTEMPT}[48][0][1] = "Ingress Far End Switch Type";
$recordTable{ATTEMPT}[49][0][1] = "Egress Far End Switch Type";
$recordTable{ATTEMPT}[50][0][1] = "Carrier Code of Carrier who Owns iTG Far End";
$recordTable{ATTEMPT}[51][0][1] = "Carrier Code of Carrier who Owns eTG Far End";
$recordTable{ATTEMPT}[52][0][1] = "Calling Party Category";
$recordTable{ATTEMPT}[53][0][1] = "Dialed Number";
$recordTable{ATTEMPT}[54][0][1] = "Carrier Selection Information";
$recordTable{ATTEMPT}[55][0][1] = "Called Number Numbering Plan";
$recordTable{ATTEMPT}[56][0][1] = "Generic Address Parameter";
$recordTable{ATTEMPT}[57][0][1] = "Disconnect Initiator";
$recordTable{ATTEMPT}[58][0][1] = "Egress Trunk Group Name";
$recordTable{ATTEMPT}[59][0][1] = "Egress Protocol Variant Specific Data";
$recordTable{ATTEMPT}[60][0][1] = "Incoming Calling Number";
$recordTable{ATTEMPT}[61][0][1] = "AMA Call Type";
$recordTable{ATTEMPT}[62][0][1] = "Message Billing Indicator (MBI)";
$recordTable{ATTEMPT}[63][0][1] = "LATA";
$recordTable{ATTEMPT}[64][0][1] = "Route Index Used";
$recordTable{ATTEMPT}[65][0][1] = "Calling Party Presentation Restriction";
$recordTable{ATTEMPT}[66][0][1] = "Incoming ISUP Charge Number";
$recordTable{ATTEMPT}[67][0][1] = "Incoming ISUP Nature Of Address";
$recordTable{ATTEMPT}[68][0][1] = "Dialed Number Nature of Address";
$recordTable{ATTEMPT}[69][0][1] = "Ingress Codec Info";
$recordTable{ATTEMPT}[70][0][1] = "Egress Codec Info";
$recordTable{ATTEMPT}[71][0][1] = "Ingress RTP Packetization Time";
$recordTable{ATTEMPT}[72][0][1] = "Global Call ID (GCID)";
$recordTable{ATTEMPT}[73][0][1] = "Terminated With Script Execution";
$recordTable{ATTEMPT}[74][0][1] = "Originator Echo Cancellation";
$recordTable{ATTEMPT}[75][0][1] = "Terminator Echo Cancellation";
$recordTable{ATTEMPT}[76][0][1] = "Charge Flag";
$recordTable{ATTEMPT}[77][0][1] = "AMA slp ID";
$recordTable{ATTEMPT}[78][0][1] = "AMA BAF Module";
$recordTable{ATTEMPT}[79][0][1] = "AMA Set Hex AB Indication";
$recordTable{ATTEMPT}[80][0][1] = "Service Feature ID";
$recordTable{ATTEMPT}[81][0][1] = "FE Parameter";
$recordTable{ATTEMPT}[82][0][1] = "Satellite Indicator";
$recordTable{ATTEMPT}[83][0][1] = "PSX Billing Info";
$recordTable{ATTEMPT}[84][0][1] = "Originating TDM Trunk Group Type";
$recordTable{ATTEMPT}[85][0][1] = "Terminating TDM Trunk Group Type";
$recordTable{ATTEMPT}[86][0][1] = "Ingress Trunk Member Number";
$recordTable{ATTEMPT}[87][0][1] = "Egress Trunk Group ID";
$recordTable{ATTEMPT}[88][0][1] = "Egress Switch ID";
$recordTable{ATTEMPT}[89][0][1] = "Ingress Local ATM Address";
$recordTable{ATTEMPT}[90][0][1] = "Ingress Remote ATM Address";
$recordTable{ATTEMPT}[91][0][1] = "Egress Local ATM Address";
$recordTable{ATTEMPT}[92][0][1] = "Egress Remote ATM Address";
$recordTable{ATTEMPT}[93][0][1] = "PSX Call Type";
$recordTable{ATTEMPT}[94][0][1] = "Outgoing Route Trunk Group ID";
$recordTable{ATTEMPT}[95][0][1] = "Outgoing Route Message ID";
$recordTable{ATTEMPT}[96][0][1] = "Incoming Route ID";
$recordTable{ATTEMPT}[97][0][1] = "Calling Name";
$recordTable{ATTEMPT}[98][0][1] = "Calling Name Type";
$recordTable{ATTEMPT}[99][0][1] = "Incoming Calling Party Numbering Plan";
$recordTable{ATTEMPT}[100][0][1] = "Outgoing Calling Party Numbering Plan";
$recordTable{ATTEMPT}[101][0][1] = "Calling Party Business Group ID";
$recordTable{ATTEMPT}[102][0][1] = "Called Party Business Group ID";
$recordTable{ATTEMPT}[103][0][1] = "Calling Party PPDN";
$recordTable{ATTEMPT}[104][0][1] = "Ticks from Setup Msg to Last Route Attempt";
$recordTable{ATTEMPT}[105][0][1] = "Disconnect Time (MM/DD/YYYY)";
$recordTable{ATTEMPT}[106][0][1] = "Billing Number Nature of Address";
$recordTable{ATTEMPT}[107][0][1] = "Incoming Calling Number Nature of Address";
$recordTable{ATTEMPT}[108][0][1] = "Egress Trunk Member Number";
$recordTable{ATTEMPT}[109][0][1] = "Selected Route Type";
$recordTable{ATTEMPT}[110][0][1] = "Cumulative Route Index";
$recordTable{ATTEMPT}[111][0][1] = "Call Disconnect Reason Sent to Ingress";
$recordTable{ATTEMPT}[112][0][1] = "Call Disconnect Reason Sent to Egress";
$recordTable{ATTEMPT}[113][0][1] = "ISDN PRI Calling Party Subaddress";
$recordTable{ATTEMPT}[114][0][1] = "Outgoing Trunk Group Number in EXM";
$recordTable{ATTEMPT}[115][0][1] = "Ingress Local Signaling IP Address";
$recordTable{ATTEMPT}[116][0][1] = "Ingress Remote Signaling IP Address";
$recordTable{ATTEMPT}[117][0][1] = "Record Sequence Number";
$recordTable{ATTEMPT}[118][0][1] = "Transmission Medium Requirement";
$recordTable{ATTEMPT}[119][0][1] = "Information Transfer Rate";
$recordTable{ATTEMPT}[120][0][1] = "USI User Info Layer 1";
$recordTable{ATTEMPT}[121][0][1] = "Unrecognized Raw ISUP Calling Party Category";
$recordTable{ATTEMPT}[122][0][1] = "FSD: Release Link Trunking";
$recordTable{ATTEMPT}[123][0][1] = "FSD: Two B-Channel Transfer";
$recordTable{ATTEMPT}[124][0][1] = "Calling Party Business Unit";
$recordTable{ATTEMPT}[125][0][1] = "Called Party Business Unit";
$recordTable{ATTEMPT}[126][0][1] = "FSD: Redirecting";
$recordTable{ATTEMPT}[127][0][1] = "FSD: Ingress Release Link Trunking";
$recordTable{ATTEMPT}[128][0][1] = "PSX Index";
$recordTable{ATTEMPT}[129][0][1] = "PSX Congestion Level";
$recordTable{ATTEMPT}[130][0][1] = "PSX Processing Time (milliseconds)";
$recordTable{ATTEMPT}[131][0][1] = "Script Name";
$recordTable{ATTEMPT}[132][0][1] = "Ingress External Accounting Data";
$recordTable{ATTEMPT}[133][0][1] = "Egress External Accounting Data";
$recordTable{ATTEMPT}[134][0][1] = "Egress RTP Packetization Time";
$recordTable{ATTEMPT}[135][0][1] = "Answer Supervision Type";
$recordTable{ATTEMPT}[136][0][1] = "Ingress Sip Refer & Replaces Feature Specific Data";
$recordTable{ATTEMPT}[137][0][1] = "Egress Sip Refer Feature Specific Data";
$recordTable{ATTEMPT}[138][0][1] = "Network Transfers Feature Specific Data";
$recordTable{ATTEMPT}[139][0][1] = "Call Condition";
$recordTable{ATTEMPT}[140][0][1] = "Toll Indicator";
$recordTable{ATTEMPT}[141][0][1] = "Generic Number ( Number )";
$recordTable{ATTEMPT}[142][0][1] = "Generic Number Presentation Restriction Indicator";
$recordTable{ATTEMPT}[143][0][1] = "Generic Number Numbering Plan";
$recordTable{ATTEMPT}[144][0][1] = "Generic Number Nature of Address";
$recordTable{ATTEMPT}[145][0][1] = "Generic Number Type";
$recordTable{ATTEMPT}[146][0][1] = "Final Attempt Indicator";
$recordTable{ATTEMPT}[147][0][1] = "Originating Trunk Type";
$recordTable{ATTEMPT}[148][0][1] = "Terminating Trunk Type";
$recordTable{ATTEMPT}[149][0][1] = "Remote GSX Billing Indicator";
$recordTable{ATTEMPT}[150][0][1] = "Extra Disconnect Reason";
$recordTable{ATTEMPT}[151][0][1] = "VPN Calling Private Presence Number";
$recordTable{ATTEMPT}[152][0][1] = "VPN Calling Public Presence Number";
$recordTable{ATTEMPT}[153][0][1] = "External Furnish Charging Info";
$recordTable{ATTEMPT}[154][0][1] = "Announcement Id";
$recordTable{ATTEMPT}[155][0][1] = "Network Data - Source Information";
$recordTable{ATTEMPT}[156][0][1] = "Network Data - Partition ID";
$recordTable{ATTEMPT}[157][0][1] = "Network Data - Network ID";
$recordTable{ATTEMPT}[158][0][1] = "Network Data - NCOS";
$recordTable{ATTEMPT}[159][0][1] = "ISDN access Indicator";
$recordTable{ATTEMPT}[160][0][1] = "Call Disconnect Location";
$recordTable{ATTEMPT}[161][0][1] = "Call Disconnect Location Transmitted to Ingress";
$recordTable{ATTEMPT}[162][0][1] = "Call Disconnect Location Transmitted to Egress";
$recordTable{ATTEMPT}[163][0][1] = "Network Call Reference - Call Identity";
$recordTable{ATTEMPT}[164][0][1] = "Network Call Reference - Signaling Point Code";
$recordTable{ATTEMPT}[165][0][1] = "Ingress MIME Protocol Variant Specific Data";
$recordTable{ATTEMPT}[166][0][1] = "Egress MIME Protocol Variant Specific Data";
$recordTable{ATTEMPT}[167][0][1] = "Video Data - Video Bandwidth, Video Call Duration,Ingress/Egress IP video Endpoint";
$recordTable{ATTEMPT}[168][0][1] = "SVS Customer";
$recordTable{ATTEMPT}[169][0][1] = "SVS Vendor - Deprecated in 7.2.2 as part of Pcr1624";
$recordTable{ATTEMPT}[170][0][1] = "Call To Test PSX";
$recordTable{ATTEMPT}[171][0][1] = "Psx Overlap Route Requests";
$recordTable{ATTEMPT}[172][0][1] = "Call Setup Delay";
$recordTable{ATTEMPT}[172][1][1] = "Request Latency (msec)";
$recordTable{ATTEMPT}[172][2][1] = "Downstream Latency (msec)";
$recordTable{ATTEMPT}[172][3][1] = "Response Latency (msec)";
$recordTable{ATTEMPT}[172][4][1] = "Upstream Latency (msec)";
$recordTable{ATTEMPT}[173][0][1] = "Overload Status";
$recordTable{ATTEMPT}[174][0][1] = "reserved";
$recordTable{ATTEMPT}[175][0][1] = "reserved";
$recordTable{ATTEMPT}[176][0][1] = "Mlpp Precedence Level";
$recordTable{ATTEMPT}[177][0][1] = "reserved";
$recordTable{ATTEMPT}[178][0][1] = "reserved";
$recordTable{ATTEMPT}[179][0][1] = "reserved";
$recordTable{ATTEMPT}[180][0][1] = "reserved";
$recordTable{ATTEMPT}[181][0][1] = "reserved";
$recordTable{ATTEMPT}[182][0][1] = "reserved";
$recordTable{ATTEMPT}[183][0][1] = "reserved";
$recordTable{ATTEMPT}[184][0][1] = "reserved";
$recordTable{ATTEMPT}[185][0][1] = "Global Charge Reference";
$recordTable{ATTEMPT}[186][0][1] = "reserved for 3xx Contact Information";
$recordTable{ATTEMPT}[187][0][1] = "reserved for PSX Name";
$recordTable{ATTEMPT}[188][0][1] = "reserved for No of PSX tried";
$recordTable{ATTEMPT}[189][0][1] = "reserved for Final Route Label";
$recordTable{ATTEMPT}[190][0][1] = "MTA Information";
$recordTable{ATTEMPT}[190][1][1] = "Origination Primary";
$recordTable{ATTEMPT}[190][2][1] = "Origination Secondary";
$recordTable{ATTEMPT}[190][3][1] = "Destination Primary";
$recordTable{ATTEMPT}[190][4][1] = "Destination Secondary";
$recordTable{ATTEMPT}[191][0][1] = "VBR Common Billing Data";
$recordTable{ATTEMPT}[192][0][1] = "VBR Route Billing Data";
$recordTable{ATTEMPT}[193][0][1] = "Access Transfer Specific Data";
$recordTable{ATTEMPT}[193][1][1] = "Feature ID";
$recordTable{ATTEMPT}[193][2][1] = "Transfer Type";
$recordTable{ATTEMPT}[193][3][1] = "Source access GCID";
$recordTable{ATTEMPT}[193][4][1] = "Traget access GCID";
$recordTable{ATTEMPT}[193][5][1] = "Original Calling Number";
$recordTable{ATTEMPT}[193][6][1] = "Original Called Number";
$recordTable{ATTEMPT}[194][0][1] = "Emergency Indicator";
$recordTable{ATTEMPT}[195][0][1] = "UE Roaming Status";
$recordTable{ATTEMPT}[196][0][1] = "Access Network Charging Information";
$recordTable{ATTEMPT}[197][0][1] = "Ingress Zone Name";
$recordTable{ATTEMPT}[198][0][1] = "Egress Zone Name";
$recordTable{ATTEMPT}[199][0][1] = "Ingress Zone Id";
$recordTable{ATTEMPT}[200][0][1] = "Egresss Zone Id";
$recordTable{ATTEMPT}[201][0][1] = "Ingress IpPrefix TgName ";
$recordTable{ATTEMPT}[202][0][1] = "Additional Media Stream Statistics";
$recordTable{ATTEMPT}[202][1][1] = "Entries per stream";
$recordTable{ATTEMPT}[202][2][1] = "Number of streams";
$recordTable{ATTEMPT}[202][3][1] = "ingress lostPktBursts1";
$recordTable{ATTEMPT}[202][4][1] = "ingress lostPktSingles1";
$recordTable{ATTEMPT}[202][5][1] = "ingress codecParams1";
$recordTable{ATTEMPT}[202][6][1] = "egress lostPktBursts1";
$recordTable{ATTEMPT}[202][7][1] = "egress lostPktSingles1";
$recordTable{ATTEMPT}[202][8][1] = "egress codecParams1";
$recordTable{ATTEMPT}[202][9][1] = "transcode indicator1";
$recordTable{ATTEMPT}[202][10][1] = "ingress lostPktBursts2";
$recordTable{ATTEMPT}[202][11][1] = "ingress lostPktSingles2";
$recordTable{ATTEMPT}[202][12][1] = "ingress codecParams2";
$recordTable{ATTEMPT}[202][13][1] = "egress lostPktBursts2";
$recordTable{ATTEMPT}[202][14][1] = "egress lostPktSingles2";
$recordTable{ATTEMPT}[202][15][1] = "egress codecParams2";
$recordTable{ATTEMPT}[202][16][1] = "transcode indicator2";
$recordTable{ATTEMPT}[202][17][1] = "ingress lostPktBursts3";
$recordTable{ATTEMPT}[202][18][1] = "ingress lostPktSingles3";
$recordTable{ATTEMPT}[202][19][1] = "ingress codecParams3";
$recordTable{ATTEMPT}[202][20][1] = "egress lostPktBursts3";
$recordTable{ATTEMPT}[202][21][1] = "egress lostPktSingles3";
$recordTable{ATTEMPT}[202][22][1] = "egress codecParams3";
$recordTable{ATTEMPT}[202][23][1] = "transcode indicator3";
$recordTable{ATTEMPT}[202][24][1] = "ingress lostPktBursts4";
$recordTable{ATTEMPT}[202][25][1] = "ingress lostPktSingles4";
$recordTable{ATTEMPT}[202][26][1] = "ingress codecParams4";
$recordTable{ATTEMPT}[202][27][1] = "egress lostPktBursts4";
$recordTable{ATTEMPT}[202][28][1] = "egress lostPktSingles4";
$recordTable{ATTEMPT}[202][29][1] = "egress codecParams4";
$recordTable{ATTEMPT}[202][30][1] = "transcode indicator4";
$recordTable{ATTEMPT}[202][31][1] = "ingress lostPktBursts5";
$recordTable{ATTEMPT}[202][32][1] = "ingress lostPktSingles5";
$recordTable{ATTEMPT}[202][33][1] = "ingress codecParams5";
$recordTable{ATTEMPT}[202][34][1] = "egress lostPktBursts5";
$recordTable{ATTEMPT}[202][35][1] = "egress lostPktSingles5";
$recordTable{ATTEMPT}[202][36][1] = "egress codecParams5";
$recordTable{ATTEMPT}[202][37][1] = "transcode indicator5";
$recordTable{ATTEMPT}[202][38][1] = "ingress lostPktBursts6";
$recordTable{ATTEMPT}[202][39][1] = "ingress lostPktSingles6";
$recordTable{ATTEMPT}[202][40][1] = "ingress codecParams6";
$recordTable{ATTEMPT}[202][41][1] = "egress lostPktBursts6";
$recordTable{ATTEMPT}[202][42][1] = "egress lostPktSingles6";
$recordTable{ATTEMPT}[202][43][1] = "egress codecParams6";
$recordTable{ATTEMPT}[202][44][1] = "transcode indicator6";
$recordTable{ATTEMPT}[203][0][1] = "Parent Call GCID ";
$recordTable{ATTEMPT}[204][0][1] = "Signaling Only Mode";
$recordTable{ATTEMPT}[205][0][1] = "DSP insertion/rejection reason";
$recordTable{ATTEMPT}[205][1][1] = "Entries per stream";
$recordTable{ATTEMPT}[205][2][1] = "Number of streams";
$recordTable{ATTEMPT}[205][3][1] = "ingress dspReason1";
$recordTable{ATTEMPT}[205][4][1] = "egress dspReason1";
$recordTable{ATTEMPT}[205][5][1] = "ingress dspReason2";
$recordTable{ATTEMPT}[205][6][1] = "egress dspReason2";
$recordTable{ATTEMPT}[206][0][1] = "Call Established Time";
$recordTable{ATTEMPT}[1][0][2] = "\"ATTEMPT\"";
$recordTable{ATTEMPT}[2][0][2] = "Gateway Name [String Up To 27 Characters]";
$recordTable{ATTEMPT}[3][0][2] = "Accounting ID (64 Bit in HEX format i.e 16 digits]";
$recordTable{ATTEMPT}[4][0][2] = "Start Time in System Ticks - Timestamp of when Setup Request was  received. [Decimal number from 0 to 4294967295] ";
$recordTable{ATTEMPT}[5][0][2] = "Node Time Zone [String up to 26 Characters long]";
$recordTable{ATTEMPT}[6][0][2] = "Start Time (mm/dd/yyyy) - Timestamp of when Setup Request was  received (GMT) [eg : 02/06/1999]";
$recordTable{ATTEMPT}[7][0][2] = "Start Time (hh:mm:ss.s) (GMT) [eg : 12:20:38.5]";
$recordTable{ATTEMPT}[8][0][2] = "Time Elapsed from Receipt of Setup Message to Policy Server/Sonus Softswitch Response in 10 ms Ticks [Decimal number from 0 to 4294967295]";
$recordTable{ATTEMPT}[9][0][2] = "Time Elapsed from Receipt of Setup Message to Receipt of Alerting/Proc/Prog in 10 ms Ticks [Decimal number from 0 to 4294967295]";
$recordTable{ATTEMPT}[10][0][2] = "Disconnect Time (hh:mm:ss.s) (GMT) [eg : 12:20:38.5]";
$recordTable{ATTEMPT}[11][0][2] = "Time Elapsed from Receipt of Disconnect to completion of Call  Termination in 10ms ticks. [Decimal number from 0 to 4294967295]";
$recordTable{ATTEMPT}[12][0][2] = "Call Disconnect Reason [1 to 255]";
$recordTable{ATTEMPT}[13][0][2] = "Service Delivered (VoIP/Circuit Switched Voice/VTOA) [String Up To 22 Characters]";
$recordTable{ATTEMPT}[14][0][2] = "Call Direction (PSTN-TO-IP/PSTN-TO-PSTN/IP-TO-PSTN/PSTN-TO-TERM/IP-TO-TERM/TERM-TO-IP/TERM-TO-PSTN/PSTN-TO-VTOA/VTOA-TO-PSTN/IP-TO-IP) [String up to 12 characters ]";
$recordTable{ATTEMPT}[15][0][2] = "Service Provider [String up to 23 characters]";
$recordTable{ATTEMPT}[16][0][2] = "Transit Network Selection Code [4 Digits] [ String up to 4 characters, for e.g 0288]";
$recordTable{ATTEMPT}[17][0][2] = "Calling Number [String up to 30 characters]";
$recordTable{ATTEMPT}[18][0][2] = "Called Number [String up to 30 characters]";
$recordTable{ATTEMPT}[19][0][2] = "Extra Called Address Digits [String up to 30 characters, not used in routing the call, received via Overlap Address Messages such as SAM]";
$recordTable{ATTEMPT}[20][0][2] = "Number of Called Num Translations done by this Node [Decimal number from 0 to 2]";
$recordTable{ATTEMPT}[21][0][2] = "Called Number Before Trans #1 [String up to 30 characters]";
$recordTable{ATTEMPT}[22][0][2] = "Translation Type - 1(0-None, 1-LNP, 2-TollFree, 3-Private, 4-Reserved)";
$recordTable{ATTEMPT}[23][0][2] = "Called Number Before Trans #2 [String up to 30 characters]";
$recordTable{ATTEMPT}[24][0][2] = "Translation Type - 2 (0-None, 1-LNP, 2-TollFree, 3-Private, 4-Reserved)";
$recordTable{ATTEMPT}[25][0][2] = "Billing Number [String up to 30 characters]";
$recordTable{ATTEMPT}[26][0][2] = "Route Label [String up to 23 characters]";
$recordTable{ATTEMPT}[27][0][2] = "Route Attempt Number [1 to 10]";
$recordTable{ATTEMPT}[28][0][2] = "Route Selected (GwInfo:TG Name) [string up to 51 characters] If the Gateway name is known, then GwInfo is the Gateway Name [string up to 27 characters] Else, GwInfo is the Gateway IP Address [ASCII IP address in dotted decimal format e.g 10.1.1.1, up to 15 Characters] TG Name is Trunk Group Name [string up to 23 characters]";
$recordTable{ATTEMPT}[29][0][2] = "Egress Local Signaling IP Address (Applicable only for PSTN-IP and IP-IP calls) [ASCII IPv4 address in dotted decimal format e.g 10.1.1.1 or IPv6 address in hexadecimal format e.g 3ffe:1900:4545:3:200:f8ff:fe21:67cf, up to 39 Characters]";
$recordTable{ATTEMPT}[30][0][2] = "Egress Remote Signaling IP Address (Applicable only for PSTN-IP and IP-IP calls) [ASCII IPv4 address in dotted decimal format e.g 10.1.1.1 or IPv6 address in hexadecimal format e.g 3ffe:1900:4545:3:200:f8ff:fe21:67cf, up to 39 Characters]";
$recordTable{ATTEMPT}[31][0][2] = "Ingress Trunk Group Name [string up to 23 chars]";
$recordTable{ATTEMPT}[32][0][2] = "Ingress PSTN Circuit End Point (Shelf [1-6]:Slot[1-16]:Port[1-28]:Ds0[1-32]: Cic[1-65535]:Local Point Code[32 Bit HEX format]:Remote Point Code[32 Bit HEX format] ) (Applicable only for PSTN-IP and PSTN-PSTN Calls)";
$recordTable{ATTEMPT}[33][0][2] = "Ingress IP Circuit End Point (Local IP Address:Port/Remote IP Address :Port) [IPv4 address in dotted decimal format,e.g 10.1.1.1 or IPv6 address in hexadecimal format e.g 3ffe:1900:4545:3:200:f8ff:fe21:67cf, up to 39 Characters] [Port Number - 0 to 65535] (Applicable only for IP-PSTN and IP-IP Calls)";
$recordTable{ATTEMPT}[34][0][2] = "Egress PSTN Circuit End Point (Shelf [1-6]:Slot[1-16]:Port[1-28]:Ds0[1-32]: Cic[1-65535]:Local Point Code[32 Bit HEX format]:Remote Point Code[32 Bit HEX format] (Applicable only for IP-PSTN and PSTN-PSTN Calls)";
$recordTable{ATTEMPT}[35][0][2] = "Egress IP Circuit End Point (Local IP Address:Port/Remote IP  Address:Port) [IPv4 address in dotted decimal format,e.g 10.1.1.1 or IPv6 address in hexadecimal format e.g 3ffe:1900:4545:3:200:f8ff:fe21:67cf, up to 39 Characters] [Port Number - 0 to 65535] (Applicable only for PSTN-IP and IP-IP Calls)";
$recordTable{ATTEMPT}[36][0][2] = "Originating Line Information (OLIP), a.k.a info digits [Decimal Value. Values match ANSI T1.113 (ANSI ISUP) See Table at the end for OLIP values ]";
$recordTable{ATTEMPT}[37][0][2] = "Jurisdiction Information Parameter [JIP] [string up to 15 characters]";
$recordTable{ATTEMPT}[38][0][2] = "Carrier Code [ String up to 5 characters, for e.g 0288]";
$recordTable{ATTEMPT}[39][0][2] = "Call Group ID (32 bit in HEX format, i.e 8 digits)";
$recordTable{ATTEMPT}[40][0][2] = "Script Log Data (A string which contains data logged by a Sonus CPL script which was executed for the call) Multiple variables may be logged within this field, with each variable data separated by a '/'. The data for each script variable includes the variable ID and the variable value, with a \":\" as the separator. For e.g the script log data string might look like : 12:9786928999/108:12345 This indicates data for two variables namely, variable ID - 12, and Variable ID 108. The value of variable 12 is 9786928999, and the value of variable 108 is 12345.";
$recordTable{ATTEMPT}[41][0][2] = "Time Elapsed from Receipt of Setup Message to Receipt of Exit Message (EXM) in 10ms Ticks. [Decimal number from 0 to 4294967295]";
$recordTable{ATTEMPT}[42][0][2] = "Time Elapsed from Receipt of Setup Message to Generation of Exit Message (EXM) in 10ms Ticks. [Decimal number from 0 to 4294967295]";
$recordTable{ATTEMPT}[43][0][2] = "Calling Party Nature of Address. [Decimal Value. See Nature of Address Enumeration Table at end for values]";
$recordTable{ATTEMPT}[44][0][2] = "Called Party Nature of Address. [Decimal Value. See Nature of Address Enumeration Table at end for values]";
$recordTable{ATTEMPT}[45][0][2] = "Ingress Protocol Variant Specific Data [String with double quote delimiters, i.e. \"JAPAN,0,0,...0x00\" length is up to 377 characters, including delimiters] Accounting data which is specific to the ingress signaling protocol. See tables at end for detailed information.";
$recordTable{ATTEMPT}[46][0][2] = "Ingress Signaling Type [Decimal Value. See Signaling Type Table at the end for values]";
$recordTable{ATTEMPT}[47][0][2] = "Egress Signaling Type [Decimal Value. See Signaling Type Table at the end for values]";
$recordTable{ATTEMPT}[48][0][2] = "Ingress Far End Switch Type [Decimal Value. See Far End Switch Type Table at the end for values]";
$recordTable{ATTEMPT}[49][0][2] = "Egress Far End Switch Type [Decimal Value. See Far End Switch Type Table at the end for values]";
$recordTable{ATTEMPT}[50][0][2] = "Carrier Code of the Carrier that owns the Ingress Trunk Group [String up to 5 characters]";
$recordTable{ATTEMPT}[51][0][2] = "Carrier Code of the Carrier that owns the Egress Trunk Group [String up to 5 characters]";
$recordTable{ATTEMPT}[52][0][2] = "Calling Party Category [Hex Value. See Table at end for values]";
$recordTable{ATTEMPT}[53][0][2] = "Dialed Number - Actual dialed number received by the Sonus Gateway before any digit manipulation was performed by the Softswitch. [String up to 30 characters]";
$recordTable{ATTEMPT}[54][0][2] = "Carrier Selection Information [Decimal Value. See Table at end for values]";
$recordTable{ATTEMPT}[55][0][2] = "Called Number Numbering Plan [Decimal Value. See Table at end for values]";
$recordTable{ATTEMPT}[56][0][2] = "Generic Address Parameter - The original called number if LNP was performed by a switch preceding the GSX. [String up to 30 characters]";
$recordTable{ATTEMPT}[57][0][2] = "Disconnect Initiator [0-Internal 1-Calling Party, 2-Called Party, 3-Internal Early, 4-Calling Party Early] This indicates whether call release was initiated by the calling party (by the ingress signaling group), or the called party (by the egress signaling group), or was released internally by the call control entity in the GSX9000 (due either to some error in the processing of the call or to a release initiated by a party on the peer call in a multiparty feature such as ISDN Two B-Channel Transfer or SS7 Release Link Trunking). Value 3 & 4 were added in V6.1.4 for KDDI early call attempts.";
$recordTable{ATTEMPT}[58][0][2] = "Egress Trunk Group Name [string up to 23 chars]";
$recordTable{ATTEMPT}[59][0][2] = "Egress Protocol Variant Specific Data [String with double quote delimiters, i.e. \"JAPAN,0,0,...0x00\" length is up to 377 characters, including delimiters] Accounting data which is specific to the egress signaling protocol. See tables at end for detailed information.";
$recordTable{ATTEMPT}[60][0][2] = "Incoming Calling Number - This field represents the calling number presented to the GSX prior to any digit manipulation or translation by the PSX. It is the Calling Number in the Incoming Signaling Message (IAM/SETUP) to the GSX translation. [string up to 30 characters] (For NTT Japan this may be the Calling User Number from \"End of Information Transfer\" parameter.)";
$recordTable{ATTEMPT}[61][0][2] = "AMA Call Type (a.k.a. AMA Call Code) [Decimal number from 000 to 999, leading zeros are displayed]";
$recordTable{ATTEMPT}[62][0][2] = "Message Billing Indicator (MBI) [Decimal number from 000 to 999, leading zeros are displayed]";
$recordTable{ATTEMPT}[63][0][2] = "Originating LATA [String up to 3 characters] Represents the Originating Local Access and Transport Area (LATA).";
$recordTable{ATTEMPT}[64][0][2] = "Route Index Used [Decimal value from 1 to 10] Signifies which route in the Policy Response was used for this call. If no routes were successful, then this field will be empty (\"\"). The Policy Response can only hold up to 10 routes, so 10 is the maximum value for this field.";
$recordTable{ATTEMPT}[65][0][2] = "Calling Party Number Presentation Restriction [Decimal value. See table at end for values]";
$recordTable{ATTEMPT}[66][0][2] = "Incoming ISUP Charge Number [String up to 30 characters] This is the billing number provided in the IAM prior to any Softswitch manipulation or translation. Only applicable for SS7 calls.";
$recordTable{ATTEMPT}[67][0][2] = "Incoming ISUP Charge Number Nature of Address [Decimal Value. See Nature of Address Enumeration Table at end for values] This is the billing number NOA provided in the IAM prior to any Softswitch manipulation or translation. Only applicable for SS7 calls.";
$recordTable{ATTEMPT}[68][0][2] = "Dialed Number Nature Of Address [Decimal Value. See Nature of Address Enumeration Table at end for values]";
$recordTable{ATTEMPT}[69][0][2] = "Ingress Codec Type [<networkType>:<codecType>:<audioEncoding> See Codec Type table at end for values]";
$recordTable{ATTEMPT}[70][0][2] = "Egress Codec Type [<networkType>:<codecType>:<audioEncoding> See Codec Type table at end for values]";
$recordTable{ATTEMPT}[71][0][2] = "Ingress RTP Packetization Time [Decimal value from 10 to 40] Length of RTP packet in milliseconds. Ingress leg of the call must be IP for this field to be applicable.";
$recordTable{ATTEMPT}[72][0][2] = "GSX Call ID (a.k.a. GCID) [32 Bits in Hex format, eg 0x01234567] This is the GSX's internally assigned Global Call ID (GCID).";
$recordTable{ATTEMPT}[73][0][2] = "Terminated With Script Execution [Boolean. 0=FALSE, 1=TRUE] Indicates whether or not a script was executed prior to call termination. Termination scripts typically, but not necessarily, play an announcement. If TRUE, then the call was not routed.";
$recordTable{ATTEMPT}[74][0][2] = "Originator Echo Cancellation [Boolean. 0=FALSE, 1=TRUE] Indicates whether or not the GSX performed echo cancellation on the ingress leg of the call. (Only applicable for calls with PSTN ingress)";
$recordTable{ATTEMPT}[75][0][2] = "Terminator Echo Cancellation [Boolean. 0=FALSE, 1=TRUE] Indicates whether or not the GSX performed echo cancellation on the egress leg of the call. (Only applicable for calls with PSTN egress)";
$recordTable{ATTEMPT}[76][0][2] = "Charge Flag [0-None, 1-No Charge, 2-Charge, 3-Spare, 4-No Indication]";
$recordTable{ATTEMPT}[77][0][2] = "AMA Service Logic ID (AMAslpID) [String up to 9 characters] This field records an identification of the service logic in the SCP that was used. The value is contained in an AMAslpID parameter received from the SCP.";
$recordTable{ATTEMPT}[78][0][2] = "AMA BAF Module [String up to 256 characters] This field records a variety of billing information. The first 3 characters specify a Module Code. This code specifies which BAF table should be used to interpret the remaining characters. Refer to GR-1100-CORE, Section 5.7 BAF Module List for details.";
$recordTable{ATTEMPT}[79][0][2] = "AMA Set Hex AB Indicator [Boolean. 0=FALSE, 1=TRUE] If TRUE, then the AMA BAF Module contains a known or suspected error.";
$recordTable{ATTEMPT}[80][0][2] = "Service Feature ID [Decimal number from 000 to 999] This field indicates a customer's originating or terminating line characteristics.";
$recordTable{ATTEMPT}[81][0][2] = "FE Parameter [8 or 10 byte hex value] Source: Backwards call indicator. Contains the optional FE parameter which is part of the backwards call control messages ACM, CPG, ANM and Gateway-to-Gateway Signalling. See table at end for detailed description.";
$recordTable{ATTEMPT}[82][0][2] = "Satellite Indicator [0=No Satellite, 1=Satellite] Source: Nature of Connection Indicator. Indicates whether or not a satellite trunk was used.";
$recordTable{ATTEMPT}[83][0][2] = "PSX Billing Information [Hex value up to 255 bytes] Use *+h 64 Route Index Used to match the PSX Billing Information See table at end for definitions.";
$recordTable{ATTEMPT}[84][0][2] = "Originating TDM Trunk Group Type [Decimal value, range 0 to 255] See table at end for definitions.";
$recordTable{ATTEMPT}[85][0][2] = "Terminating TDM Trunk Group Type [Decimal value, range 0 to 255] See table at end for definitions.";
$recordTable{ATTEMPT}[86][0][2] = "Ingress Trunk Member Number [Decimal value, range 0 to 65535] This field identifies the selected DS0 within a trunk group.";
$recordTable{ATTEMPT}[87][0][2] = "Egress Trunk Group ID [Decimal value, range 0 to 4095] Egress trunk group ID on the egress GSX. The value of this field will be different than the one received in the FE parameter if the final switch is not the same as the egress GSX. This field is supplied by the PSX, If this field is not provisioned on the PSX, it will be empty.";
$recordTable{ATTEMPT}[88][0][2] = "Egress Switch ID [Decimal value, range 0 to 1023] Egress switch ID on the egress GSX. The value of this field will be different than the one received in the FE parameter if the final switch is not the same as the egress GSX.";
$recordTable{ATTEMPT}[89][0][2] = "Active Call Ingress Local ATM Address (Applicable only for ATM Calls) [ string up to 42 characters, see ATM Address format at end ] The ATM address of the local physical port attached to the ATM network on the ingress leg of the call.";
$recordTable{ATTEMPT}[90][0][2] = "Active Call Ingress Remote ATM Address (Applicable only for ATM Calls) [ string up to 42 characters, see ATM Address format at end ] The ATM address of the remote physical port attached to the ATM network on the ingress leg of the call.";
$recordTable{ATTEMPT}[91][0][2] = "Active Call Egress Local ATM Address (Applicable only for ATM Calls) [ string up to 42 characters, see ATM Address format at end ] The ATM address of the local physical port attached to the ATM network on the egress leg of the call.";
$recordTable{ATTEMPT}[92][0][2] = "Active Call Egress Remote ATM Address (Applicable only for ATM Calls) [ string up to 42 characters, see ATM Address format at end ] The ATM address of the remote physical port attached to the ATM network on the egress leg of the call.";
$recordTable{ATTEMPT}[93][0][2] = "Policy Response Call Type [Decimal value from 0 to 62]";
$recordTable{ATTEMPT}[94][0][2] = "Outgoing Route Identification - [Decimal value from 0 to 65535] This field represents the Outgoing Trunk Group Number for call that overflows from one gateway to another via a Singapore Inter-Gateway Circuit (IGC) trunk. This value is extracted from the ISUP Address Complete Message's (ACM) optional \"Outgoing Route Identification (ORI)\" parameter. Only internetworking calls will have this field populated.";
$recordTable{ATTEMPT}[95][0][2] = "Outgoing Message Identification - (0-National Route, 1-Transit Route, 2-Terminating Route, 3-Spare) This field represents what type of route taken. See OMI section at end for population information.";
$recordTable{ATTEMPT}[96][0][2] = "Incoming Route Identification - [Decimal value from 0 to 65535] This field represents incoming source (incoming trunk group number). It is used to determine whether the source is from domestic or international network. The GSX extracts this value from the ISUP IAM's optional \"Incoming Route Identification (INRI)\" parameter. This optional parameter is specific to Singapore deployments. If INRI is not present, then this field will be blank.";
$recordTable{ATTEMPT}[97][0][2] = "Calling Name [String up to 24 characters with string delimiters \"\" ] Represents the name of the calling party.";
$recordTable{ATTEMPT}[98][0][2] = "Calling Name Type (0-Invalid, 1-Spare, 2-Calling Name, 3-Original Calling Name, 4-Redirect Name, 5-Connected Name)";
$recordTable{ATTEMPT}[99][0][2] = "Incoming Calling Party Numbering Plan [Decimal Value. See Table at end for values] This field represents the Calling Party Numbering Plan received in the incoming setup message. For ISUP calls this value is contained in the optional Calling Party Number parameter in the Initial Address Message (IAM). For SIP calls, this value is contained in the FROM, TO, REQUEST URI, CONTACT and DIVERSION headers.";
$recordTable{ATTEMPT}[100][0][2] = "Outgoing Calling Party Numbering Plan [Decimal Value. See Table at end for values] This field represents the Calling Party Numbering Plan sent by the GSX in outgoing messages. The PSX determines this value during the route process. The outgoing plan is either equal to the incoming plan or the plan provisioned against the ingress trunk group.";
$recordTable{ATTEMPT}[101][0][2] = "Calling Party Business Group ID [Decimal value from 0 to 4294967295, If data is not present or unknown, then a one \"1\" (Public Business Group) will be logged] This value represents the Business Group ID of the calling party. The GSX receives this value in the SIP INCOMING INVITE message. Currently, SIP is the only protocol which supports Business Group IDs. For all other protocols (ISUP, H323, etc.) this field will be logged as \"1\".";
$recordTable{ATTEMPT}[102][0][2] = "Called Party Business Group ID [Decimal value from 0 to 4294967295, If data is not present or unknown, then a one \"1\" (Public Business Group) will be logged] This value represents the Business Group ID of the called party. The GSX receives this value in the SIP INCOMING INVITE message. This value is then sent to the PSX in the Policy Request message. As part of the routing process the PSX may modify this value and return it in the Policy Response. The GSX logs the value supplied by the PSX, not the value received in the INVITE message. In release 4.1, SIP is the only protocol which supports Business Group IDs. For all other protocols (ISUP, H323, etc.) this field will be logged as \"1\".";
$recordTable{ATTEMPT}[103][0][2] = "Calling Party Public Presence Directory Number [String up to 30 characters] The Calling Party Public Presence Directory Number (PPDN) is an optional SIP parameter which is propagated as the calling number when a call goes into the Public PSTN. If the SIP Invite message's Remote Party ID header contains id-context=ppdn, then the Remote Party ID will be interpreted and logged as the Calling PPDN. If the id-context is not PPDN or if the ingress protocol is not SIP, then this field will be left blank (\"\").";
$recordTable{ATTEMPT}[104][0][2] = "Elapsed Time from Receipt of Setup Message to Last Call Routing Attempt in 10ms Ticks. [Decimal number from 0 to 4294967295]";
$recordTable{ATTEMPT}[105][0][2] = "Disconnect Time (mm/dd/yyyy) - TimeStamp of when a Disconnect Request was received for the call. (GMT)[eg : 02/06/1999]";
$recordTable{ATTEMPT}[106][0][2] = "Billing Number NOA [Decimal Value. See Nature of Address Enumeration Table at end for values] This field is the Nature of Address Indicator sent in outgoing Charge Number parameters. The PSX sets this value to either the Incoming Charge Number NOA or to the Billing Number NOA provisioned against the ingress Trunk Group.";
$recordTable{ATTEMPT}[107][0][2] = "Incoming Calling Number NOA [Decimal Value. See Nature of Address Enumeration Table at end for values] This field is the Nature of Address Indicator received in the incoming setup message.";
$recordTable{ATTEMPT}[108][0][2] = "Egress Trunk Group Member Number [Decimal value, range 0 to 65535] This field uniquely identifies the DS0 circuit used for this call in the egress Trunk Group. If the Trunk Member for the egress trunk group is not configured, then this field will be left blank (\"\"). Trunk Member can only be configured for ISDN, ISUP and CAS trunks. For Gateway to Gateway calls, both the originating and terminating gateways will log the terminating gateway's Egress Trunk Group Member Number.";
$recordTable{ATTEMPT}[109][0][2] = "Selected Route Type [Decimal value. See Route Type Enumeration Table at end for values]";
$recordTable{ATTEMPT}[110][0][2] = "Cumulative Route Index - [Decimal value from 1 to 65535] Signifies which route in the Rotue Label (*+h 64) was used for this call. Starting with Release 5.0, the Route Label may contain more than 10 routes. If no routes were successful, then this field will be empty (\"\"). If the first Policy Responsed contain a successful route, then this field will equal Route Index Used (*+h 64).";
$recordTable{ATTEMPT}[111][0][2] = "Call Disconnect Reason Transmitted to Ingress - [1 to 705, or empty] This value represents the disconnect reason (a.k.a. cause code) sent by the GSX to the calling party. If the release was initiated by the calling party, then this field will empty. If actual disconnect reason (received or internally generated) is not defined by the ingress signaling protocol, then the reason will be mapped to a reason which is defined before being sent.";
$recordTable{ATTEMPT}[112][0][2] = "Call Disconnect Reason Transmitted to Egress - [1 to 705, or empty] This value represents the disconnect reason (a.k.a. cause code) sent by the GSX to the called party. If the release was initiated by the called party, then this field will empty. If actual disconnect reason (received or internally generated) is not defined by the egress signaling protocol, then the reason will be mapped to a reason which is defined before being sent.";
$recordTable{ATTEMPT}[113][0][2] = "Calling Party Subaddress [String up to 30 characters] This field identifies the subaddress associated with the origin of an ISDN PRI call.";
$recordTable{ATTEMPT}[114][0][2] = "Outgoing Trunk Group Number in EXM [String up to 6 characters] Outgoing TGN is an optional parameter contained in the Exit Message (EXM). If an EXM was received and it contained an Outgoing TGN, then this field will be populated with the TGN. If an EXM was generated, then the Outgoing TGN will be populated from the service group profile. Otherwise this field will be left blank.";
$recordTable{ATTEMPT}[115][0][2] = "Ingress Local Signaling IP Address (Applicable only for IP-PSTN and IP-IP calls) [ASCII IPv4 address in dotted decimal format e.g 10.1.1.1 or IPv6 address in hexadecimal format e.g 3ffe:1900:4545:3:200:f8ff:fe21:67cf, up to 39 Characters]";
$recordTable{ATTEMPT}[116][0][2] = "Ingress Remote Signaling IP Address (Applicable only for IP-PSTN and IP-IP calls) [ASCII IPv4 address in dotted decimal format e.g 10.1.1.1 or IPv6 address in hexadecimal format e.g 3ffe:1900:4545:3:200:f8ff:fe21:67cf, up to 39 Characters]";
$recordTable{ATTEMPT}[117][0][2] = "Record Sequence Number [Decimal value from 0 to 4294967295]";
$recordTable{ATTEMPT}[118][0][2] = "Transmission Medium Requirement [Decimal Value, range 0 to 255, or empty] See TRANSMISSION MEDIUM REQUEST table at end for description and values.";
$recordTable{ATTEMPT}[119][0][2] = "Information Transfer Rate [Decimal Value, range 0 to 31, or empty] See INFORMATION TRANSFER RATE table at end for description and values.";
$recordTable{ATTEMPT}[120][0][2] = "USI User Info Layer 1 [Decimal Value, range 0 to 31, or empty] See USI USER INFO LAYER 1 table at end for description and values.";
$recordTable{ATTEMPT}[121][0][2] = "Unrecognized Raw ISUP Calling Party Category [Decimal value from 0 to 255] If the GSX does not recognize the recevied calling party category, then the actual (raw) value received will be logged in this field. Otherwise, this field will be empty (\"\").";
$recordTable{ATTEMPT}[122][0][2] = "Egress Release Link Trunking (RLT) Feature Specific Data (FSD) [See RLT Table at end for values]";
$recordTable{ATTEMPT}[123][0][2] = "Two B-Channel Transfer (TBCT) Feature Specific Data (FSD) [See TBCT Table at end for values]";
$recordTable{ATTEMPT}[124][0][2] = "Calling Party Business Unit [Decimal value from 0 to 4294967295, or empty] Repesents the calling party Business Unit (aka Sub-Group ID) and is supplied by the PSX in the Policy Response. If business unit data is not available for the call, then this field will be empty.";
$recordTable{ATTEMPT}[125][0][2] = "Called Party Business Unit [Decimal value from 0 to 4294967295, or empty] Repesents the called party Business Unit (aka Sub-Group ID) and is supplied by the PSX in the Policy Response. If business unit data is not available for the call, then this field will be empty.";
$recordTable{ATTEMPT}[126][0][2] = "Redirecting Feature Specific Data (FSD) [See REDI Table at end for values]";
$recordTable{ATTEMPT}[127][0][2] = "Ingress Release Link Trunking (RLT) Feature Specific Data (FSD) [See RLT Table at end for values]";
$recordTable{ATTEMPT}[128][0][2] = "PSX Index ( decimal value from 0 to 10 )";
$recordTable{ATTEMPT}[129][0][2] = "PSX Congestion Level ( decimal value 0 to 3. 0=Clear, 1=Low, 2=Medium, 3=High, empty=CongestionControlDisabled )";
$recordTable{ATTEMPT}[130][0][2] = "PSX Processing Time ( decimal value from 0 to 2^16 -1 in milliseconds )";
$recordTable{ATTEMPT}[131][0][2] = "Script Name (String up to 23 characters) Name of the Sonus CPL script executed for this call. If no script is executed, then this field will be empty (\"\").";
$recordTable{ATTEMPT}[132][0][2] = "Ingress External Accounting Data ( String upto 150 characters )";
$recordTable{ATTEMPT}[133][0][2] = "Egress External Accounting Data ( String upto 150 characters )";
$recordTable{ATTEMPT}[134][0][2] = "Egress RTP Packetization Time [Decimal value from 10 to 40] Length of RTP packet in milliseconds. Egress leg of the call must be IP for this field to be applicable.";
$recordTable{ATTEMPT}[135][0][2] = "Call Supervision Type ( enum CPC_CALL_SUPERVISION_TYPE_ENUM. 0=Disabled, 1=HW Answer, 2=SW Answer )";
$recordTable{ATTEMPT}[136][0][2] = "Ingress SIP Feature Specific Data (FSD) [See SREF/SREPL Table at end for values]";
$recordTable{ATTEMPT}[137][0][2] = "Egress SIP Feature Specific Data (FSD) [See SREF/SREPL Table at end for values]";
$recordTable{ATTEMPT}[138][0][2] = "Network Transfer Feature Specific Data (FSD) [See NWXF Table at end for values]";
$recordTable{ATTEMPT}[139][0][2] = "Call Condition ( decimal value from 0 to 39, or empty ) Call Condition provides the cirteria for determining AMA call type value for billing records. It's determined by the PSX based on the type of call along with other network information( Terminating, Inter/Intra Network). [see Call Condition Table at end for values]";
$recordTable{ATTEMPT}[140][0][2] = "Toll Indicator ( Decimal value, range 0 to 64, or empty) Provides the toll indication for the call as determined by the PSX. [see Toll Indicator table at end for values]";
$recordTable{ATTEMPT}[141][0][2] = "Generic Number ( number, string up to 30 characters ) This field contains the digits from the Generic number, i.e. the \"number\" subfield. This field is presented based on the ISUP signaling received at the gateway, e.g. ISUP IAM, SGM. Note: The \"Generic Address Parameter\" field refers to Called Party Number for LNP translation. The meaning of this Generic Number field is based on the Generic Number Type. For example, if the Generic Number Type sets to CPC_ADDR_GAP_CALLING_NUMBER, it refers to the \"Additional Calling Party Number\".";
$recordTable{ATTEMPT}[142][0][2] = "Generic Number Presentation Restriction Indicator ( Enumeration, 1 chararacter ) This field contains the Presentation Restriction Indicator from the Generic number. Enum of CPC_ADDR_PRESENTATION_RESTRICTION_INDICATOR_ENUM.";
$recordTable{ATTEMPT}[143][0][2] = "Generic Number Numbering Plan ( Enumeration, 1-2 characters ) This field contains the numbering plan from the Generic number. Enum of CPC_ADDR_NUMBERING_PLAN_ENUM";
$recordTable{ATTEMPT}[144][0][2] = "Generic Number Nature of Address ( Enumeration, 1-3 characters ) This field contains the Nature of Address from the Generic number. Enum of CPC_ADDR_NATURE_OF_ADDR_ENUM";
$recordTable{ATTEMPT}[145][0][2] = "Generic Number Type ( Enumeration, 1-2 characters ) This field contains the Generic Number Type from the Generic Number (e.g., when the Generic Number Type sets to 9, the Generic Number fields present the \"Additional Calling Party Number\"). This field is presented based on the ISUP signaling received at the gateway, e.g, ISUP IAM, SGM.";
$recordTable{ATTEMPT}[146][0][2] = "Final Attempt Indicator ( Boolean value ) This field indicates whether or not this is the final record written for a call. Value '0' indicates it's an intermediate ATTEMPT record due to crankback. Value '1' indicates it's a final attempt record.";
$recordTable{ATTEMPT}[147][0][2] = "Originating Trunk Type ( KDDI specific raw hex data, 2 chars ) This field contains one byte hex code representing the originating trunk type as specified by customer. This field is associated with the corresponding field of trunk group screen on PSX.";
$recordTable{ATTEMPT}[148][0][2] = "Terminating Trunk Type ( KDDI specific raw hex data, 2 chars ) This field contains one byte hex code representing the terminating trunk type as specified by customer. This field is associated with the corresponding field of trunk group screen on PSX.";
$recordTable{ATTEMPT}[149][0][2] = "Remote GSX Billing Indicator ( BOOLEAN, 0 or 1 or empty ) This optional CAM field indicates whether a CDR record includes billing info from remote GSX for GSX-GSX calls. This field is empty by default since \"Remote GSX Info Propagation\" feature is disabled by default. When \"\"Remote GSX Info Propagation\" feature is enabled, this field is present with TRUE or FALSE. Value 0 indicates this CDR record do not contain billing info from destination GSX. 1 indicates this CDR record contains billing info from both originating GSX and destination GSX. Note: When this indicator is set to 1(TRUE), then the following 5 fields contain billing info of destination GSX instead of this GSX. --- \"Egress PSTN Circuit End Point\" ATTEMPT-34 --- \"Egress IP Circuit End Point\" ATTEMPT-35 --- \"Egress Signaling Type\" ATTEMPT-47 --- \"Egress PVSD\" ATTEMPT-59 --- \"Call Disconnect Reason Transmitted to Egress\" ATTEMPT-112";
$recordTable{ATTEMPT}[150][0][2] = "Extra Disconnect Reason This field details GSX internal disconnect reason on per SG/FE basis in addition to the existing fields \"Call Disconnect Reason Transmitted to Ingress\"(ATTEMPT-111) and \"Call Disconnect Reason Transmitted to Egress\"(ATTEMPT-112) if call attempt fails. This field will only be populated for early ATTEMPT records. This field is empty if additional info is not available(e.g. normal ATTEMPT records).";
$recordTable{ATTEMPT}[151][0][2] = "VPN Calling Private Presence Number ( 0-30 characters ) This field contains VPN Calling Private Presence Number for VPN originated calls. This field comes from the PSX Policy Response. This field is only populated for VPN generated calls and is empty for all other calls.";
$recordTable{ATTEMPT}[152][0][2] = "VPN Calling Public Presence Number ( 0-30 characters ) This field contains VPN Calling Public Presence Number for VPN originated calls in E-164 format. This field comes from the PSX Policy Response. This field is only populated for VPN  generated calls and is empty for all other calls.";
$recordTable{ATTEMPT}[153][0][2] = "Furnish Charging Info (0-800 hexadecimal characters ) This field contains external Furnish Charging Info provided by SCP. Field is populated as it's original ASN.1 binary format across PSX-GSX and within GSX DS/CC/CAM to reduce the traffic and ICM/memory usage. Each byte of binary data is represented as two hexadecimal characters by CAM during ASCII CDR formatting.";
$recordTable{ATTEMPT}[154][0][2] = "Announcement Id ( Decimal value between 1- 65535 ) This field contains the ID of the last announcement played by the GSX on this call.		 ";
$recordTable{ATTEMPT}[155][0][2] = "Network Data - Source Information ( Enumeration, 1-2 characters ) This field contains the Source Informtaion type from the Network Data (C3/E0) parameter in the IAM message.";
$recordTable{ATTEMPT}[156][0][2] = "Network Data - Partition ID (Decimal value between 0 - 4095 ) This field contains the Partition ID used from the Network Data (C3/E0) parameter in the IAM message.";
$recordTable{ATTEMPT}[157][0][2] = "Network Data - Network ID (Decimal value between 0 - 32767 ) This field contains the Network ID used from the Network Data (C3/E0) parameter in the IAM message.";
$recordTable{ATTEMPT}[158][0][2] = "Network Data - NCOS (Decimal value between 0 - 65536 ) This field contains the NCOS used from the Network Data (C3/E0) parameter in the IAM message.";
$recordTable{ATTEMPT}[159][0][2] = "ISDN Access Indicator [Decimal value from 0 to 1. 0=ISUP Not Used all the way, 1=ISUP Used all the way] ISDN Access Indicator value from the Forward Call Indicator parameter. This is presented as an optional parameter in the incoming signaling, e.g. ISUP IAM, ISDN SETUP, or SIP INVITE.";
$recordTable{ATTEMPT}[160][0][2] = "Call Disconnect Location. [Enumeration, decimal value of CPC_OP_CAUSE_LOCATION_STANDARD_ENUM. See Disconnect Location Table at end for values] The Location value from the Cause Indicator parameter in the ISUP REL message. When the call is released by the network, this field will contain the Location value from the Cause Indicator received by the GSX. When the GSX initiates the release, this field will contain the Location value in the Cause Indicator generated by the GSX.";
$recordTable{ATTEMPT}[161][0][2] = "Call Disconnect Location Transmitted to Ingress. [Enumeration, decimal value of CPC_OP_CAUSE_LOCATION_STANDARD_ENUM. See Disconnect Location Table at end for values] The Location value from the Cause Indicator parameter in the ISUP REL message sent to the ingress network. ";
$recordTable{ATTEMPT}[162][0][2] = "Call Disconnect Location Transmitted to Egress. [Enumeration, decimal value of CPC_OP_CAUSE_LOCATION_STANDARD_ENUM. See Disconnect Location Table at end for values] The Location value from the Cause Indicator parameter in the ISUP REL message sent to the egress network. ";
$recordTable{ATTEMPT}[163][0][2] = "Network Call Reference - Call Identity (Decimal Value, range 0-16777215, or empty) This filed contains the Call Identity from the Network Call Reference parameter in the IAM message, used for billing.";
$recordTable{ATTEMPT}[164][0][2] = "Network Call Reference - Signaling Point Code (Decimal Value, range 0-16383, or empty) This filed contains the Signaling Point Code from the Network Call Reference parameter in the IAM message, used for billing.";
$recordTable{ATTEMPT}[165][0][2] = "Ingress ISUP MIME Protocol Specific Data ISUP protocol specific CDR data based on the contents of the ISUP mime data carried in SIP-I messages. See PCR1234.";
$recordTable{ATTEMPT}[166][0][2] = "Egress ISUP MIME Protocol Specific Data ISUP protocol specific CDR data based on the contents of the ISUP mime data carried in SIP-I messages. See PCR1234.";
$recordTable{ATTEMPT}[167][0][2] = "Video Data - A quoted comma separated string. In ATTEMPT record, only the following sub-fields are populated: Video Call Bandwidth Ingress IP Video End Point Egress IP Video End Point See \"Video Data CDR\" description of sub-fields below. ";
$recordTable{ATTEMPT}[168][0][2] = "SVS Customer (KDDI Global network specific) This field contains the trunk group number field from the K-ISUP Route Information parameter. See Pcr1624.";
$recordTable{ATTEMPT}[169][0][2] = "SVS Vendor - deprecated in 7.2.2 as part of Pcr1624 This field contains the terminating route information in KDDI Global network. See PCR1338.";
$recordTable{ATTEMPT}[170][0][2] = "Call To Test PSX This field will be used to determine is a call was made to a Test PSX";
$recordTable{ATTEMPT}[171][0][2] = "Psx Overlap Route Requests This field contains the Number of PSX dips by this call with the Called Party Number incomplete. ";
$recordTable{ATTEMPT}[172][0][2] = "Call Setup Delay [String with double quote delimiters, i.e. \"232,878,30,1140\" length is up to 21 characters, including delimiters] Accounting data which is specific to the SIP-SIP call. See tables at end for detailed information.";
$recordTable{ATTEMPT}[172][1][2] = "Request Latency ( Decimal value between 0 - 999 )";
$recordTable{ATTEMPT}[172][2][2] = "Downstream Latency ( Decimal value between 0 - 99999 )";
$recordTable{ATTEMPT}[172][3][2] = "Response Latency ( Decimal value between 0 - 999 )";
$recordTable{ATTEMPT}[172][4][2] = "Upstream Latency ( Decimal value between 0 - 99999 )";
$recordTable{ATTEMPT}[173][0][2] = "Overload Status This field will be used to indicate the resource congestion level on the node or a server which processes the call.";
$recordTable{ATTEMPT}[174][0][2] = "Ingress Bicc Info This field will be used to indicate the Ingress Bicc Specific CDR Information ";
$recordTable{ATTEMPT}[175][0][2] = "Egress Bicc Info This field will be used to indicate the Egress Bicc Specific CDR Information ";
$recordTable{ATTEMPT}[176][0][2] = "MLPP Precedence Level A field for reporting Precedence Level of the MLPP service, when service not enabled the field will be empty. 1=Flash Override  2=Flash  3=Immediate  4=Priority 5=Routine";
$recordTable{ATTEMPT}[177][0][2] = "MSRP Service Type This field describes the type of MSRP session that is being setup based on the SDP in the SIP INVITE message. An MSRP session could either be a File-transfer session or an IM session. 0=MSRP IM Session 1=MSRP File transfer session";
$recordTable{ATTEMPT}[178][0][2] = "NPUKK Special Routing Information (Hex, with 0x, 0x1,0x2,0x12,0x11,0x10) This is a one byte field received in the ingress IAM (or as configured in CLI) and  passed on to CC. Bit numbers 1,3 and 5 are of importance now and in future  other bits may be of use as well.	  ";
$recordTable{ATTEMPT}[179][0][2] = "NPUKK Customer or Carrier Identification This is a USHORT received in the ingress IAM (or as configured in CLI) with a  value ranging from 0 to 16383 and indicates the customer or the carrier number  associated with the incoming call. ";
$recordTable{ATTEMPT}[180][0][2] = "NPUKK ServiceType Identifier This is a one byte field received in the ingress IAM (or as configured in CLI) and  passed on to CC as it is. Values are expected from 0 to 127. ";
$recordTable{ATTEMPT}[181][0][2] = "NPSSP Special Handling Information (Hex, with 0x, 0x10 or 0x14 or 0x11 etc) This is a one byte field received in the ingress IAM and passed on to CC as it is.  Bit numbers 1 is of importance now and in future other bits may be of use as well. ";
$recordTable{ATTEMPT}[182][0][2] = "NPSSP ServiceType Identifier This is a one byte field received in the ingress IAM and passed on to CC as it is.  Values are expected from 0 to 127.";
$recordTable{ATTEMPT}[183][0][2] = "ONI Str (String of up to 12 characters or empty) This is binary bit array received from the network in IAM, and will be stored in a character array. This field will be passed on to PSX, based on which the PSX sends routes and the ONI Str itself to be sent out on the egress side.";
$recordTable{ATTEMPT}[184][0][2] = "Suppress ONI This field is set to 1 when the \"Suppress ONI\" flag in the \"Signaling Profile\" of Egress Trunk Group in PSX is enabled. By default this flag is disabled. 0=\"Suppress ONI\" flag in Signaling profile of Egress trunk group is disabled. 1=\"Suppress ONI\" flag in Signaling profile of Egress trunk group is enabled.";
$recordTable{ATTEMPT}[185][0][2] = "Global Charge Reference (Up to 40 ASCII characters or Empty) This is a field of 20 byte long array used for CDR correlation. The bytes will be  output in hex format. Each byte would need two ASCII characters. ISUP Signaling  profile flag GCR should be supported on ingress or egress side.	 ";
$recordTable{ATTEMPT}[186][0][2] = "3xx Contact Information (String containing 12 to 1301 ACSII characters) This field has up to 10 subfields. Each subfield contains one contact information  received in the 3xx MC SIP message. The maximum length each contact can take is  129 characters. The sub field is a string and is a mix of IP address and names. The  CAM module gets the information as comma separated and null terminated string.  Example: \"sip:sipp@10.128.254.78:5060;tgrp=DTG-PEER;trunk-context=destexample.com, 		 sip:sipp@10.128.254.74:5090;tgrp=DTG-PEER,sip:abc@20.128.254.75:5090, 		 sip:abc@20.128.254.76:5090,,,,,,,\" ";
$recordTable{ATTEMPT}[187][0][2] = "RESERVED: PSX Name";
$recordTable{ATTEMPT}[188][0][2] = "RESERVED: No of PSX tried";
$recordTable{ATTEMPT}[189][0][2] = "RESERVED: Final Route Label";
$recordTable{ATTEMPT}[190][0][2] = "MTA Information";
$recordTable{ATTEMPT}[191][0][2] = "VBR Common Billing Data";
$recordTable{ATTEMPT}[192][0][2] = "VBR Route Billing Data";
$recordTable{ATTEMPT}[193][0][2] = "Access Transfer Specific Data";
$recordTable{ATTEMPT}[194][0][2] = "Emergency Indicator This field tells whether this call is categorised as Emergency call. 1=Emergency Call";
$recordTable{ATTEMPT}[195][0][2] = "UE Roaming Status";
$recordTable{ATTEMPT}[196][0][2] = "Access Network Charging Information";
$recordTable{ATTEMPT}[197][0][2] = "Ingress Zone Name";
$recordTable{ATTEMPT}[198][0][2] = "Egress Zone Name";
$recordTable{ATTEMPT}[199][0][2] = "Ingress Zone ID";
$recordTable{ATTEMPT}[200][0][2] = "Egress Zone ID";
$recordTable{ATTEMPT}[201][0][2] = "Ingress IpPrefix TgName ";
$recordTable{ATTEMPT}[202][0][2] = "Additional Media Stream Statistics - ( - 1 Entries per stream - 2 Number of streams - 3 ingress lostPktBursts1 - 4 ingress lostPktSingles1 - 5 ingress codecParams1 - 6 egress lostPktBursts1 - 7 egress lostPktSingles1 - 8 egress codecParams1 - 9 transcode indicator1 - 10 ingress lostPktBursts2 - 11 ingress lostPktSingles2 - 12 ingress codecParams2 - 13 egress lostPktBursts2 - 14 egress lostPktSingles2 - 15 egress codecParams2 - 16 transcode indicator2 - 17 ingress lostPktBursts3 - 18 ingress lostPktSingles3 - 19 ingress codecParams3  - 20 egress lostPktBursts3 - 21 egress lostPktSingles3 - 22 egress codecParams3 - 23 transcode indicator3 - 24 ingress lostPktBursts4 - 25 ingress lostPktSingles4 - 26 ingress codecParams4 - 27 egress lostPktBursts4 - 28 egress lostPktSingles4 - 29 egress codecParams4 - 30 transcode indicator4 - 31 ingress lostPktBursts5 - 32 ingress lostPktSingles5 - 33 ingress codecParams5 - 34 egress lostPktBursts5 - 35 egress lostPktSingles5 - 36 egress codecParams5 - 37 transcode indicator5 - 38 ingress lostPktBursts6 - 39 ingress lostPktSingles6 - 40 ingress codecParams6 - 41 egress lostPktBursts6 - 42 egress lostPktSingles6 - 43 egress codecParams6 - 44 transcode indicator6";
$recordTable{ATTEMPT}[203][0][2] = "Parent Call GCID ";
$recordTable{ATTEMPT}[204][0][2] = "Signaling Only Mode";
$recordTable{ATTEMPT}[205][0][2] = "DSP insertion/rejection reason  - ( - 1 Entries per stream - 2 Number of streams - 3 ingress dspReason1 - 4 egress dspReason1 - 5 ingress dspReason2 - 6 egress dspReason2";

$recordTable{INTERMEDIATE}[1][0][1] = "Record Type";
$recordTable{INTERMEDIATE}[2][0][1] = "Gateway Name";
$recordTable{INTERMEDIATE}[3][0][1] = "Accounting ID";
$recordTable{INTERMEDIATE}[4][0][1] = "Start Time (system ticks)";
$recordTable{INTERMEDIATE}[5][0][1] = "Node Time Zone";
$recordTable{INTERMEDIATE}[6][0][1] = "Start Time (MM/DD/YYYY)";
$recordTable{INTERMEDIATE}[7][0][1] = "Start Time (HH/MM/SS.s)";
$recordTable{INTERMEDIATE}[8][0][1] = "Ticks from Setup Msg to Policy Response";
$recordTable{INTERMEDIATE}[9][0][1] = "Ticks from Setup Msg to Service Est";
$recordTable{INTERMEDIATE}[10][0][1] = "Intermediate Time (MM/DD/YYYY)";
$recordTable{INTERMEDIATE}[11][0][1] = "Intermediate Time (HH:MM:SS.s)";
$recordTable{INTERMEDIATE}[12][0][1] = "Call Service Duration";
$recordTable{INTERMEDIATE}[13][0][1] = "Service Delivered";
$recordTable{INTERMEDIATE}[14][0][1] = "Call Direction";
$recordTable{INTERMEDIATE}[14][0][2] = "Call Direction - PSTN-TO-IP/PSTN-TO-PSTN/IP-TO-PSTN/PSTN-TO-TERM/IP-TO-TERM/ TERM-TO-PSTN/TERM-TO-IP/IP-TO-IP (up to 12 characters).";
$recordTable{INTERMEDIATE}[15][0][1] = "Service Provider";
$recordTable{INTERMEDIATE}[16][0][1] = "Transit Network Selection Code (TNS)";
$recordTable{INTERMEDIATE}[17][0][1] = "Calling Number";
$recordTable{INTERMEDIATE}[18][0][1] = "Called Number";
$recordTable{INTERMEDIATE}[19][0][1] = "Extra Called Address Digits";
$recordTable{INTERMEDIATE}[20][0][1] = "Number of Called Num Translations";
$recordTable{INTERMEDIATE}[21][0][1] = "Called Number Before Translation #1";
$recordTable{INTERMEDIATE}[22][0][1] = "Translation Type #1";
$recordTable{INTERMEDIATE}[23][0][1] = "Called Number Before Translation #2";
$recordTable{INTERMEDIATE}[24][0][1] = "Translation Type #2";
$recordTable{INTERMEDIATE}[25][0][1] = "Billing Number";
$recordTable{INTERMEDIATE}[26][0][1] = "Route Label";
$recordTable{INTERMEDIATE}[27][0][1] = "Route Attempt Number";
$recordTable{INTERMEDIATE}[28][0][1] = "Route Selected";
$recordTable{INTERMEDIATE}[29][0][1] = "Egress Local Signaling IP Address";
$recordTable{INTERMEDIATE}[30][0][1] = "Egress Remote Signaling IP Address";
$recordTable{INTERMEDIATE}[31][0][1] = "Ingress Trunk Group Name";
$recordTable{INTERMEDIATE}[32][0][1] = "Ingress PSTN Circuit End Point";
$recordTable{INTERMEDIATE}[33][0][1] = "Ingress IP Circuit End Point";
$recordTable{INTERMEDIATE}[34][0][1] = "Egress PSTN Circuit End Point";
$recordTable{INTERMEDIATE}[35][0][1] = "Egress IP Circuit End Point";
$recordTable{INTERMEDIATE}[36][0][1] = "Carrier Code";
$recordTable{INTERMEDIATE}[37][0][1] = "Call Group ID";
$recordTable{INTERMEDIATE}[38][0][1] = "Ingress Protocol Variant Specific Data";
$recordTable{INTERMEDIATE}[39][0][1] = "Ingress Signaling Type";
$recordTable{INTERMEDIATE}[40][0][1] = "Egress Signaling Type";
$recordTable{INTERMEDIATE}[41][0][1] = "Ingress Far End Switch Type";
$recordTable{INTERMEDIATE}[42][0][1] = "Egress Far End Switch Type";
$recordTable{INTERMEDIATE}[43][0][1] = "Carrier Code of Carrier who Owns iTG Far End";
$recordTable{INTERMEDIATE}[44][0][1] = "Carrier Code of Carrier who Owns eTG Far End";
$recordTable{INTERMEDIATE}[45][0][1] = "Calling Party Category";
$recordTable{INTERMEDIATE}[46][0][1] = "Dialed Number";
$recordTable{INTERMEDIATE}[47][0][1] = "Carrier Selection Information";
$recordTable{INTERMEDIATE}[48][0][1] = "Called Number Numbering Plan";
$recordTable{INTERMEDIATE}[49][0][1] = "Generic Address Parameter";
$recordTable{INTERMEDIATE}[50][0][1] = "Egress Trunk Group Name";
$recordTable{INTERMEDIATE}[51][0][1] = "Egress Protocol Variant Specific Data";
$recordTable{INTERMEDIATE}[52][0][1] = "Incoming Calling Number";
$recordTable{INTERMEDIATE}[53][0][1] = "Intermediate Record Reason";
$recordTable{INTERMEDIATE}[54][0][1] = "Originating Line Information (OLIP)";
$recordTable{INTERMEDIATE}[55][0][1] = "Jurisdiction Information Parameter (JIP)";
$recordTable{INTERMEDIATE}[56][0][1] = "Calling Party Nature of Address";
$recordTable{INTERMEDIATE}[57][0][1] = "Called Party Nature of Address";
$recordTable{INTERMEDIATE}[58][0][1] = "AMA Call Type";
$recordTable{INTERMEDIATE}[59][0][1] = "Message Billing Indicator (MBI)";
$recordTable{INTERMEDIATE}[60][0][1] = "LATA";
$recordTable{INTERMEDIATE}[61][0][1] = "Calling Party Presentation Restriction";
$recordTable{INTERMEDIATE}[62][0][1] = "Incoming ISUP Charge Number";
$recordTable{INTERMEDIATE}[63][0][1] = "Incoming ISUP Nature Of Address";
$recordTable{INTERMEDIATE}[64][0][1] = "Dialed Number Nature of Address";
$recordTable{INTERMEDIATE}[65][0][1] = "Global Call ID (GCID)";
$recordTable{INTERMEDIATE}[66][0][1] = "Charge Flag";
$recordTable{INTERMEDIATE}[67][0][1] = "AMA slp ID";
$recordTable{INTERMEDIATE}[68][0][1] = "AMA BAF Module";
$recordTable{INTERMEDIATE}[69][0][1] = "AMA Set Hex AB Indication";
$recordTable{INTERMEDIATE}[70][0][1] = "Service Feature ID";
$recordTable{INTERMEDIATE}[71][0][1] = "FE Parameter";
$recordTable{INTERMEDIATE}[72][0][1] = "Satellite Indicator";
$recordTable{INTERMEDIATE}[73][0][1] = "PSX Billing Info";
$recordTable{INTERMEDIATE}[74][0][1] = "Originating TDM Trunk Group Type";
$recordTable{INTERMEDIATE}[75][0][1] = "Terminating TDM Trunk Group Type";
$recordTable{INTERMEDIATE}[76][0][1] = "Ingress Trunk Member Number";
$recordTable{INTERMEDIATE}[77][0][1] = "Egress Trunk Group ID";
$recordTable{INTERMEDIATE}[78][0][1] = "Egress Switch ID";
$recordTable{INTERMEDIATE}[79][0][1] = "Ingress Local ATM Address";
$recordTable{INTERMEDIATE}[80][0][1] = "Ingress Remote ATM Address";
$recordTable{INTERMEDIATE}[81][0][1] = "Egress Local ATM Address";
$recordTable{INTERMEDIATE}[82][0][1] = "Egress Remote ATM Address";
$recordTable{INTERMEDIATE}[83][0][1] = "PSX Call Type";
$recordTable{INTERMEDIATE}[84][0][1] = "Outgoing Route Trunk Group ID";
$recordTable{INTERMEDIATE}[85][0][1] = "Outgoing Route Message ID";
$recordTable{INTERMEDIATE}[86][0][1] = "Incoming Route ID";
$recordTable{INTERMEDIATE}[87][0][1] = "Calling Name";
$recordTable{INTERMEDIATE}[88][0][1] = "Calling Name Type";
$recordTable{INTERMEDIATE}[89][0][1] = "Incoming Calling Party Numbering Plan";
$recordTable{INTERMEDIATE}[90][0][1] = "Outgoing Calling Party Numbering Plan";
$recordTable{INTERMEDIATE}[91][0][1] = "Calling Party Business Group ID";
$recordTable{INTERMEDIATE}[92][0][1] = "Called Party Business Group ID";
$recordTable{INTERMEDIATE}[93][0][1] = "Calling Party PPDN";
$recordTable{INTERMEDIATE}[94][0][1] = "Ticks from Setup Msg to Last Route Attempt";
$recordTable{INTERMEDIATE}[95][0][1] = "Ticks from Setup Msg to Rx of EXM";
$recordTable{INTERMEDIATE}[96][0][1] = "Ticks from Setup Msg to Generation of EXM";
$recordTable{INTERMEDIATE}[97][0][1] = "Billing Number Nature of Address";
$recordTable{INTERMEDIATE}[98][0][1] = "Incoming Calling Number Nature of Address";
$recordTable{INTERMEDIATE}[99][0][1] = "Egress Trunk Member Number";
$recordTable{INTERMEDIATE}[100][0][1] = "Selected Route Type";
$recordTable{INTERMEDIATE}[101][0][1] = "Telcordia Long Duration Record Type";
$recordTable{INTERMEDIATE}[102][0][1] = "Ticks From Previous Record";
$recordTable{INTERMEDIATE}[103][0][1] = "ISDN PRI Calling Party Subaddress";
$recordTable{INTERMEDIATE}[104][0][1] = "Outgoing Trunk Group Number in EXM";
$recordTable{INTERMEDIATE}[105][0][1] = "Ingress Local Signaling IP Address";
$recordTable{INTERMEDIATE}[106][0][1] = "Ingress Remote Signaling IP Address";
$recordTable{INTERMEDIATE}[107][0][1] = "Record Sequence Number";
$recordTable{INTERMEDIATE}[108][0][1] = "Transmission Medium Requirement";
$recordTable{INTERMEDIATE}[109][0][1] = "Information Transfer Rate";
$recordTable{INTERMEDIATE}[110][0][1] = "USI User Info Layer 1";
$recordTable{INTERMEDIATE}[111][0][1] = "Unrecognized Raw ISUP Calling Party Category";
$recordTable{INTERMEDIATE}[112][0][1] = "FSD: Release Link Trunking";
$recordTable{INTERMEDIATE}[113][0][1] = "FSD: Two B-Channel Transfer";
$recordTable{INTERMEDIATE}[114][0][1] = "Calling Party Business Unit";
$recordTable{INTERMEDIATE}[115][0][1] = "Called Party Business Unit";
$recordTable{INTERMEDIATE}[116][0][1] = "FSD: Redirecting";
$recordTable{INTERMEDIATE}[117][0][1] = "FSD: Ingress Release Link Trunking";
$recordTable{INTERMEDIATE}[118][0][1] = "PSX Index";
$recordTable{INTERMEDIATE}[119][0][1] = "PSX Congestion Level";
$recordTable{INTERMEDIATE}[120][0][1] = "PSX Processing Time (milliseconds)";
$recordTable{INTERMEDIATE}[121][0][1] = "Script Name";
$recordTable{INTERMEDIATE}[122][0][1] = "Ingress External Accounting Data";
$recordTable{INTERMEDIATE}[123][0][1] = "Egress External Accounting Data";
$recordTable{INTERMEDIATE}[124][0][1] = "Answer Supervision Type";
$recordTable{INTERMEDIATE}[125][0][1] = "Ingress Sip Refer or Sip Replaces Feature Specific Data";
$recordTable{INTERMEDIATE}[126][0][1] = "Egress Sip Refer or Sip Replaces Feature Specific Data";
$recordTable{INTERMEDIATE}[127][0][1] = "Network Transfers Feature Specific Data";
$recordTable{INTERMEDIATE}[128][0][1] = "Call Condition";
$recordTable{INTERMEDIATE}[129][0][1] = "Toll Indicator";
$recordTable{INTERMEDIATE}[130][0][1] = "Generic Number ( Number )";
$recordTable{INTERMEDIATE}[131][0][1] = "Generic Number Presentation Restriction Indicator";
$recordTable{INTERMEDIATE}[132][0][1] = "Generic Number Numbering Plan";
$recordTable{INTERMEDIATE}[133][0][1] = "Generic Number Nature of Address";
$recordTable{INTERMEDIATE}[134][0][1] = "Generic Number Type";
$recordTable{INTERMEDIATE}[135][0][1] = "Originating Trunk Type";
$recordTable{INTERMEDIATE}[136][0][1] = "Terminating Trunk Type";
$recordTable{INTERMEDIATE}[137][0][1] = "VPN Calling Public Presence Number";
$recordTable{INTERMEDIATE}[138][0][1] = "VPN Calling Private Presence Number";
$recordTable{INTERMEDIATE}[139][0][1] = "External Furnish Charging Info";
$recordTable{INTERMEDIATE}[140][0][1] = "Announcement Id";
$recordTable{INTERMEDIATE}[141][0][1] = "Network Data - Source Information";
$recordTable{INTERMEDIATE}[142][0][1] = "Network Data - Partition ID";
$recordTable{INTERMEDIATE}[143][0][1] = "Network Data - Network ID";
$recordTable{INTERMEDIATE}[144][0][1] = "Network Data - NCOS";
$recordTable{INTERMEDIATE}[145][0][1] = "ISDN access Indicator";
$recordTable{INTERMEDIATE}[146][0][1] = "Network Call Reference - Call Identity";
$recordTable{INTERMEDIATE}[147][0][1] = "Network Call Reference - Signaling Point Code";
$recordTable{INTERMEDIATE}[148][0][1] = "Ingress MIME Protocol Variant Specific Data";
$recordTable{INTERMEDIATE}[149][0][1] = "Egress MIME Protocol Variant Specific Data";
$recordTable{INTERMEDIATE}[150][0][1] = "Video Data - Video Bandwidth, Video Call Duration,Ingress/Egress IP video Endpoint";
$recordTable{INTERMEDIATE}[151][0][1] = "SVS Customer";
$recordTable{INTERMEDIATE}[152][0][1] = "SVS Vendor - Deprecated in 7.2.2 as part of Pcr1624";
$recordTable{INTERMEDIATE}[153][0][1] = "Remote GSX Billing Indicator";
$recordTable{INTERMEDIATE}[154][0][1] = "Call To Test PSX";
$recordTable{INTERMEDIATE}[155][0][1] = "Psx Overlap Route Requests";
$recordTable{INTERMEDIATE}[156][0][1] = "reserved";
$recordTable{INTERMEDIATE}[157][0][1] = "reserved";
$recordTable{INTERMEDIATE}[158][0][1] = "Mlpp Precedence Level";
$recordTable{INTERMEDIATE}[159][0][1] = "reserved";
$recordTable{INTERMEDIATE}[160][0][1] = "reserved";
$recordTable{INTERMEDIATE}[161][0][1] = "reserved";
$recordTable{INTERMEDIATE}[162][0][1] = "reserved";
$recordTable{INTERMEDIATE}[163][0][1] = "reserved";
$recordTable{INTERMEDIATE}[164][0][1] = "reserved";
$recordTable{INTERMEDIATE}[165][0][1] = "Global Charge Reference";
$recordTable{INTERMEDIATE}[166][0][1] = "reserved for PSX Name";
$recordTable{INTERMEDIATE}[167][0][1] = "reserved for No of PSX tried";
$recordTable{INTERMEDIATE}[168][0][1] = "reserved for Final Route Label";
$recordTable{INTERMEDIATE}[169][0][1] = "MTA Information";
$recordTable{INTERMEDIATE}[169][1][1] = "Origination Primary";
$recordTable{INTERMEDIATE}[169][2][1] = "Origination Secondary";
$recordTable{INTERMEDIATE}[169][3][1] = "Destination Primary";
$recordTable{INTERMEDIATE}[169][4][1] = "Destination Secondary";
$recordTable{INTERMEDIATE}[170][0][1] = "Access Network Charging Information";
$recordTable{INTERMEDIATE}[171][0][1] = "Access Transfer Specific Data";
$recordTable{INTERMEDIATE}[171][1][1] = "Feature ID";
$recordTable{INTERMEDIATE}[171][2][1] = "Transfer Type";
$recordTable{INTERMEDIATE}[171][3][1] = "Source access GCID";
$recordTable{INTERMEDIATE}[171][4][1] = "Traget access GCID";
$recordTable{INTERMEDIATE}[171][5][1] = "Original Calling Number";
$recordTable{INTERMEDIATE}[171][6][1] = "Original Called Number";
$recordTable{INTERMEDIATE}[172][0][1] = "Emergency Indicator";
$recordTable{INTERMEDIATE}[173][0][1] = "UE Roaming Status";
$recordTable{INTERMEDIATE}[174][0][1] = "Ingress Zone Name";
$recordTable{INTERMEDIATE}[175][0][1] = "Egress Zone Name";
$recordTable{INTERMEDIATE}[176][0][1] = "Ingress Zone Id";
$recordTable{INTERMEDIATE}[177][0][1] = "Egresss Zone Id";
$recordTable{INTERMEDIATE}[178][0][1] = "Ingress IpPrefix TgName";
$recordTable{INTERMEDIATE}[179][0][1] = "Signaling Only Mode";
$recordTable{INTERMEDIATE}[180][0][1] = "Call Established Time";
$recordTable{INTERMEDIATE}[1][0][2] = "\"INTERMEDIATE\"";
$recordTable{INTERMEDIATE}[2][0][2] = "Gateway Name [String up to 27 Characters]";
$recordTable{INTERMEDIATE}[3][0][2] = "Accounting ID (64 Bit in HEX format i.e 16 digits]";
$recordTable{INTERMEDIATE}[4][0][2] = "Start Time in System Ticks - Timestamp of when Setup Request was  received. [Decimal number from 0 to 4294967295] ";
$recordTable{INTERMEDIATE}[5][0][2] = "Node Time Zone [String up to 26 Characters long]";
$recordTable{INTERMEDIATE}[6][0][2] = "Start Time (mm/dd/yyyy) - Timestamp of when Setup Request was  received. (GMT) [eg : 02/06/1999]";
$recordTable{INTERMEDIATE}[7][0][2] = "Start Time (hh:mm:ss.s)(GMT) [eg : 12:20:38.5]";
$recordTable{INTERMEDIATE}[8][0][2] = "Time Elapsed from Receipt of Setup Message to Policy Server/Sonus Softswitch Response in 10 ms Ticks [Decimal number from 0 to 4294967295]";
$recordTable{INTERMEDIATE}[9][0][2] = "Time Elapsed from Setup to Service Est (Receipt of Answer and Completion of Cut-through) in 10ms Ticks. [Decimal number from 0 to 4294967295]";
$recordTable{INTERMEDIATE}[10][0][2] = "Intermediate Time (mm/dd/yyyy) - TimeStamp of when the Intermediate  Accounting Timer Expired. (GMT) [eg : 02/06/1999]";
$recordTable{INTERMEDIATE}[11][0][2] = "Intermediate Time (hh:mm:ss.s) (GMT) [eg : 12:20:38.5]";
$recordTable{INTERMEDIATE}[12][0][2] = "Call Service Duration in 10ms ticks [Decimal number from 0 to 4294967295]";
$recordTable{INTERMEDIATE}[13][0][2] = "Service Delivered (VoIP/Circuit Switched Voice/VTOA) [String Up To 22 Characters]";
$recordTable{INTERMEDIATE}[14][0][2] = "Call Direction (PSTN-TO-IP/PSTN-TO-PSTN/IP-TO-PSTN/PSTN-TO-TERM/IP-TO-TERM/TERM-TO-IP/TERM-TO-PSTN/PSTN-TO-VTOA/VTOA-TO-PSTN/IP-TO-IP) [String up to 12 characters ]";
$recordTable{INTERMEDIATE}[15][0][2] = "Service Provider [String up to 23 characters]";
$recordTable{INTERMEDIATE}[16][0][2] = "Transit Network Selection Code [4 Digits] [ String up to 4 characters, for e.g 0288]";
$recordTable{INTERMEDIATE}[17][0][2] = "Calling Number [String up to 30 characters]";
$recordTable{INTERMEDIATE}[18][0][2] = "Called Number [String up to 30 characters]";
$recordTable{INTERMEDIATE}[19][0][2] = "Extra Called Address Digits [String up to 30 characters, not used in routing the call, received via Overlap Address Messages such as SAM]";
$recordTable{INTERMEDIATE}[20][0][2] = "Number of Called Num Translations done by this Node [Decimal number from 0 to 2]";
$recordTable{INTERMEDIATE}[21][0][2] = "Called Number Before Trans #1 [String up to 30 characters]";
$recordTable{INTERMEDIATE}[22][0][2] = "Translation Type - 1(0-None, 1-LNP, 2-TollFree, 3-Private, 4-Reserved)";
$recordTable{INTERMEDIATE}[23][0][2] = "Called Number Before Trans #2 [String up to 30 characters]";
$recordTable{INTERMEDIATE}[24][0][2] = "Translation Type - 2 (0-None, 1-LNP, 2-TollFree, 3-Private, 4-Reserved)";
$recordTable{INTERMEDIATE}[25][0][2] = "Billing Number [String up to 30 characters]";
$recordTable{INTERMEDIATE}[26][0][2] = "Route Label [String up to 23 characters]";
$recordTable{INTERMEDIATE}[27][0][2] = "Route Attempt Number [1 to 10]";
$recordTable{INTERMEDIATE}[28][0][2] = "Route Selected (GwInfo:TG Name) [string up to 51 characters] If the Gateway name is known, then GwInfo is the Gateway Name [string up to 27 characters] Else, GwInfo is the Gateway IP Address [ASCII IP address in dotted decimal format e.g 10.1.1.1, up to 15 Characters] TG Name is Trunk Group Name [string up to 23 characters]";
$recordTable{INTERMEDIATE}[29][0][2] = "Egress Local Signaling IP Address (Applicable only for PSTN-IP and IP-IP calls) [ASCII IPv4 address in dotted decimal format e.g 10.1.1.1 or IPv6 address in hexadecimal format e.g 3ffe:1900:4545:3:200:f8ff:fe21:67cf, up to 39 Characters]";
$recordTable{INTERMEDIATE}[30][0][2] = "Egress Remote Signaling IP Address (Applicable only for PSTN-IP and IP-IP calls) [ASCII IPv4 address in dotted decimal format e.g 10.1.1.1 or IPv6 address in hexadecimal format e.g 3ffe:1900:4545:3:200:f8ff:fe21:67cf, up to 39 Characters]";
$recordTable{INTERMEDIATE}[31][0][2] = "Ingress Trunk Group Name [string up to 23 chars]";
$recordTable{INTERMEDIATE}[32][0][2] = "Ingress PSTN Circuit End Point (Shelf [1-6]:Slot[1-16]:Port[1-28]:Ds0[1-32]: Cic[1-65535]:Local Point Code[32 Bit HEX format]:Remote Point Code[32 Bit HEX format] ) (Applicable only for PSTN-IP and PSTN-PSTN Calls)";
$recordTable{INTERMEDIATE}[33][0][2] = "Ingress IP Circuit End Point (Local IP Address:Port/Remote IP Address :Port) [IPv4 address in dotted decimal format,e.g 10.1.1.1 or IPv6 address in hexadecimal format e.g 3ffe:1900:4545:3:200:f8ff:fe21:67cf, up to 39 Characters] [Port Number - 0 to 65535] (Applicable only for IP-PSTN and IP-IP Calls)";
$recordTable{INTERMEDIATE}[34][0][2] = "Egress PSTN Circuit End Point (Shelf [1-6]:Slot[1-16]:Port[1-28]:Ds0[1-32]: Cic[1-65535]:Local Point Code[32 Bit HEX format]:Remote Point Code[32 Bit HEX format] ) (Applicable only for IP-PSTN and PSTN-PSTN Calls)";
$recordTable{INTERMEDIATE}[35][0][2] = "Egress IP Circuit End Point (Local IP Address:Port/Remote IP  Address:Port) [IPv4 address in dotted decimal format,e.g 10.1.1.1 or IPv6 address in hexadecimalformat e.g 3ffe:1900:4545:3:200:f8ff:fe21:67cf, up to 39 Characters] [Port Number - 0 to 65535] (Applicable only for PSTN-IP and IP-IP Calls)";
$recordTable{INTERMEDIATE}[36][0][2] = "Carrier Code [ String up to 5 characters, for e.g 0288]";
$recordTable{INTERMEDIATE}[37][0][2] = "Call Group ID (32 bit in HEX format, i.e 8 digits)";
$recordTable{INTERMEDIATE}[38][0][2] = "Ingress Protocol Variant Specific Data [String with double quote delimiters, i.e. \"JAPAN,0,0,...0x00\" length is up to 377 characters, including delimiters] Accounting data which is specific to the ingress signaling protocol. See tables at end for detailed information.";
$recordTable{INTERMEDIATE}[39][0][2] = "Ingress Signaling Type [Decimal Value. See Signaling Type Enumeration Table at the end for values]";
$recordTable{INTERMEDIATE}[40][0][2] = "Egress Signaling Type [Decimal Value. See Signaling Type Enumeration Table at the end for values]";
$recordTable{INTERMEDIATE}[41][0][2] = "Ingress Far End Switch Type [Decimal Value. See Far End Switch Type Table at the end for values]";
$recordTable{INTERMEDIATE}[42][0][2] = "Egress Far End Switch Type [Decimal Value. See Far End Switch Type Table at the end for values]";
$recordTable{INTERMEDIATE}[43][0][2] = "Carrier Code of the Carrier that owns the Ingress Trunk Group [String up to 5 characters]";
$recordTable{INTERMEDIATE}[44][0][2] = "Carrier Code of the Carrier that owns the Egress Trunk Group [String up to 5 characters]";
$recordTable{INTERMEDIATE}[45][0][2] = "Calling Party Category [Hex Value. See Table at end for values]";
$recordTable{INTERMEDIATE}[46][0][2] = "Dialed Number - Actual dialed number received by the Sonus Gateway before any digit manipulation was performed by the Softswitch. [String up to 30 characters]";
$recordTable{INTERMEDIATE}[47][0][2] = "Carrier Selection Information [Decimal Value. See Table at end for values]";
$recordTable{INTERMEDIATE}[48][0][2] = "Called Number Numbering Plan [Decimal Value. See Table at end for values]";
$recordTable{INTERMEDIATE}[49][0][2] = "Generic Address Parameter - The original called number if LNP was performed by a switch preceding the GSX. [String up to 30 characters]";
$recordTable{INTERMEDIATE}[50][0][2] = "Egress Trunk Group Name [string up to 23 chars]";
$recordTable{INTERMEDIATE}[51][0][2] = "Egress Protocol Variant Specific Data [String with double quote delimiters, i.e. \"JAPAN,0,0,...0x00\" length is up to 377 characters, including delimiters] Accounting data which is specific to the egress signaling protocol. See tables at end for detailed information.";
$recordTable{INTERMEDIATE}[52][0][2] = "Incoming Calling Number - This field represents the calling number presented to the GSX prior to any digit manipulation or translation by the PSX. It is the Calling Number in the Incoming Signaling Message (IAM/SETUP) to the GSX translation. [string up to 30 characters] (For NTT Japan this may be the Calling User Number from \"End of Information Transfer\" parameter.)";
$recordTable{INTERMEDIATE}[53][0][2] = "Intermediate Record Reason - This field indicates the reason why this record was generated. [Decimal Value. 0-Periodic (normal operation), 1-MtpPauseEvent, 2-SS7ConnectionFailure, 3-MaliciousCallTrace, 4-MCT, 5-TelcordiaLongduration, 6-CdrFormatChange]";
$recordTable{INTERMEDIATE}[54][0][2] = "Originating Line Information (OLIP), a.k.a info digits [Decimal Value. Values match ANSI T1.113 (ANSI ISUP) See Table at the end for OLIP values ]";
$recordTable{INTERMEDIATE}[55][0][2] = "Jurisdiction Information Parameter [JIP] [string up to 15 characters]";
$recordTable{INTERMEDIATE}[56][0][2] = "Calling Party Nature of Address. [Decimal Value. See Nature of Address Enumeration Table at end for values]";
$recordTable{INTERMEDIATE}[57][0][2] = "Called Party Nature of Address. [Decimal Value. See Nature of Address Enumeration Table at end for values]";
$recordTable{INTERMEDIATE}[58][0][2] = "AMA Call Type (a.k.a. AMA Call Code) [Decimal number from 000 to 999, leading zeros are displayed]";
$recordTable{INTERMEDIATE}[59][0][2] = "Message Billing Indicator (MBI) [Decimal number from 000 to 999, leading zeros are displayed]";
$recordTable{INTERMEDIATE}[60][0][2] = "Originating LATA [String up to 3 characters] Represents the Originating Local Access and Transport Area (LATA).";
$recordTable{INTERMEDIATE}[61][0][2] = "Calling Party Number Presentation Restriction [Decimal value. See table at end for values]";
$recordTable{INTERMEDIATE}[62][0][2] = "Incoming ISUP Charge Number [String up to 30 characters] This is the billing number provided in the IAM prior to any Softswitch manipulation or translation. Only applicable for SS7 calls.";
$recordTable{INTERMEDIATE}[63][0][2] = "Incoming ISUP Charge Number Nature of Address [Decimal Value. See Nature of Address Enumeration Table at end for values] This is the billing number NOA provided in the IAM prior to any Softswitch manipulation or translation. Only applicable for SS7 calls.";
$recordTable{INTERMEDIATE}[64][0][2] = "Dialed Number Nature Of Address [Decimal Value. See Nature of Address Enumeration Table at end for values]";
$recordTable{INTERMEDIATE}[65][0][2] = "GSX Call ID (a.k.a. GCID) [32 Bits in Hex format, eg 0x01234567] This is the GSX's internally assigned Global Call ID (GCID).";
$recordTable{INTERMEDIATE}[66][0][2] = "Charge Flag [0-None, 1-No Charge, 2-Charge, 3-Spare, 4-No Indication]";
$recordTable{INTERMEDIATE}[67][0][2] = "AMA Service Logic ID (AMAslpID) [String up to 9 characters] This field records an identification of the service logic in the SCP tath was used. The value is contained in an AMAslpID parameter received from the SCP.";
$recordTable{INTERMEDIATE}[68][0][2] = "AMA BAF Module [String up to 256 characters] This field records a variety of billing information. The first 3 characters specify a Module Code. This code specifies which BAF table should be used to interpret the remaining characters. Refer to GR-1100-CORE, Section 5.7 BAF Module List for details.";
$recordTable{INTERMEDIATE}[69][0][2] = "AMA Set Hex AB Indicator [Boolean. 0=FALSE, 1=TRUE] If TRUE, then the AMA BAF Module contains a known or suspected error.";
$recordTable{INTERMEDIATE}[70][0][2] = "Service Feature ID [Decimal number from 000 to 999] This field indicates a customer's originating or terminating line characteristics.";
$recordTable{INTERMEDIATE}[71][0][2] = "FE Parameter [8 or 10 byte hex value] Source: Backwards call indicator. Contains the optional FE parameter which is part of the backwards call control messages ACM, CPG, ANM and Gateway-to-Gateway Signalling. See table at end for detailed description.";
$recordTable{INTERMEDIATE}[72][0][2] = "Satellite Indicator [0=No Satellite, 1=Satellite] Source: Nature of Connection Indicator. Indicates whether or not a satellite trunk was used.";
$recordTable{INTERMEDIATE}[73][0][2] = "PSX Billing Information [Hex value up to 255 bytes] See table at end for definitions.";
$recordTable{INTERMEDIATE}[74][0][2] = "Originating TDM Trunk Group Type [Decimal value, range 0 to 255] See table at end for definitions.";
$recordTable{INTERMEDIATE}[75][0][2] = "Terminating TDM Trunk Group Type [Decimal value, range 0 to 255] See table at end for definitions.";
$recordTable{INTERMEDIATE}[76][0][2] = "Ingress Trunk Member Number [Decimal value, range 0 to 65535] This field identifies the selected DS0 within a trunk group.";
$recordTable{INTERMEDIATE}[77][0][2] = "Egress Trunk Group ID [Decimal value, range 0 to 4095] Egress trunk group ID on the egress GSX. The value of this field will be different than the one received in the FE parameter if the final switch is not the same as the egress GSX.";
$recordTable{INTERMEDIATE}[78][0][2] = "Egress Switch ID [Decimal value, range 0 to 1023] Egress switch ID on the egress GSX. The value of this field will be different than the one received in the FE parameter if the final switch is not the same as the egress GSX.";
$recordTable{INTERMEDIATE}[79][0][2] = "Active Call Ingress Local ATM Address (Applicable only for ATM Calls) [ string up to 42 characters, see ATM Address format at end ] The ATM address of the local physical port attached to the ATM network on the ingress leg of the call.";
$recordTable{INTERMEDIATE}[80][0][2] = "Active Call Ingress Remote ATM Address (Applicable only for ATM Calls) [ string up to 42 characters, see ATM Address format at end ] The ATM address of the remote physical port attached to the ATM network on the ingress leg of the call.";
$recordTable{INTERMEDIATE}[81][0][2] = "Active Call Egress Local ATM Address (Applicable only for ATM Calls) [ string up to 42 characters, see ATM Address format at end ] The ATM address of the local physical port attached to the ATM network on the egress leg of the call.";
$recordTable{INTERMEDIATE}[82][0][2] = "Active Call Egress Remote ATM Address (Applicable only for ATM Calls) [ string up to 42 characters, see ATM Address format at end ] The ATM address of the remote physical port attached to the ATM network on the egress leg of the call.";
$recordTable{INTERMEDIATE}[83][0][2] = "Policy Response Call Type [Decimal value from 0 to 62]";
$recordTable{INTERMEDIATE}[84][0][2] = "Outgoing Route Identification - [Decimal value from 0 to 65535] This field represents the Outgoing Trunk Group Number for call that overflows from one gateway to another via a Singapore Inter-Gateway Circuit (IGC) trunk. This value is extracted from the ISUP Address Complete Message's (ACM) optional \"Outgoing Route Identification (ORI)\" parameter. Only internetworking calls will have this field populated.";
$recordTable{INTERMEDIATE}[85][0][2] = "Outgoing Message Identification - (0-National Route, 1-Transit Route, 2-Terminating Route, 3-Spare) This field represents what type of route taken. See OMI section at end for population information.";
$recordTable{INTERMEDIATE}[86][0][2] = "Incoming Route Identification - [Decimal value from 0 to 65535] This field represents incoming source (incoming trunk group number). It is used to determine whether the source is from domestic or international network. The GSX extracts this value from the ISUP IAM's optional \"Incoming Route Identification (INRI)\" parameter. This optional parameter is specific to Singapore deployments. If INRI is not present, then this field will be blank.";
$recordTable{INTERMEDIATE}[87][0][2] = "Calling Name [String up to 24 characters with string delimiters \"\" ] Represents the name of the calling party.";
$recordTable{INTERMEDIATE}[88][0][2] = "Calling Name Type (0-Invalid, 1-Spare, 2-Calling Name, 3-Original Calling Name, 4-Redirect Name, 5-Connected Name) ";
$recordTable{INTERMEDIATE}[89][0][2] = "Incoming Calling Party Numbering Plan [Decimal Value. See Table at end for values] This field represents the Calling Party Numbering Plan received in the incoming setup message. For ISUP calls this value is contained in the optional Calling Party Number parameter in the Initial Address Message (IAM). For SIP calls, this value is contained in the FROM, TO, REQUEST URI, CONTACT and DIVERSION headers.";
$recordTable{INTERMEDIATE}[90][0][2] = "Outgoing Calling Party Numbering Plan [Decimal Value. See Table at end for values] This field represents the Calling Party Numbering Plan sent by the GSX in outgoing messages. The PSX determines this value during the route process. The outgoing plan is either equal to the incoming plan or the plan provisioned against the ingress trunk group.";
$recordTable{INTERMEDIATE}[91][0][2] = "Calling Party Business Group ID [Decimal value from 0 to 4294967295, If data is not present or unknown, then a one \"1\" (Public Business Group) will be logged] This value represents the Business Group ID of the calling party. The GSX receives this value in the SIP INCOMING INVITE message. Currently SIP is the only protocol which supports Business Group IDs. For all other protocols (ISUP, H323, etc.) this field will be logged as \"1\".";
$recordTable{INTERMEDIATE}[92][0][2] = "Called Party Business Group ID [Decimal value from 0 to 4294967295, If data is not present or unknown, then a one \"1\" (Public Business Group) will be logged] This value represents the Business Group ID of the called party. The GSX receives this value in the SIP INCOMING INVITE message. This value is then sent to the PSX in the Policy Request message. As part of the routing process the PSX may modify this value and return it in the Policy Response. The GSX logs the value supplied by the PSX, not the value received in the INVITE message. In release 4.1, SIP is the only protocol which supports Business Group IDs. For all other protocols (ISUP, H323, etc.) this field will be logged as \"1\".";
$recordTable{INTERMEDIATE}[93][0][2] = "Calling Party Public Presence Directory Number [String up to 30 characters] The Calling Party Public Presence Directory Number (PPDN) is an optional SIP parameter which is propagated as the calling number when a call goes into the Public PSTN. If the SIP Invite message's Remote Party ID header contains id-context=ppdn, then the Remote Party ID will be interpreted and logged as the Calling PPDN. If the id-context is not PPDN or if the ingress protocol is not SIP, then this field will be left blank (\"\").";
$recordTable{INTERMEDIATE}[94][0][2] = "Elapsed Time from Receipt of Setup Message to Last Call Routing Attempt in 10ms Ticks. [Decimal number from 0 to 4294967295]";
$recordTable{INTERMEDIATE}[95][0][2] = "Time Elapsed from Receipt of Setup Message to Receipt of Exit Message (EXM) in 10ms Ticks. [Decimal number from 0 to 4294967295]";
$recordTable{INTERMEDIATE}[96][0][2] = "Time Elapsed from Receipt of Setup Message to Generation of Exit Message (EXM) in 10ms Ticks. [Decimal number from 0 to 4294967295]";
$recordTable{INTERMEDIATE}[97][0][2] = "Billing Number NOA [Decimal Value. See Nature of Address Enumeration Table at end for values] This field is the Nature of Address Indicator sent in outgoing Charge Number parameters. The PSX sets this value to either the Incoming Charge Number NOA or to the Billing Number NOA provisioned against the ingress Trunk Group.";
$recordTable{INTERMEDIATE}[98][0][2] = "Incoming Calling Number NOA [Decimal Value. See Nature of Address Enumeration Table at end for values] This field is the Nature of Address Indicator received in the incoming setup message.";
$recordTable{INTERMEDIATE}[99][0][2] = "Egress Trunk Group Member Number [Decimal value, range 0 to 65535] This field uniquely identifies the DS0 circuit used for this call in the egress Trunk Group. If the Trunk Member for the egress trunk group is not configured, then this field will be left blank (\"\"). Trunk Member can only be configured for ISDN, ISUP and CAS trunks. For Gateway to Gateway calls, both the originating and terminating gateways will log the terminating gateway's Egress Trunk Group Member Number.";
$recordTable{INTERMEDIATE}[100][0][2] = "Selected Route Type [Decimal value. See Route Type Enumeration Table at end for values]";
$recordTable{INTERMEDIATE}[101][0][2] = "Telcordia Long Duration Record Type - [Decimal Value, range 0 to 2]. Indicates which type of Telcordia Long Duration record this is. Telcordia defines a long duration call as one whose duration exceeds 1440 minutes (24 hours) at the configured audit time (once per day). During this audit, an intermediate record will be generated for all long duration calls. If this is the first long duration record for the call then a \"1\" will be logged. All subsequent records are considered continuation records and a \"2\" will be logged. 0 - Not a Telcordia Long Duration 1 - Telcordia First Record (n/a for STOP records) 2 - Telcordia Continuation Record";
$recordTable{INTERMEDIATE}[102][0][2] = "Time Elapsed From Previous Record [Decimal number from 0 to 4294967295] Time in 10ms ticks from the previous record (START or INTERMEDIATE) to this record (INTERMEDIATE).";
$recordTable{INTERMEDIATE}[103][0][2] = "Calling Party Subaddress [String up to 30 characters] This field identifies the subaddress associated with the origin of an ISDN PRI call.";
$recordTable{INTERMEDIATE}[104][0][2] = "Outgoing Trunk Group Number in EXM [String up to 6 characters] Outgoing TGN is an optional parameter contained in the Exit Message (EXM). If an EXM was received and it contained an Outgoing TGN, then this field will be populated with the TGN. If an EXM was generated, then the Outgoing TGN will be populated from the service group profile. Otherwise this field will be left blank.";
$recordTable{INTERMEDIATE}[105][0][2] = "Ingress Local Signaling IP Address (Applicable only for IP-PSTN and IP-IP calls) [ASCII IPv4 address in dotted decimal format e.g 10.1.1.1 or IPv6 address in hexadecimal format e.g 3ffe:1900:4545:3:200:f8ff:fe21:67cf, up to 39 Characters]";
$recordTable{INTERMEDIATE}[106][0][2] = "Ingress Remote Signaling IP Address (Applicable only for IP-PSTN and IP-IP calls) [ASCII IPv4 address in dotted decimal format e.g 10.1.1.1 or IPv6 address in hexadecimal format e.g 3ffe:1900:4545:3:200:f8ff:fe21:67cf, up to 39 Characters]";
$recordTable{INTERMEDIATE}[107][0][2] = "Record Sequence Number [Decimal value from 0 to 4294967295]";
$recordTable{INTERMEDIATE}[108][0][2] = "Transmission Medium Requirement [Decimal Value, range 0 to 255, or empty] See TRANSMISSION MEDIUM REQUEST table at end for description and values.";
$recordTable{INTERMEDIATE}[109][0][2] = "Information Transfer Rate [Decimal Value, range 0 to 31, or empty] See INFORMATION TRANSFER RATE table at end for description and values.";
$recordTable{INTERMEDIATE}[110][0][2] = "USI User Info Layer 1 [Decimal Value, range 0 to 31, or empty] See USI USER INFO LAYER 1 table at end for description and values.";
$recordTable{INTERMEDIATE}[111][0][2] = "Unrecognized Raw ISUP Calling Party Category [Decimal value from 0 to 255] If the GSX does not recognize the recevied calling party category, then the actual (raw) value received will be logged in this field. Otherwise, this field will be empty (\"\").";
$recordTable{INTERMEDIATE}[112][0][2] = "Egress Release Link Trunking (RLT) Feature Specific Data (FSD) [See RLT Table at end for values]";
$recordTable{INTERMEDIATE}[113][0][2] = "Two B-Channel Transfer (TBCT) Feature Specific Data (FSD) [See TBCT Table at end for values]";
$recordTable{INTERMEDIATE}[114][0][2] = "Calling Party Business Unit [Decimal value from 0 to 4294967295, or empty] Repesents the calling party Business Unit (aka Sub-Group ID) and is supplied by the PSX in the Policy Response. If business unit data is not available for the call, then this field will be empty.";
$recordTable{INTERMEDIATE}[115][0][2] = "Called Party Business Unit [Decimal value from 0 to 4294967295, or empty] Repesents the called party Business Unit (aka Sub-Group ID) and is supplied by the PSX in the Policy Response. If business unit data is not available for the call, then this field will be empty.";
$recordTable{INTERMEDIATE}[116][0][2] = "Redirecting Feature Specific Data (FSD) [See REDI Table at end for values]";
$recordTable{INTERMEDIATE}[117][0][2] = "Ingress Release Link Trunking (RLT) Feature Specific Data (FSD) [See RLT Table at end for values]";
$recordTable{INTERMEDIATE}[118][0][2] = "PSX Index ( decimal value from 0 to 10 )";
$recordTable{INTERMEDIATE}[119][0][2] = "PSX Congestion Level ( decimal value from 0 t0 3. 0=Clear, 1=Low, 2=Medium, 3=High, empty=CongestionControlDisabled )";
$recordTable{INTERMEDIATE}[120][0][2] = "PSX Processing Time ( decimal value from 0 to 2^16 -1 in milliseconds )";
$recordTable{INTERMEDIATE}[121][0][2] = "Script Name (String up to 23 characters) Name of the Sonus CPL script last executed for this call. If no script is executed, then this field will be empty (\"\").";
$recordTable{INTERMEDIATE}[122][0][2] = "Ingress External Accounting Data ( String upto 150 characters )";
$recordTable{INTERMEDIATE}[123][0][2] = "Egress External Accounting Data ( String upto 150 characters )";
$recordTable{INTERMEDIATE}[124][0][2] = "Call Supervision Type ( enum CPC_CALL_SUPERVISION_TYPE_ENUM. 0=Disabled, 1=HW Answer, 2=SW Answer )";
$recordTable{INTERMEDIATE}[125][0][2] = "Ingress SIP Feature Specific Data (FSD) [See SREF/SREPL Table at end for values]";
$recordTable{INTERMEDIATE}[126][0][2] = "Egress SIP Feature Specific Data (FSD) [See SREF/SREPL Table at end for values]";
$recordTable{INTERMEDIATE}[127][0][2] = "Network Transfer Feature Specific Data (FSD) [See NWXF Table at end for values]";
$recordTable{INTERMEDIATE}[128][0][2] = "Call Condition ( decimal value from 0 to 39, or empty ) Call Condition provides the cirteria for determining AMA call type value for billing records. It's determined by the PSX based on the type of call along with other network information( Terminating, Inter/Intra Network). [see Call Condition Table at end for values]";
$recordTable{INTERMEDIATE}[129][0][2] = "Toll Indicator ( Decimal value, range 0 to 64, or empty) Provides the toll indication for the call as determined by the PSX. [see Toll Indicator table at end for values]";
$recordTable{INTERMEDIATE}[130][0][2] = "Generic Number ( number, string up to 30 characters ) This field contains the digits from the Generic number, i.e. the \"number\" subfield. This field is presented based on the ISUP signaling received at the gateway, e.g. ISUP IAM, SGM. Note: The \"Generic Address Parameter\" field refers to Called Party Number for LNP translation. The meaning of this Generic Number field is based on the Generic Number Type. For example, if the Generic Number Type sets to CPC_ADDR_GAP_CALLING_NUMBER, it refers to the \"Additional Calling Party Number\".";
$recordTable{INTERMEDIATE}[131][0][2] = "Generic Number Presentation Restriction Indicator ( Enumeration, 1 chararacter ) This field contains the Presentation Restriction Indicator from the Generic number. Enum of CPC_ADDR_PRESENTATION_RESTRICTION_INDICATOR_ENUM.";
$recordTable{INTERMEDIATE}[132][0][2] = "Generic Number Numbering Plan ( Enumeration, 1-2 characters ) This field contains the numbering plan from the Generic number. Enum of CPC_ADDR_NUMBERING_PLAN_ENUM";
$recordTable{INTERMEDIATE}[133][0][2] = "Generic Number Nature of Address ( Enumeration, 1-3 characters ) This field contains the Nature of Address from the Generic number. Enum of CPC_ADDR_NATURE_OF_ADDR_ENUM";
$recordTable{INTERMEDIATE}[134][0][2] = "Generic Number Type ( Enumeration, 1-2 characters ) This field contains the Generic Number Type from the Generic Number (e.g., when the Generic Number Type sets to 9, the Generic Number fields present the \"Additional Calling Party Number\"). This field is presented based on the ISUP signaling received at the gateway, e.g, ISUP IAM, SGM.";
$recordTable{INTERMEDIATE}[135][0][2] = "Originating Trunk Type ( KDDI specific raw hex data, 2 chars ) This field contains one byte hex code representing the originating trunk type as specified by customer. This field is associated with the corresponding field of trunk group screen on PSX.";
$recordTable{INTERMEDIATE}[136][0][2] = "Terminating Trunk Type ( KDDI specific raw hex data, 2 chars ) This field contains one byte hex code representing the terminating trunk type as specified by customer. This field is associated with the corresponding field of trunk group screen on PSX.";
$recordTable{INTERMEDIATE}[137][0][2] = "VPN Calling Private Presence Number ( 0-30 characters ) This field contains VPN Calling Private Presence Number for VPN originated calls. This field comes from the PSX Policy Response. This field is only populated for VPN generated calls and is empty for all other calls.";
$recordTable{INTERMEDIATE}[138][0][2] = "VPN Calling Public Presence Number ( 0-30 characters ) This field contains VPN Calling Public Presence Number for VPN originated calls in E-164 format. This field comes from the PSX Policy Response. This field is only populated for VPN  generated calls and is empty for all other calls.";
$recordTable{INTERMEDIATE}[139][0][2] = "Furnish Charging Info (0-800 hexadecimal characters ) This field contains external Furnish Charging Info provided by SCP. Field is populated as it's original ASN.1 binary format across PSX-GSX and within GSX DS/CC/CAM to reduce the traffic and ICM/memory usage. Each byte of binary data is represented as two hexadecimal characters by CAM during ASCII CDR formatting.";
$recordTable{INTERMEDIATE}[140][0][2] = "Announcement Id ( Decimal value between 1- 65535 ) This field contains the ID of the last announcement played by the GSX on this call.	";
$recordTable{INTERMEDIATE}[141][0][2] = "Network Data - Source Information ( Enumeration, 1-2 characters ) This field contains the Source Informtaion type from the Network Data (C3/E0) parameter in the IAM message.";
$recordTable{INTERMEDIATE}[142][0][2] = "Network Data - Partition ID (Decimal value between 0 - 4095 ) This field contains the Partition ID used from the Network Data (C3/E0) parameter in the IAM message.";
$recordTable{INTERMEDIATE}[143][0][2] = "Network Data - Network ID (Decimal value between 0 - 32767 ) This field contains the Network ID used from the Network Data (C3/E0) parameter in the IAM message.";
$recordTable{INTERMEDIATE}[144][0][2] = "Network Data - NCOS (Decimal value between 0 - 65536 ) This field contains the NCOS used from the Network Data (C3/E0) parameter in the IAM message.";
$recordTable{INTERMEDIATE}[145][0][2] = "ISDN Access Indicator [Decimal value from 0 to 1. 0=ISUP Not Used all the way, 1=ISUP Used all the way] ISDN Access Indicator value from the Forward Call Indicator parameter. This is presented as an optional parameter in the incoming signaling, e.g. ISUP IAM, ISDN SETUP, or SIP INVITE.";
$recordTable{INTERMEDIATE}[146][0][2] = "Network Call Reference - Call Identity (Decimal Value, range 0-16777215, or empty) This filed contains the Call Identity from the Network Call Reference parameter in the IAM message, used for billing.";
$recordTable{INTERMEDIATE}[147][0][2] = "Network Call Reference - Signaling Point Code (Decimal Value, range 0-16383, or empty) This filed contains the Signaling Point Code from the Network Call Reference parameter in the IAM message, used for billing.";
$recordTable{INTERMEDIATE}[148][0][2] = "Ingress ISUP MIME Protocol Specific Data ISUP protocol specific CDR data based on the contents of the ISUP mime data carried in SIP-I messages. See PCR1234.";
$recordTable{INTERMEDIATE}[149][0][2] = "Egress ISUP MIME Protocol Specific Data ISUP protocol specific CDR data based on the contents of the ISUP mime data carried in SIP-I messages. See PCR1234.";
$recordTable{INTERMEDIATE}[150][0][2] = "Video Data - A quoted comma separated string. In INTERMEDIATE record, only the following subfields are populated: Ingress IP Video End Point Egress IP Video End Point See \"Video Data CDR\" description of sub-fields below. ";
$recordTable{INTERMEDIATE}[151][0][2] = "SVS Customer (KDDI Global network specific) This field contains the trunk group number field from the K-ISUP Route Information parameter. See Pcr1624.";
$recordTable{INTERMEDIATE}[152][0][2] = "SVS Vendor - deprecated in 7.2.2 as part of Pcr1624 This field contains the terminating route information in KDDI Global network. See PCR1338.";
$recordTable{INTERMEDIATE}[153][0][2] = "Remote GSX Billing Indicator ( BOOLEAN, 0 or 1 or empty ) This optional CAM field indicates whether a CDR record includes billing info from remote GSX for GSX-GSX calls. This field is empty by default since \"Remote GSX Info Propagation\" feature is disabled by default. When \"Remote GSX Info Propagation\" feature is enabled along with the \"Send Immediate\" option (PCR 1216), this field is present with TRUE or FALSE. Value 0 indicates this CDR record does not contain billing info from destination GSX. Value 1 indicates this CDR record contains billing info from both originating GSX and destination GSX. Note: When this indicator is set to 1(TRUE), then the following 4 fields contain billing info of destination GSX instead of this GSX. --- \"Egress PSTN Circuit End Point\" INTERMEDIATE-34 --- \"Egress IP Circuit End Point\" INTERMEDIATE-35 --- \"Egress Signaling Type\" INTERMEDIATE-40 --- \"Egress PVSD\" INTERMEDIATE-51";
$recordTable{INTERMEDIATE}[154][0][2] = "Call To Test PSX This field will be used to determine is a call was made to a Test PSX";
$recordTable{INTERMEDIATE}[155][0][2] = "Psx Overlap Route Requests This field contains the Number of PSX dips by this call with the Called Party Number incomplete. ";
$recordTable{INTERMEDIATE}[156][0][2] = "Ingress Bicc Info This field will be used to indicate the Ingress Bicc Specific CDR Information ";
$recordTable{INTERMEDIATE}[157][0][2] = "Egress Bicc Info This field will be used to indicate the Egress Bicc Specific CDR Information ";
$recordTable{INTERMEDIATE}[158][0][2] = "MLPP Precedence Level A field for reporting Precedence Level of the MLPP service, when service not enabled the field will be empty. 1=Flash Override 2=Flash 3=Immediate 4=Priority 5=Routine";
$recordTable{INTERMEDIATE}[159][0][2] = "NPUKK Special Routing Information (Hex, with 0x, 0x1,0x2,0x12,0x11,0x10) This is a one byte field received in the ingress IAM (or as configured in CLI) and passed on to CC. Bit numbers 1,3 and 5 are of importance now and in future other bits may be of use as well.	 ";
$recordTable{INTERMEDIATE}[160][0][2] = "NPUKK Customer or Carrier Identification This is a USHORT received in the ingress IAM (or as configured in CLI) with a value ranging from 0 to 16383 and indicates the customer or the carrier number associated with the incoming call. ";
$recordTable{INTERMEDIATE}[161][0][2] = "NPUKK ServiceType Identifier This is a one byte field received in the ingress IAM (or as configured in CLI) and passed on to CC as it is. Values are expected from 0 to 127. ";
$recordTable{INTERMEDIATE}[162][0][2] = "NPSSP Special Handling Information (Hex, with 0x, 0x10 or 0x14 or 0x11 etc) This is a one byte field received in the ingress IAM and passed on to CC as it is. Bit numbers 1 is of importance now and in future other bits may be of use as well. ";
$recordTable{INTERMEDIATE}[163][0][2] = "NPSSP ServiceType Identifier This is a one byte field received in the ingress IAM and passed on to CC as it is. Values are expected from 0 to 127.";
$recordTable{INTERMEDIATE}[164][0][2] = "Total ITX Charge Units (Decimal number ranging from 0 to 4294967295) Charge Units come as one byte field in the ITX message. During a call, several ITX messages are expected. Total ITX Charge Units is the aggregate of these charge units for the duration of the call. ";
$recordTable{INTERMEDIATE}[165][0][2] = "Global Charge Reference (Up to 40 ASCII characters or Empty) This is a field of 20 byte long array used for CDR correlation. The bytes will be output in hex format. Each byte would need two ASCII characters. ISUP Signaling profile flag GCR should be supported on ingress or egress side.	 ";
$recordTable{INTERMEDIATE}[166][0][2] = "RESERVED: PSX Name";
$recordTable{INTERMEDIATE}[167][0][2] = "RESERVED: No of PSX tried";
$recordTable{INTERMEDIATE}[168][0][2] = "RESERVED: Final Route Label";
$recordTable{INTERMEDIATE}[169][0][2] = "MTA Information";
$recordTable{INTERMEDIATE}[170][0][2] = "Access Network Charging Information";
$recordTable{INTERMEDIATE}[171][0][2] = "Access Transfer Specific Data";
$recordTable{INTERMEDIATE}[172][0][2] = "Emergency Indicator This field tells whether this call is categorised as Emergency call. 1=Emergency Call";
$recordTable{INTERMEDIATE}[173][0][2] = "UE Roaming Status";
$recordTable{INTERMEDIATE}[174][0][2] = "Ingress Zone Name";
$recordTable{INTERMEDIATE}[175][0][2] = "Egress Zone Name";
$recordTable{INTERMEDIATE}[176][0][2] = "Ingress Zone ID";
$recordTable{INTERMEDIATE}[177][0][2] = "Egress Zone ID";
$recordTable{INTERMEDIATE}[178][0][2] = "Ingress IpPrefix TgName";

$recordTable{SW_CHANGE}[1][0][1] = "Record Type";
$recordTable{SW_CHANGE}[2][0][1] = "Gateway Name";
$recordTable{SW_CHANGE}[3][0][1] = "Node Time Zone";
$recordTable{SW_CHANGE}[4][0][1] = "Record Date";
$recordTable{SW_CHANGE}[5][0][1] = "Record Time";
$recordTable{SW_CHANGE}[6][0][1] = "Old Software Version";
$recordTable{SW_CHANGE}[7][0][1] = "New Software Version";
$recordTable{SW_CHANGE}[8][0][1] = "Record Sequence Number";

$recordTable{EVENT}[1][0][1] = "Record Type";
$recordTable{EVENT}[2][0][1] = "Gateway Name";
$recordTable{EVENT}[3][0][1] = "Record Sequence Number";
$recordTable{EVENT}[4][0][1] = "SIP Method Type";
$recordTable{EVENT}[5][0][1] = "Sip Txn Status";
$recordTable{EVENT}[6][0][1] = "Event Package";
$recordTable{EVENT}[7][0][1] = "SIP Request Rxd Time in Ticks";
$recordTable{EVENT}[8][0][1] = "Node Time Zone";
$recordTable{EVENT}[9][0][1] = "SIP Request Start Time (MM/DD/YYYY)";
$recordTable{EVENT}[10][0][1] = "SIP Request Start Time(HH/MM/SS.s)";
$recordTable{EVENT}[11][0][1] = "Ingress Trunk Group Name";
$recordTable{EVENT}[12][0][1] = "Ingress Local Signaling IP Address";
$recordTable{EVENT}[13][0][1] = "Ingress Remote Signaling IP Address";
$recordTable{EVENT}[14][0][1] = "Service Provider";
$recordTable{EVENT}[15][0][1] = "Carrier Code";
$recordTable{EVENT}[16][0][1] = "Egress Trunk Group Name";
$recordTable{EVENT}[17][0][1] = "Egress Local Signaling IP Address";
$recordTable{EVENT}[18][0][1] = "Egress Remote Signaling IP Address";
$recordTable{EVENT}[19][0][1] = "Time Elapsed from Receipt of SIP Message to Policy Server Response(Ticks)";
$recordTable{EVENT}[20][0][1] = "Time Elapsed from Receipt of Sip Message to Last Routing Attempt (Ticks)";
$recordTable{EVENT}[21][0][1] = "Time Elapsed from Receipt of Sip Message to Last Routing Attempt (Ticks)";
$recordTable{EVENT}[22][0][1] = "Registered User";
$recordTable{EVENT}[23][0][1] = "Challenged  Request Received";
$recordTable{EVENT}[24][0][1] = "Duration of SIP Registration/Subscription Context";
$recordTable{EVENT}[25][0][1] = "Service Disconnect Reason";
$recordTable{EVENT}[26][0][1] = "Ingress Signaling  Information";
$recordTable{EVENT}[27][0][1] = "Egress  Signaling Information";
$recordTable{EVENT}[28][0][1] = "PSX Routing Info";
$recordTable{EVENT}[28][1][1] = "PSX congestion";
$recordTable{EVENT}[28][2][1] = "PSX Processing Time";
$recordTable{EVENT}[28][3][1] = "PSX Call Type";
$recordTable{EVENT}[28][4][1] = "PSX Billing Info";
$recordTable{EVENT}[28][5][1] = "Route Label";
$recordTable{EVENT}[28][6][1] = "Route Attempt Number";
$recordTable{EVENT}[28][7][1] = "Route Selected";
$recordTable{EVENT}[28][8][1] = "Route Index Used";
$recordTable{EVENT}[28][9][1] = "Cumulative Route Index";
$recordTable{EVENT}[28][10][1] = "Redirect attempt count";
$recordTable{EVENT}[28][11][1] = "Number of Called Num Translations";
$recordTable{EVENT}[28][12][1] = "Called Number Before Translation #1";
$recordTable{EVENT}[28][13][1] = "Translation Type #1";
$recordTable{EVENT}[28][14][1] = "Called Number Before Translation #2";
$recordTable{EVENT}[28][15][1] = "Translation Type #2";
$recordTable{EVENT}[28][16][1] = "Carrier Code of Carrier who Owns iTG Far End";
$recordTable{EVENT}[28][17][1] = "Carrier Code of Carrier who Owns eTG Far End";
$recordTable{EVENT}[28][18][1] = "Calling Number";
$recordTable{EVENT}[28][19][1] = "Calling Name";
$recordTable{EVENT}[28][20][1] = "Calling Name Type";
$recordTable{EVENT}[28][21][1] = "Calling Party Nature of Address";
$recordTable{EVENT}[28][22][1] = "Incoming Calling Party Numbering Plans";
$recordTable{EVENT}[28][23][1] = "Outgoing Calling Party Numbering Plans";
$recordTable{EVENT}[28][24][1] = "Incoming Calling Number Nature of Address";
$recordTable{EVENT}[28][25][1] = "Calling Party Category";
$recordTable{EVENT}[28][26][1] = "Calling Party Presentation Restriction";
$recordTable{EVENT}[28][27][1] = "Calling Party Public Presence Directory Number";
$recordTable{EVENT}[28][28][1] = "Called Number";
$recordTable{EVENT}[28][29][1] = "Called Number Numbering Plan";
$recordTable{EVENT}[28][30][1] = "Called Party Nature of Address";
$recordTable{EVENT}[28][31][1] = "Billing Number";
$recordTable{EVENT}[28][32][1] = "Billing Number Nature of Address";
$recordTable{EVENT}[28][33][1] = "Dialed Number";
$recordTable{EVENT}[28][34][1] = "Charge Flag";
$recordTable{EVENT}[28][35][1] = "JIP";
$recordTable{EVENT}[28][36][1] = "LATA";
$recordTable{EVENT}[28][37][1] = "Toll Indicator";
$recordTable{EVENT}[29][0][1] = "UE Roaming Status";
$recordTable{EVENT}[30][0][1] = "Emergency Indicator";
$recordTable{EVENT}[31][0][1] = "Ingress Zone Name";
$recordTable{EVENT}[32][0][1] = "Egress Zone Name";
$recordTable{EVENT}[33][0][1] = "Ingress Zone Id";
$recordTable{EVENT}[34][0][1] = "Egresss Zone Id";

$recordTable{QSeries}[1][0][1] = "start-time";
$recordTable{QSeries}[2][0][1] = "start-time";
$recordTable{QSeries}[3][0][1] = "call-duration";
$recordTable{QSeries}[4][0][1] = "call-source";
$recordTable{QSeries}[5][0][1] = "call-source-q931sig-port";
$recordTable{QSeries}[6][0][1] = "call-dest";
$recordTable{QSeries}[7][0][1] = "Terminator line";
$recordTable{QSeries}[8][0][1] = "call-source-custid";
$recordTable{QSeries}[9][0][1] = "called-party-ondest";
$recordTable{QSeries}[10][0][1] = "called-party-fromsrc";
$recordTable{QSeries}[11][0][1] = "call-type";
$recordTable{QSeries}[12][0][1] = "Not currently used.";
$recordTable{QSeries}[13][0][1] = "disconnect-error-type";
$recordTable{QSeries}[14][0][1] = "call-error";
$recordTable{QSeries}[15][0][1] = "call-error";
$recordTable{QSeries}[16][0][1] = "fax pages";
$recordTable{QSeries}[17][0][1] = "fax priority";
$recordTable{QSeries}[18][0][1] = "ani";
$recordTable{QSeries}[19][0][1] = "media-type";
$recordTable{QSeries}[20][0][1] = "data-volume-tx-src";
$recordTable{QSeries}[21][0][1] = "data-volume-tx-dst";
$recordTable{QSeries}[22][0][1] = "cdr-seq-no";
$recordTable{QSeries}[23][0][1] = "transcoder-id";
$recordTable{QSeries}[24][0][1] = "callid";
$recordTable{QSeries}[25][0][1] = "call-hold-time";
$recordTable{QSeries}[26][0][1] = "call-source-regid";
$recordTable{QSeries}[27][0][1] = "call-source-uport";
$recordTable{QSeries}[28][0][1] = "call-dest-regid";
$recordTable{QSeries}[29][0][1] = "call-dest-uport";
$recordTable{QSeries}[30][0][1] = "isdn-cause-code";
$recordTable{QSeries}[31][0][1] = "called-party-after-src-calling-plan";
$recordTable{QSeries}[32][0][1] = "call-error-dest";
$recordTable{QSeries}[33][0][1] = "call-error-dest";
$recordTable{QSeries}[34][0][1] = "call-error-event-str";
$recordTable{QSeries}[35][0][1] = "new-ani";
$recordTable{QSeries}[36][0][1] = "call-duration";
$recordTable{QSeries}[37][0][1] = "egress-callid-termination-endpoint";
$recordTable{QSeries}[38][0][1] = "protocol";
$recordTable{QSeries}[39][0][1] = "cdr-type";
$recordTable{QSeries}[40][0][1] = "hunting-attempts";
$recordTable{QSeries}[41][0][1] = "caller-trunk-group";
$recordTable{QSeries}[42][0][1] = "call-pdd";
$recordTable{QSeries}[43][0][1] = "h323-dest-ras-error";
$recordTable{QSeries}[44][0][1] = "h323-dest-h225-error";
$recordTable{QSeries}[45][0][1] = "sip-dest-respcode";
$recordTable{QSeries}[46][0][1] = "dest-trunk-group";
$recordTable{QSeries}[47][0][1] = "cal-duration-fractional";
$recordTable{QSeries}[48][0][1] = "timezone";
$recordTable{QSeries}[49][0][1] = "msw-name";
$recordTable{QSeries}[50][0][1] = "called-party-after-transit-route";
$recordTable{QSeries}[51][0][1] = "called-party-on-dest-num-type";
$recordTable{QSeries}[52][0][1] = "called-party-from-src-num-type";
$recordTable{QSeries}[53][0][1] = "call-source-realm-name";
$recordTable{QSeries}[54][0][1] = "call-dest-realm-name";
$recordTable{QSeries}[55][0][1] = "call-dest-crname";
$recordTable{QSeries}[56][0][1] = "call-dest-custid";
$recordTable{QSeries}[57][0][1] = "call-zone-data";
$recordTable{QSeries}[58][0][1] = "calling-party-on-dest-num-type";
$recordTable{QSeries}[59][0][1] = "calling-party-from-src-num-type";
$recordTable{QSeries}[60][0][1] = "original-isdn-cause-code";
$recordTable{QSeries}[61][0][1] = "packets-received-on-src-leg";
$recordTable{QSeries}[62][0][1] = "packets-lost-on-src-leg";
$recordTable{QSeries}[63][0][1] = "packets-discarded-on-src-leg";
$recordTable{QSeries}[64][0][1] = "pdv-on-src-leg";
$recordTable{QSeries}[65][0][1] = "codec-on-src-leg";
$recordTable{QSeries}[66][0][1] = "latency-on-src-leg";
$recordTable{QSeries}[67][0][1] = "rfactor-on-src-leg";
$recordTable{QSeries}[68][0][1] = "packets-received-on-dest-leg";
$recordTable{QSeries}[69][0][1] = "packets-lost-on-dest-leg";
$recordTable{QSeries}[70][0][1] = "packets-discarded-on-dest-leg";
$recordTable{QSeries}[71][0][1] = "pdv-on-dest-leg";
$recordTable{QSeries}[72][0][1] = "codec-on-dest-leg";
$recordTable{QSeries}[73][0][1] = "latency-on-dest-leg";
$recordTable{QSeries}[74][0][1] = "rfactor-on-dest-leg";
$recordTable{QSeries}[75][0][1] = "sip-src-respcode";
$recordTable{QSeries}[76][0][1] = "peer-protocol";
$recordTable{QSeries}[77][0][1] = "src-private-ip";
$recordTable{QSeries}[78][0][1] = "dest-private-ip";
$recordTable{QSeries}[79][0][1] = "src-igrp-name";
$recordTable{QSeries}[80][0][1] = "dest-igrp-name";
$recordTable{QSeries}[81][0][1] = "diversion-info";
$recordTable{QSeries}[82][0][1] = "custom-contact-tag";
$recordTable{QSeries}[83][0][1] = "e911-call";
$recordTable{QSeries}[84][0][1] = "reserved (SBC core GCID)";
$recordTable{QSeries}[85][0][1] = "reserved";
$recordTable{QSeries}[86][0][1] = "call-release-source";
$recordTable{QSeries}[87][0][1] = "hunt-attempts-including-LCF-tries";
$recordTable{QSeries}[88][0][1] = "call-gapping-error";
$recordTable{QSeries}[89][0][1] = "error-code-in-reason-header";
$recordTable{QSeries}[90][0][1] = "ocl-object-type";
$recordTable{QSeries}[91][0][1] = "ocl-object-id-dtn-regid-realmname";
$recordTable{QSeries}[92][0][1] = "ocl-object-id-dtnrealm-uport";
$recordTable{QSeries}[93][0][1] = "ocl-policy-name";
$recordTable{QSeries}[94][0][1] = "src-private-port";
$recordTable{QSeries}[95][0][1] = "dest-private-port";
$recordTable{QSeries}[96][0][1] = "src-realm-media-ip";
$recordTable{QSeries}[97][0][1] = "src-realm-media-port";
$recordTable{QSeries}[98][0][1] = "dest-realm-media-ip";
$recordTable{QSeries}[99][0][1] = "dest-realm-media-port";
$recordTable{QSeries}[100][0][1] = "src-trunk-context";
$recordTable{QSeries}[101][0][1] = "dest-trunk-context";
$recordTable{QSeries}[102][0][1] = "Leg1_PCV";
$recordTable{QSeries}[103][0][1] = "Leg2_PCV";
$recordTable{QSeries}[104][0][1] = "Leg1_PANI";
$recordTable{QSeries}[105][0][1] = "Leg2_PANI";
$recordTable{QSeries}[106][0][1] = "call-connect-time-ms";
$recordTable{QSeries}[107][0][1] = "call-end-time-ms";
$recordTable{QSeries}[108][0][1] = "routingNumber";
$recordTable{QSeries}[109][0][1] = "No of m-lines";
$recordTable{QSeries}[110][0][1] = "from-uri-user-part";
$recordTable{QSeries}[111][0][1] = "new-from-uri-user-part";
$recordTable{QSeries}[112][0][1] = "paid-uri-user-part";
$recordTable{QSeries}[113][0][1] = "new-paid-uri-user-part";
$recordTable{QSeries}[114][0][1] = "privacy";
$recordTable{QSeries}[115][0][1] = "request-uri-user-part";
$recordTable{QSeries}[116][0][1] = "new-request-uri-user-part";
$recordTable{QSeries}[117][0][1] = "local-refer-status";
$recordTable{QSeries}[118][0][1] = "sip-dest-respreason";
$recordTable{QSeries}[119][0][1] = "sip-src-respreason";
$recordTable{QSeries}[120][0][1] = "charge-number";
$recordTable{QSeries}[121][0][1] = "charge-number-noa";
$recordTable{QSeries}[122][0][1] = "charge-number-npi";
$recordTable{QSeries}[123][0][1] = "segment-start-time-ms";
$recordTable{QSeries}[124][0][1] = "segment-duration-fractional";
$recordTable{QSeries}[125][0][1] = "leg1-loss-rate";
$recordTable{QSeries}[126][0][1] = "leg1-discard-rate";
$recordTable{QSeries}[127][0][1] = "leg1-burst-density";
$recordTable{QSeries}[128][0][1] = "leg1-gap-density";
$recordTable{QSeries}[129][0][1] = "leg1-burst-duration";
$recordTable{QSeries}[130][0][1] = "leg1-gap-duration";
$recordTable{QSeries}[131][0][1] = "leg1-round-trip-delay";
$recordTable{QSeries}[132][0][1] = "leg1-ES-delay";
$recordTable{QSeries}[133][0][1] = "leg1-Gmin";
$recordTable{QSeries}[134][0][1] = "leg1-jb-adaptive";
$recordTable{QSeries}[135][0][1] = "leg1-jb-rate";
$recordTable{QSeries}[136][0][1] = "leg1-RFactor";
$recordTable{QSeries}[137][0][1] = "leg1-MCQ";
$recordTable{QSeries}[138][0][1] = "leg1-jb-nominal";
$recordTable{QSeries}[139][0][1] = "leg1-jb-max-delay";
$recordTable{QSeries}[140][0][1] = "leg1-jb-abs-max-delay";
$recordTable{QSeries}[141][0][1] = "leg2-loss-rate";
$recordTable{QSeries}[142][0][1] = "leg2-discard-rate";
$recordTable{QSeries}[143][0][1] = "leg2-burst-density";
$recordTable{QSeries}[144][0][1] = "leg2-gap-density";
$recordTable{QSeries}[145][0][1] = "leg2-burst-duration";
$recordTable{QSeries}[146][0][1] = "leg2-gap-duration";
$recordTable{QSeries}[147][0][1] = "leg2-round-trip-delay";
$recordTable{QSeries}[148][0][1] = "leg2-ES-delay";
$recordTable{QSeries}[149][0][1] = "leg2-Gmin";
$recordTable{QSeries}[150][0][1] = "leg2-jb-adaptive";
$recordTable{QSeries}[151][0][1] = "leg2-jb-rate";
$recordTable{QSeries}[152][0][1] = "leg2-RFactor";
$recordTable{QSeries}[153][0][1] = "leg2-MCQ";
$recordTable{QSeries}[154][0][1] = "leg2-jb-nominal";
$recordTable{QSeries}[155][0][1] = "leg2-jb-max-delay";
$recordTable{QSeries}[156][0][1] = "leg2-jb-abs-max-delay";
$recordTable{QSeries}[157][0][1] = "reserved for future use";
$recordTable{QSeries}[158][0][1] = "reserved for future use";
$recordTable{QSeries}[159][0][1] = "src-cipher-suite";
$recordTable{QSeries}[160][0][1] = "dest-cipher-suite";
$recordTable{QSeries}[161][0][1] = "src-packet-outside-replay-window";
$recordTable{QSeries}[162][0][1] = "src-packet-auth-failure";
$recordTable{QSeries}[163][0][1] = "src-packet-cipher-failure";
$recordTable{QSeries}[164][0][1] = "dest-packet-outside-replay-window";
$recordTable{QSeries}[165][0][1] = "dest-packet-auth-failure";
$recordTable{QSeries}[166][0][1] = "dest-packet-cipher-failure";
$recordTable{QSeries}[167][0][1] = "reserved for future use";
$recordTable{QSeries}[168][0][1] = "reserved for future use";
$recordTable{QSeries}[169][0][1] = "reserved for future use";
$recordTable{QSeries}[170][0][1] = "reserved for future use";
$recordTable{QSeries}[171][0][1] = "reserved for future use";
$recordTable{QSeries}[172][0][1] = "reserved for future use";
$recordTable{QSeries}[173][0][1] = "reserved for future use";
$recordTable{QSeries}[174][0][1] = "reserved for future use";
$recordTable{QSeries}[175][0][1] = "reserved for future use";
$recordTable{QSeries}[176][0][1] = "reserved for future use";
$recordTable{QSeries}[177][0][1] = "embedded-DSP-insertion-reason";
$recordTable{QSeries}[178][0][1] = "outgoing-to-uri";
$recordTable{QSeries}[179][0][1] = "incoming-request-uri";
$recordTable{QSeries}[180][0][1] = "incoming-rsa-ip-address";
$recordTable{QSeries}[181][0][1] = "SBC-iServer-version";
$recordTable{QSeries}[182][0][1] = "outgoing-request-uri";
$recordTable{QSeries}[183][0][1] = "outgoing-from-uri";
$recordTable{QSeries}[184][0][1] = "privacy-ingress-requested";
$recordTable{QSeries}[185][0][1] = "privacy-method-egress";
$recordTable{QSeries}[186][0][1] = "privacy-egress-requested";
$recordTable{QSeries}[187][0][1] = "src-policed-packets";
$recordTable{QSeries}[188][0][1] = "dest-policed-packets";
$recordTable{QSeries}[189][0][1] = "full-paid-hdr";
$recordTable{QSeries}[190][0][1] = "Source ptime";
$recordTable{QSeries}[191][0][1] = "Destination ptime";
$recordTable{QSeries}[192][0][1] = "fmm-call-invoked-profiles";
$recordTable{QSeries}[193][0][1] = "outgoing-topmost-route-header";
$recordTable{QSeries}[194][0][1] = "reserved for future use";
$recordTable{QSeries}[195][0][1] = "reserved for future use";
$recordTable{QSeries}[196][0][1] = "reserved for future use";
$recordTable{QSeries}[197][0][1] = "reserved for future use";
$recordTable{QSeries}[198][0][1] = "reserved for future use";
$recordTable{QSeries}[199][0][1] = "reinvite-reject-count";
$recordTable{QSeries}[200][0][1] = "organisation-hdr";
$recordTable{QSeries}[201][0][1] = "sdp-media-offer-codec";
$recordTable{QSeries}[202][0][1] = "sdp-media-answer-codec";
$recordTable{QSeries}[203][0][1] = "video-cac";
$recordTable{QSeries}[204][0][1] = "vmg-name";
$recordTable{QSeries}[205][0][1] = "msrp-data-volume-rx-src";
$recordTable{QSeries}[206][0][1] = "msrp-data-volume-rx-dst";
$recordTable{QSeries}[207][0][1] = "msrp-im-rx-src";
$recordTable{QSeries}[208][0][1] = "msrp-im-rx-dst";
$recordTable{QSeries}[209][0][1] = "msrp-file-size";
$recordTable{QSeries}[210][0][1] = "siprec-profile";
$recordTable{QSeries}[211][0][1] = "siprec-associated-callids";
$recordTable{QSeries}[212][0][1] = "rs-setup-error";
$recordTable{QSeries}[213][0][1] = "siprec-calluuid";
$recordTable{QSeries}[1][0][2] = "Starting date and time of call in the local gateway (YYYY-MM-DD HH:MM:SS).";
$recordTable{QSeries}[2][0][2] = "Gateway starting time of the call in seconds since January 1, 1970.";
$recordTable{QSeries}[3][0][2] = "Duration of call after the connection was established.";
$recordTable{QSeries}[4][0][2] = "IPv4 or IPv6 address of the originator gateway.";
$recordTable{QSeries}[5][0][2] = "Signaling port for the call.";
$recordTable{QSeries}[6][0][2] = "IPv4 or IPv6 address of the terminating gateway.";
$recordTable{QSeries}[7][0][2] = "Line number seized by the outgoing call at the terminating gateway. This field is not currently used.";
$recordTable{QSeries}[8][0][2] = "Code identifying the user originating the call. The value entered as the customer-id for the originating endpoint.";
$recordTable{QSeries}[9][0][2] = "Called number in E.164 format. Number as out-pulsed to the call terminator.";
$recordTable{QSeries}[10][0][2] = "Called number as dialed by the user. Number as sent from the ingress gateway.";
$recordTable{QSeries}[11][0][2] = "Call type description.";
$recordTable{QSeries}[12][0][2] = "Not currently used.";
$recordTable{QSeries}[13][0][2] = "Call disconnect reason.";
$recordTable{QSeries}[14][0][2] = "Error code of the call.";
$recordTable{QSeries}[15][0][2] = "Error code text description.";
$recordTable{QSeries}[16][0][2] = "Number of fax pages.";
$recordTable{QSeries}[17][0][2] = "Priority of fax transfer.";
$recordTable{QSeries}[18][0][2] = "Calling number identification. This field is used, if present from remote gateway.";
$recordTable{QSeries}[19][0][2] = "The type of media; AD (audio), VD (video), FX (fax), IM (chat session), FT (file transfer session).";
$recordTable{QSeries}[20][0][2] = "Number of bytes forwarded from the source leg.";
$recordTable{QSeries}[21][0][2] = "Number of bytes forwarded from the destination leg.";
$recordTable{QSeries}[22][0][2] = "Sequence number of the CDR record.";
$recordTable{QSeries}[23][0][2] = "Specifies transcoder-device-id if call was transcoded.";
$recordTable{QSeries}[24][0][2] = "Unique Call ID on ingress. Ingress leg call ID as received from origination endpoint.";
$recordTable{QSeries}[25][0][2] = "Complete time during which the call occupies network resources, until it is either abandoned or connected.";
$recordTable{QSeries}[26][0][2] = "Registration ID of the call originating gateway.";
$recordTable{QSeries}[27][0][2] = "Originating gateway port number.";
$recordTable{QSeries}[28][0][2] = "Registration ID of the destination gateway.";
$recordTable{QSeries}[29][0][2] = "Port number of the call at the destination.";
$recordTable{QSeries}[30][0][2] = "ISDN release cause code for call leg1.";
$recordTable{QSeries}[31][0][2] = "Called number after applying source call plan.";
$recordTable{QSeries}[32][0][2] = "Error code of the call.";
$recordTable{QSeries}[33][0][2] = "Text descriptiom of error in field 32.";
$recordTable{QSeries}[34][0][2] = "Used for QSeries debugging only.";
$recordTable{QSeries}[35][0][2] = "Translated Calling Number after applying the Call Plan.";
$recordTable{QSeries}[36][0][2] = "Duration of call, in seconds, after the connection was established.";
$recordTable{QSeries}[37][0][2] = "Unique call ID on egress. Call ID generated by the SBC and sent to termination endpoint.";
$recordTable{QSeries}[38][0][2] = "Either sip or h323";
$recordTable{QSeries}[39][0][2] = "Either start1, start2, end1, end2, hunt, or interim.";
$recordTable{QSeries}[40][0][2] = "Call attempt # of current call (while hunting).";
$recordTable{QSeries}[41][0][2] = "Source trunk group ID.";
$recordTable{QSeries}[42][0][2] = "Post dial delay, in milliseconds, from SETUP to ALERTING or Progress Indicator.";
$recordTable{QSeries}[43][0][2] = "RAS error return code.";
$recordTable{QSeries}[44][0][2] = "H.225 error return code.";
$recordTable{QSeries}[45][0][2] = "Response code received from SIP leg 2, if that leg was SIP and call did not connect successfully.";
$recordTable{QSeries}[46][0][2] = "Destination trunk group ID.";
$recordTable{QSeries}[47][0][2] = "Call duration in seconds, to thousandths.";
$recordTable{QSeries}[48][0][2] = "Local time zone of the session controller.";
$recordTable{QSeries}[49][0][2] = "The configured SBC host-name or UNIX hostname if not configured. This is also the sipserver name for SIP calls.";
$recordTable{QSeries}[50][0][2] = "The called party number after any transit route application (blank if none applied).";
$recordTable{QSeries}[51][0][2] = "The called party number type for CDR field 9 (national or international).";
$recordTable{QSeries}[52][0][2] = "The called party number type for CDR field 10 (national or international).";
$recordTable{QSeries}[53][0][2] = "Name of the realm from which the call was placed.";
$recordTable{QSeries}[54][0][2] = "Name of the realm from which the call was placed.";
$recordTable{QSeries}[56][0][2] = "Egress route used to complete the call.";
$recordTable{QSeries}[56][0][2] = "Egress endpoint customer id.";
$recordTable{QSeries}[57][0][2] = "Zone for the ingress endpoint.";
$recordTable{QSeries}[58][0][2] = "Calling party number type for CDR field 18. Type sent to egress endpoint.";
$recordTable{QSeries}[59][0][2] = "Calling party number type for CDR field 18. Type received from ingress endpoint.";
$recordTable{QSeries}[60][0][2] = "Original endpoint-generated ISDN release cause code (leg 2), range 1 to 127.";
$recordTable{QSeries}[61][0][2] = "Number of packets received on the source leg (ingress).";
$recordTable{QSeries}[62][0][2] = "Number of packets lost + packets discarded on the source leg (ingress).";
$recordTable{QSeries}[63][0][2] = "Number of packets discarded on the source leg (ingress).";
$recordTable{QSeries}[64][0][2] = "Packet delay variation on the source leg (ingress) in microseconds.";
$recordTable{QSeries}[65][0][2] = "Type of coder/decoder (codec) used on the source leg (ingress) of media-routed calls.";
$recordTable{QSeries}[66][0][2] = "Average packet latency (transit time) in milliseconds as measured by the SBC on the source leg using RTCP or RTCP XR.";
$recordTable{QSeries}[67][0][2] = "R factor is a voice quality score. The range for narrow band codecs is 0 to 100. The range for wide band codecs is 0 to 129.";
$recordTable{QSeries}[68][0][2] = "Number of packets received on the destination leg (egress).";
$recordTable{QSeries}[69][0][2] = "Number of packets lost + packets discarded on the destination leg (egress).";
$recordTable{QSeries}[70][0][2] = "Number of packets discarded on the destination leg (egress).";
$recordTable{QSeries}[71][0][2] = "Packet delay variation on the destination leg (egress) in microseconds.";
$recordTable{QSeries}[72][0][2] = "Type of coder/decoder (codec) used on the destination leg (egress) of media-routed calls.";
$recordTable{QSeries}[73][0][2] = "Average packet latency (transit time) in milliseconds as measured by the SBC on the destination leg using RTCP or RTCP XR.";
$recordTable{QSeries}[74][0][2] = "R factor is a voice quality score. The range for narrow band codecs is 0 to 100. The range for wide band codecs is 0 to 129.";
$recordTable{QSeries}[75][0][2] = "SIP response code sent to the ingress point if egress call leg did not connect successfully.";
$recordTable{QSeries}[76][0][2] = "Protocol for the corresponding other call leg.";
$recordTable{QSeries}[77][0][2] = "Calling party (source) media IPv4 or IPv6 address.";
$recordTable{QSeries}[78][0][2] = "Called party (source) media IPv4 or IPv6 address.";
$recordTable{QSeries}[79][0][2] = "Leg 1 endpoint-group.";
$recordTable{QSeries}[80][0][2] = "Leg 2 enfpoint-group.";
$recordTable{QSeries}[81][0][2] = "Call diversion information for SIP calls.";
$recordTable{QSeries}[82][0][2] = "Bid and ask history of an Arbinet server's redirect arbinet field, in its Contact header.";
$recordTable{QSeries}[83][0][2] = "Indicates the call was an emergency call, as determined by whether the dialed number matched one of the emergency numbers configured on the SBC (such as 911).";
$recordTable{QSeries}[84][0][2] = "Reserved for future use (SBC core GCID).";
$recordTable{QSeries}[85][0][2] = "Reserved for future use.";
$recordTable{QSeries}[86][0][2] = "Indicates the point from which the call was disconnected. Valid values are source, destination and internal.";
$recordTable{QSeries}[87][0][2] = "Indicates all hunt attempts made, regardless of reason.";
$recordTable{QSeries}[88][0][2] = "Call is dropped due to session-layer limiting on endpoint, endpoint-group, realm or system level. It specifies at what level it was limited and what policy was applied (drop or respond).";
$recordTable{QSeries}[89][0][2] = "When the SBC drops a call because outbound call limits were exceeded, this field contains the cause code that appeared in the Reason header of the 503 response to the INVITE for the dropped call.";
$recordTable{QSeries}[90][0][2] = "This field identifies the type of object on which the limits were configured.";
$recordTable{QSeries}[91][0][2] = "Together, fields 91 and 92 identify the object for which outbound call limits were configured.";
$recordTable{QSeries}[92][0][2] = "Together, fields 91 and 92 identify the object for which outbound call limits were configured.";
$recordTable{QSeries}[93][0][2] = "This field contains the name of the rate limit profile assigned to the object on which the limits were configured.";
$recordTable{QSeries}[94][0][2] = "Calling party (source) media port number.";
$recordTable{QSeries}[95][0][2] = "Called party (destination) media port number.";
$recordTable{QSeries}[96][0][2] = "Media IPv4 or IPV6 address for the source realm.";
$recordTable{QSeries}[97][0][2] = "Media port number allocated on the source realm.";
$recordTable{QSeries}[98][0][2] = "Media IPv4 or IPV6 address for the destination realm.";
$recordTable{QSeries}[99][0][2] = "Media port number allocated on the destination realm.";
$recordTable{QSeries}[100][0][2] = "Source trunk group context.";
$recordTable{QSeries}[101][0][2] = "Destination trunk group context.";
$recordTable{QSeries}[102][0][2] = "Contents of SIP P-Charging-Vector header, if present, on leg 1.";
$recordTable{QSeries}[103][0][2] = "Contents of SIP P-Charging-Vector header, if present, on leg 2.";
$recordTable{QSeries}[104][0][2] = "Contents of SIP P-Access-Network-Info header, if present, on leg 1.";
$recordTable{QSeries}[105][0][2] = "Contents of SIP P-Access-Network-Info header, if present, on leg 2.";
$recordTable{QSeries}[106][0][2] = "Start time of the call, in millisecond precision. Time when the 200 OK message is received for SIP calls.";
$recordTable{QSeries}[107][0][2] = "End time of the call, in millisecond precision.";
$recordTable{QSeries}[108][0][2] = "Local routing number (rn parameter), if present, and only if an npdi parameter is also present and indicates that a Number Portability (NP) database dip has already occurred.";
$recordTable{QSeries}[109][0][2] = "The number of media lines (m-lines) present in the SDP.";
$recordTable{QSeries}[110][0][2] = "Original user part from the From URI in the ingress INVITE message.";
$recordTable{QSeries}[111][0][2] = "User part from the FROM URI in the egress INVITE message.";
$recordTable{QSeries}[112][0][2] = "Original user part from the PAID URI in the ingress INVITE message.";
$recordTable{QSeries}[113][0][2] = "User part from the From PAID URI in the egress INVITE message.";
$recordTable{QSeries}[114][0][2] = "Privacy support for SIP calls (Draft-01 support and RFC 3325 support). This field indicates whether privacy has been applied to the call and the type of privacy applied.";
$recordTable{QSeries}[115][0][2] = "Original Request-URI user part in the ingress INVITE message.";
$recordTable{QSeries}[116][0][2] = "Manipulated Request-URI user part in the egress INVITE message.";
$recordTable{QSeries}[117][0][2] = "Indicates the status of SIP local REFER call transfer processing if it is in use.";
$recordTable{QSeries}[118][0][2] = "Response code text in SIP response corresponding to the code in field 45.";
$recordTable{QSeries}[119][0][2] = "Response code text in SIP response corresponding to the code in field 75.";
$recordTable{QSeries}[120][0][2] = "Charge Number from the ingress P-Charge- Info Header, if the P-Charge-Info Header is present, or the Charge Number from the ingress ISUP body.";
$recordTable{QSeries}[121][0][2] = "Nature of address of the Charge Number from the ingress P-Charge-Info Header, if the P- Charge-Info Header is present, or the Nature of address of the Charge Number from the ingress ISUP body.";
$recordTable{QSeries}[122][0][2] = "Numbering Plan Indicator of the Charge Number from the ingress P-Charge-Info Header, if the P-Charge-Info Header is present, or the Numbering Plan Indicator of the Charge Number from the ingress ISUP body.";
$recordTable{QSeries}[123][0][2] = "Specifies the connect date and time for the call segment in an interim CDR, in millisecond precision.";
$recordTable{QSeries}[124][0][2] = "Specifies the duration in seconds for the segment of the call reported by the interim CDR, in millisecond precision.";
$recordTable{QSeries}[125][0][2] = "For the source leg, the fraction of RTP data packets from the endpoint lost since the beginning of reception, expressed as a fixed point number with the binary point at the left edge of the field.";
$recordTable{QSeries}[126][0][2] = "For the source leg, the fraction of RTP data packets from the endpoint that have been discarded since the beginning of reception, due to late or early arrival, under-run or overflow at the receiving jitter buffer.";
$recordTable{QSeries}[127][0][2] = "For the source leg, the fraction of RTP data packets within burst periods since the beginning of reception that were either lost or discarded.";
$recordTable{QSeries}[128][0][2] = "For the source leg, the fraction of RTP data packets within inter-burst gaps since the beginning of reception that were either lost or discarded.";
$recordTable{QSeries}[129][0][2] = "For the source leg, the mean duration of the burst periods that have occurred since the beginning of reception, in millisecond precision.";
$recordTable{QSeries}[130][0][2] = "For the source leg, the mean duration of the gap periods that have occurred since the beginning of reception, in millisecond precision.";
$recordTable{QSeries}[131][0][2] = "For the source leg, in millisecond precision.";
$recordTable{QSeries}[132][0][2] = "For the source leg, the most recently estimated end system delay, in millisecond precision.";
$recordTable{QSeries}[133][0][2] = "For the source leg, the gap threshold used for the report block to determine if a gap exists.";
$recordTable{QSeries}[134][0][2] = "For the source leg, the size of the jitter buffer as it dynamically adjusts in response to varying levels of jitter.";
$recordTable{QSeries}[135][0][2] = "For the source leg, the implementation specific adjustment rate of the jitter buffer in adaptive mode.";
$recordTable{QSeries}[136][0][2] = "For the source leg, the voice quality metric describing the segment of the call that is carried over this RTP session.";
$recordTable{QSeries}[137][0][2] = "For the source leg, the estimated mean opinion score for conversational quality (MOS-CQ) including the effects of delay and other effects that would affect conversational quality.";
$recordTable{QSeries}[138][0][2] = "For the source leg, the current nominal jitter buffer delay for packets that arrive exactly on time, in millisecond precision.";
$recordTable{QSeries}[139][0][2] = "For the source leg, the current maximum jitter buffer delay corresponding to the earliest arriving packet that would not be discarded, in millisecond precision.";
$recordTable{QSeries}[140][0][2] = "For the source leg, the absolute maximum delay that the adaptive jitter buffer can reach under worst case conditions, in millisecond precision.";
$recordTable{QSeries}[141][0][2] = "For the destination leg, the fraction of RTP data packets from the endpoint lost since the beginning of reception, expressed as a fixed point number with the binary point at the left edge of the field.";
$recordTable{QSeries}[142][0][2] = "For the destination leg, the fraction of RTP data packets from the endpoint that have been discarded since the beginning of reception, due to late or early arrival, under- run or overflow at the receiving jitter buffer.";
$recordTable{QSeries}[143][0][2] = "For the destination leg, the fraction of RTP data packets within burst periods since the beginning of reception that were either lost or discarded.";
$recordTable{QSeries}[144][0][2] = "For the destination leg, the fraction of RTP data packets within inter-burst gaps since the beginning of reception that were either lost or discarded.";
$recordTable{QSeries}[145][0][2] = "For the destination leg, the mean duration of the burst periods that have occurred since the beginning of reception, in millisecond precision.";
$recordTable{QSeries}[146][0][2] = "For the destination leg, the mean duration of the gap periods that have occurred since the beginning of reception, in millisecond precision.";
$recordTable{QSeries}[147][0][2] = "For the destination leg, the most recently calculated round trip time between RTP interfaces, in millisecond precision.";
$recordTable{QSeries}[148][0][2] = "For the destination leg, the most recently estimated end system delay, in millisecond precision.";
$recordTable{QSeries}[149][0][2] = "For the destination leg, the gap threshold used for the report block to determine if a gap exists. The recommended value is 16, which corresponds to a burst period having a minimum density of 6.25% of lost or discarded packets.";
$recordTable{QSeries}[150][0][2] = "For the destination leg, the size of the jitter buffer as it dynamically adjusts in response to varying levels of jitter.";
$recordTable{QSeries}[151][0][2] = "For the destination leg, the implementation specific adjustment rate of the jitter buffer in adaptive mode.";
$recordTable{QSeries}[152][0][2] = "For the destination leg, the voice quality metric describing the segment of the call that is carried over this RTP session.";
$recordTable{QSeries}[153][0][2] = "For the destination leg, the estimated mean opinion score for conversational quality (MOS-CQ) including the effects of delay and other effects that would affect conversational quality.";
$recordTable{QSeries}[154][0][2] = "For the destination leg, the current nominal jitter buffer delay for packets that arrive exactly on time, in millisecond precision.";
$recordTable{QSeries}[155][0][2] = "For the destination leg, the current maximum jitter buffer delay corresponding to the earliest arriving packet that would not be discarded, in millisecond precision.";
$recordTable{QSeries}[156][0][2] = "For the destination leg, the absolute maximum delay that the adaptive jitter buffer can reach under worst case conditions, in millisecond precision.";
$recordTable{QSeries}[157][0][2] = "Reserved for future use.";
$recordTable{QSeries}[158][0][2] = "Reserved for future use.";
$recordTable{QSeries}[159][0][2] = "Name of cipher-suite accepted on ingress leg.";
$recordTable{QSeries}[160][0][2] = "Name of cipher-suite accepted on egress leg.";
$recordTable{QSeries}[161][0][2] = "Number of packets received that are outside replay window at origination (ingress) leg.";
$recordTable{QSeries}[162][0][2] = "Number of packets received that failed authentication check at origination (ingress) leg.";
$recordTable{QSeries}[163][0][2] = "Number of packets received that experienced cipher failure at origination (ingress) leg.";
$recordTable{QSeries}[164][0][2] = "Number of packets received that are outside replay window at origination (egress) leg.";
$recordTable{QSeries}[165][0][2] = "Number of packets received that failed authentication check at origination (egress) leg.";
$recordTable{QSeries}[166][0][2] = "Number of packets received that experienced cipher failure at origination (egress) leg.";
$recordTable{QSeries}[167][0][2] = "Reserved for future use.";
$recordTable{QSeries}[168][0][2] = "Reserved for future use.";
$recordTable{QSeries}[169][0][2] = "Reserved for future use.";
$recordTable{QSeries}[170][0][2] = "Reserved for future use.";
$recordTable{QSeries}[171][0][2] = "Reserved for future use.";
$recordTable{QSeries}[172][0][2] = "Reserved for future use.";
$recordTable{QSeries}[173][0][2] = "Reserved for future use.";
$recordTable{QSeries}[174][0][2] = "Reserved for future use.";
$recordTable{QSeries}[175][0][2] = "Reserved for future use.";
$recordTable{QSeries}[176][0][2] = "Reserved for future use.";
$recordTable{QSeries}[177][0][2] = "Code indicates whether or not DSP (transcoder) services were used for the call and for what purpose. If the call was rejected the value indicates why.";
$recordTable{QSeries}[178][0][2] = "Contents of the To URI in the outgoing INVITE message.";
$recordTable{QSeries}[179][0][2] = "Contents of the Request-URI in the incoming INVITE message.";
$recordTable{QSeries}[180][0][2] = "RSA for the incoming call in either IPv4 or IPv6 format.";
$recordTable{QSeries}[181][0][2] = "Version of SBC software running.";
$recordTable{QSeries}[182][0][2] = "Contents of the Request-URI in the outgoing INVITE message.";
$recordTable{QSeries}[183][0][2] = "Contents of the From URI in the outgoing INVITE message.";
$recordTable{QSeries}[184][0][2] = "Indicates whether privacy was requested.";
$recordTable{QSeries}[185][0][2] = "The SBC supports two options for privacy support for SIP calls (Draft-01 support and RFC 3325 support), and a third type for H.323 calls. This field indicates whether privacy has been applied to the egress call leg and the type of privacy applied.";
$recordTable{QSeries}[186][0][2] = "Indicates whether privacy was requested for the egress call leg.";
$recordTable{QSeries}[187][0][2] = "The number of packets dropped at the ingress leg by the RTP/SRTP bandwidth policing or video bandwidth policing function during media transmission";
$recordTable{QSeries}[188][0][2] = "The number of packets dropped at the egress leg by the RTP/SRTP bandwidth policing or video bandwidth function during media transmission.";
$recordTable{QSeries}[189][0][2] = "Contents of the full PAID header in the incoming INVITE message.";
$recordTable{QSeries}[190][0][2] = "Indicates the ptime in milliseconds used by the received RTP stream on the source leg.";
$recordTable{QSeries}[191][0][2] = "Indicates the ptime in milliseconds used by the received RTP stream on the destination leg.";
$recordTable{QSeries}[192][0][2] = "In end1 CDRs, lists the FMM profiles invoked during processing of the initial request/ response.";
$recordTable{QSeries}[193][0][2] = "When SIP loose routing is used for a call, this field contains the top-most Route header from the outgoing request.";
$recordTable{QSeries}[194][0][2] = "Reserved for future use.";
$recordTable{QSeries}[195][0][2] = "Reserved for future use.";
$recordTable{QSeries}[196][0][2] = "Reserved for future use.";
$recordTable{QSeries}[197][0][2] = "Reserved for future use.";
$recordTable{QSeries}[198][0][2] = "Reserved for future use.";
$recordTable{QSeries}[199][0][2] = "Indicates the number of re-INVITE requests rejected because configured re-INVITE rate limits were exceeded.";
$recordTable{QSeries}[200][0][2] = "If an Organization header is present in an initial, incoming INVITE request, this field contains up to 31 characters from that header.";
$recordTable{QSeries}[201][0][2] = "Records the final negotiated offer codec for a call. If multiple m-lines are present in the SDP for the call, the fields contain values for each m- line (comma-separated).";
$recordTable{QSeries}[202][0][2] = "Records the final negotiated answer codec for a call. If multiple m-lines are present in the SDP for the call, the fields contain values for each m- line (comma-separated).";
$recordTable{QSeries}[203][0][2] = "Populated if video CAC limits have been applied.";
$recordTable{QSeries}[204][0][2] = "Indicates the name of the VMG used to process the call.";
$recordTable{QSeries}[205][0][2] = "Number of bytes received by the source leg during the active session.";
$recordTable{QSeries}[206][0][2] = "Number of bytes received by the destination leg during the active session.";
$recordTable{QSeries}[207][0][2] = "Number of IM messages received from the originator of the session during the active session.";
$recordTable{QSeries}[208][0][2] = "Number of IM messages received from the session destination during the active session.";
$recordTable{QSeries}[209][0][2] = "For MSRP sessions, size of the file transferred using MSRP.";
$recordTable{QSeries}[210][0][2] = "SIP recording profile used for the recording The list of recording session Call IDs if a session is recordesession.";
$recordTable{QSeries}[211][0][2] = "The list of recording session Call IDs if a session is recorded.";
$recordTable{QSeries}[212][0][2] = "Error code if the SBC is unable to establish a recording session with a SIP recording server when a session meets recording criteria.";
$recordTable{QSeries}[213][0][2] = "The UUID value from the X-Genesys-CallUUID header.";



#input:   nothing                        
#output:  array of known record types    
sub CamGetRecordTypes {                  
  return ( sort keys %recordTable );     
}                                        

#input:   recordType                     
#output:  1 if defined, 0 if undefined   
sub CamIsRecordDefined {                 
  if( $recordTable{$_[0]} ) {            
	return ( 1 );                        
  }                                      
  return ( 0 );                          
}                                        

# input:  recordType, fieldNumber        
# output: string describing the field    
sub CamGetFieldName {                    
  return ( $recordTable{$_[0]}[$_[1]][$_[2]][$_[3]] ); 
}                                        

# input:  recordType, fieldNumber  
# output: string describing the field    
sub CamGetFieldNameExtra {                    
  return ( $recordTable{$_[0]}[$_[1]][$_[2]][$_[3]] ); 
}                                        


$subFieldTable{"JAPAN"}[1][1][1] = "Protocol Variant ";
$subFieldTable{"JAPAN"}[1][2][1] = "(String up to 16 characters, \"JAPAN\")";
$subFieldTable{"JAPAN"}[2][1][1] = "UUI Sending Count ";
$subFieldTable{"JAPAN"}[2][2][1] = "(1 decimal character, 0-9)";
$subFieldTable{"JAPAN"}[3][1][1] = "UUI Receiving Count ";
$subFieldTable{"JAPAN"}[3][2][1] = "(1 decimal character, 0-9)";
$subFieldTable{"JAPAN"}[4][1][1] = "PSTN additional Calling party's category 1 ";
$subFieldTable{"JAPAN"}[4][2][1] = "(4 hex characters, 0x00-0xFF)	";
$subFieldTable{"JAPAN"}[5][1][1] = "Mobil additional Calling party's category 1 ";
$subFieldTable{"JAPAN"}[5][2][1] = "(4 hex characters, 0x00-0xFF)	";
$subFieldTable{"JAPAN"}[6][1][1] = "Mobil additional Calling party's category 2 ";
$subFieldTable{"JAPAN"}[6][2][1] = "(4 hex characters, 0x00-0xFF)	";
$subFieldTable{"JAPAN"}[7][1][1] = "Mobil additional Calling party's category 3 ";
$subFieldTable{"JAPAN"}[7][2][1] = "(4 hex characters, 0x00-0xFF)	";
$subFieldTable{"JAPAN"}[8][1][1] = "PSTN additional Called party's category 1 ";
$subFieldTable{"JAPAN"}[8][2][1] = "(4 hex characters, 0x00-0xFF)	";
$subFieldTable{"JAPAN"}[9][1][1] = "Mobil additional Called party's category 1 ";
$subFieldTable{"JAPAN"}[9][2][1] = "(4 hex characters, 0x00-0xFF)	";
$subFieldTable{"JAPAN"}[10][1][1] = "Mobil additional Called party's category 2 ";
$subFieldTable{"JAPAN"}[10][2][1] = "(4 hex characters, 0x00-0xFF)	";
$subFieldTable{"JAPAN"}[11][1][1] = "Mobil additional Called party's category 3 ";
$subFieldTable{"JAPAN"}[11][2][1] = "(4 hex characters, 0x00-0xFF)	";
$subFieldTable{"JAPAN"}[12][1][1] = "Called CA ";
$subFieldTable{"JAPAN"}[12][2][1] = "(5 decimal characters, 00000-99999)	";
$subFieldTable{"JAPAN"}[13][1][1] = "Calling CA ";
$subFieldTable{"JAPAN"}[13][2][1] = "(5 decimal characters, 00000-99999)	";
$subFieldTable{"JAPAN"}[14][1][1] = "Called IN Number ";
$subFieldTable{"JAPAN"}[14][2][1] = "(String up to 26 decimal characters)	";
$subFieldTable{"JAPAN"}[15][1][1] = "Called Terminal Type ";
$subFieldTable{"JAPAN"}[15][2][1] = "(1 binary character, 0-1)	";
$subFieldTable{"JAPAN"}[16][1][1] = "Calling Terminal Type ";
$subFieldTable{"JAPAN"}[16][2][1] = "(1 binary character, 0-1)	";
$subFieldTable{"JAPAN"}[17][1][1] = "Unit rate indicator ";
$subFieldTable{"JAPAN"}[17][2][1] = "(4 hex characters, 0x00-0xFF) 	";
$subFieldTable{"JAPAN"}[18][1][1] = "Initial lump-call rate ";
$subFieldTable{"JAPAN"}[18][2][1] = "(Max 2 decimal characters, 0-15)";
$subFieldTable{"JAPAN"}[19][1][1] = "First charging period ";
$subFieldTable{"JAPAN"}[19][2][1] = "(Max 3 decimal characters, 0-999)";
$subFieldTable{"JAPAN"}[20][1][1] = "Second charging period ";
$subFieldTable{"JAPAN"}[20][2][1] = "(Max 3 decimal characters, 0-999)	";
$subFieldTable{"JAPAN"}[21][1][1] = "Third charging period ";
$subFieldTable{"JAPAN"}[21][2][1] = "(Max 3 decimal characters, 0-999)	";
$subFieldTable{"JAPAN"}[22][1][1] = "Fourth charging period ";
$subFieldTable{"JAPAN"}[22][2][1] = "(Max 3 decimal characters, 0-999)";
$subFieldTable{"JAPAN"}[23][1][1] = "Contractor Number ";
$subFieldTable{"JAPAN"}[23][2][1] = "(String up to 16 decimal characters)";
$subFieldTable{"JAPAN"}[24][1][1] = "National/International call ";
$subFieldTable{"JAPAN"}[24][2][1] = "(1 binary character, 0-1)	";
$subFieldTable{"JAPAN"}[25][1][1] = "Original Called IN Number ";
$subFieldTable{"JAPAN"}[25][2][1] = "(String up to 26 decimal characters)";
$subFieldTable{"JAPAN"}[26][1][1] = "Redirecting Number ";
$subFieldTable{"JAPAN"}[26][2][1] = "(String up to 26 decimal characters)";
$subFieldTable{"JAPAN"}[27][1][1] = "Carrier Flag 1 ";
$subFieldTable{"JAPAN"}[27][2][1] = "(4 hex characters, 0x00-0xFF)";
$subFieldTable{"JAPAN"}[28][1][1] = "Carrier Code 1 ";
$subFieldTable{"JAPAN"}[28][2][1] = "(4 decimal characters, 0000-9999)";
$subFieldTable{"JAPAN"}[29][1][1] = "POI-CA Code 1 ";
$subFieldTable{"JAPAN"}[29][2][1] = "(5 decimal characters, 00000-99999)";
$subFieldTable{"JAPAN"}[30][1][1] = "POI Level 1 ";
$subFieldTable{"JAPAN"}[30][2][1] = "(4 hex characters, 0x00-0xFF)";
$subFieldTable{"JAPAN"}[31][1][1] = "Carrier Flag 2 ";
$subFieldTable{"JAPAN"}[31][2][1] = "(4 hex characters, 0x00-0xFF)";
$subFieldTable{"JAPAN"}[32][1][1] = "Carrier Code 2 ";
$subFieldTable{"JAPAN"}[32][2][1] = "(4 decimal characters, 0000-9999)";
$subFieldTable{"JAPAN"}[33][1][1] = "POI-CA Code 2 ";
$subFieldTable{"JAPAN"}[33][2][1] = "(5 decimal characters, 00000-99999)";
$subFieldTable{"JAPAN"}[34][1][1] = "POI Level 2 ";
$subFieldTable{"JAPAN"}[34][2][1] = "(4 hex characters, 0x00-0xFF)";
$subFieldTable{"JAPAN"}[35][1][1] = "Carrier Flag 3 ";
$subFieldTable{"JAPAN"}[35][2][1] = "(4 hex characters, 0x00-0xFF)";
$subFieldTable{"JAPAN"}[36][1][1] = "Carrier Code 3 ";
$subFieldTable{"JAPAN"}[36][2][1] = "(4 decimal characters, 0000-9999)";
$subFieldTable{"JAPAN"}[37][1][1] = "POI-CA Code 3 ";
$subFieldTable{"JAPAN"}[37][2][1] = "(5 decimal characters, 00000-99999)";
$subFieldTable{"JAPAN"}[38][1][1] = "POI Level 3 ";
$subFieldTable{"JAPAN"}[38][2][1] = "(4 hex characters, 0x00-0xFF)";
$subFieldTable{"JAPAN"}[39][1][1] = "Carrier Flag 4 ";
$subFieldTable{"JAPAN"}[39][2][1] = "(4 hex characters, 0x00-0xFF)";
$subFieldTable{"JAPAN"}[40][1][1] = "Carrier Code 4 ";
$subFieldTable{"JAPAN"}[40][2][1] = "(4 decimal characters, 0000-9999)";
$subFieldTable{"JAPAN"}[41][1][1] = "POI-CA Code 4 ";
$subFieldTable{"JAPAN"}[41][2][1] = "(5 decimal characters, 00000-99999)";
$subFieldTable{"JAPAN"}[42][1][1] = "POI Level 4 ";
$subFieldTable{"JAPAN"}[42][2][1] = "(4 hex characters, 0x00-0xFF)";
$subFieldTable{"JAPAN"}[43][1][1] = "Carrier Flag 5 ";
$subFieldTable{"JAPAN"}[43][2][1] = "(4 hex characters, 0x00-0xFF)";
$subFieldTable{"JAPAN"}[44][1][1] = "Carrier Code 5 ";
$subFieldTable{"JAPAN"}[44][2][1] = "(4 decimal characters, 0000-9999)";
$subFieldTable{"JAPAN"}[45][1][1] = "POI-CA Code 5 ";
$subFieldTable{"JAPAN"}[45][2][1] = "(5 decimal characters, 00000-99999)";
$subFieldTable{"JAPAN"}[46][1][1] = "POI Level 5 ";
$subFieldTable{"JAPAN"}[46][2][1] = "(4 hex characters, 0x00-0xFF)";
$subFieldTable{"JAPAN"}[47][1][1] = "Carrier Flag 6 ";
$subFieldTable{"JAPAN"}[47][2][1] = "(4 hex characters, 0x00-0xFF)";
$subFieldTable{"JAPAN"}[48][1][1] = "Carrier Code 6 ";
$subFieldTable{"JAPAN"}[48][2][1] = "(4 decimal characters, 0000-9999)";
$subFieldTable{"JAPAN"}[49][1][1] = "POI-CA Code 6 ";
$subFieldTable{"JAPAN"}[49][2][1] = "(5 decimal characters, 00000-99999)";
$subFieldTable{"JAPAN"}[50][1][1] = "POI Level 6 ";
$subFieldTable{"JAPAN"}[50][2][1] = "(4 hex characters, 0x00-0xFF)";
$subFieldTable{"JAPAN"}[51][1][1] = "Carrier Flag 7 ";
$subFieldTable{"JAPAN"}[51][2][1] = "(4 hex characters, 0x00-0xFF)";
$subFieldTable{"JAPAN"}[52][1][1] = "Carrier Code 7 ";
$subFieldTable{"JAPAN"}[52][2][1] = "(4 decimal characters, 0000-9999)";
$subFieldTable{"JAPAN"}[53][1][1] = "POI-CA Code 7 ";
$subFieldTable{"JAPAN"}[53][2][1] = "(5 decimal characters, 00000-99999)";
$subFieldTable{"JAPAN"}[54][1][1] = "POI Level 7 ";
$subFieldTable{"JAPAN"}[54][2][1] = "(4 hex characters, 0x00-0xFF)";
$subFieldTable{"JAPAN"}[55][1][1] = "SCP Carrier Code ";
$subFieldTable{"JAPAN"}[55][2][1] = "(4 decimal characters, 0000-9999)";
$subFieldTable{"JAPAN"}[56][1][1] = "Additional POI-CA Code ";
$subFieldTable{"JAPAN"}[56][2][1] = "(5 decimal characters, 00000-99999)";
$subFieldTable{"JAPAN"}[57][1][1] = "Transmission Medium Requirement ";
$subFieldTable{"JAPAN"}[57][2][1] = "(4 hex characters, 0x00-0xFF)";
$subFieldTable{"JAPAN"}[58][1][1] = "Calling Party Subaddress ";
$subFieldTable{"JAPAN"}[58][2][1] = "(Up to 40 hex characters or empty)";
$subFieldTable{"JAPAN"}[59][1][1] = "Called Party Subaddress ";
$subFieldTable{"JAPAN"}[59][2][1] = "(Up to 40 hex characters or empty)";
$subFieldTable{"JAPAN"}[60][1][1] = "Cause of No Identification ";
$subFieldTable{"JAPAN"}[60][2][1] = "(up to 3 decimal characters, 0-127)";
$subFieldTable{"JAPAN"}[61][1][1] = "Charge indicator ";
$subFieldTable{"JAPAN"}[61][2][1] = "(1 decimal character 0-3, which is latest charge indicator value in the BCI parameter received by the GSX in the ACM/CPC/ANM or Latest charge indicator value in the BCI parameter sent by the GSX in the ACM/CPC/ANM)";
$subFieldTable{"JAPAN"}[62][1][1] = "Number of CHG Messages ";
$subFieldTable{"JAPAN"}[62][2][1] = "(up to 3 decimal characters, 0-255 )";
$subFieldTable{"JAPAN"}[63][1][1] = "Location ";
$subFieldTable{"JAPAN"}[63][2][1] = "( up to 2 decimal characters, 0-15)";
$subFieldTable{"JAPAN"}[64][1][1] = "Charge Rate Info Type ";
$subFieldTable{"JAPAN"}[64][2][1] = "( 2 hex digits, e.g. 7c, 7d, 7e etc. )";
$subFieldTable{"JAPAN"}[65][1][1] = "Emergency Call Indicator ";
$subFieldTable{"JAPAN"}[65][2][1] = "( 1 character. BOOLEAN indicator, 0 means \"no ECI\", 1 means \"ECI\". Note: \"ECI\" stands for Emergency Call Indicator and indicates if this is an enmergency call )";
$subFieldTable{"JAPAN"}[66][1][1] = "SCP Donor Carrier Code ";
$subFieldTable{"JAPAN"}[66][2][1] = "(4 decimal characters, 0000-9999)";
$subFieldTable{"JAPAN"}[67][1][1] = "SCP Recipient Carrier Code ";
$subFieldTable{"JAPAN"}[67][2][1] = "(4 decimal characters, 0000-9999)";
$subFieldTable{"JAPAN"}[68][1][1] = "Transit Carrier Indicator ";
$subFieldTable{"JAPAN"}[68][2][1] = "(3 characters, hex value, 0x0-0x3)";
$subFieldTable{"JAPAN"}[69][1][1] = "Carrier Flag 8 ";
$subFieldTable{"JAPAN"}[69][2][1] = "(4 hex characters, 0x00-0xFF)";
$subFieldTable{"JAPAN"}[70][1][1] = "Carrier Code 8 ";
$subFieldTable{"JAPAN"}[70][2][1] = "(4 decimal characters, 0000-9999)";
$subFieldTable{"JAPAN"}[71][1][1] = "POI-CA Code 8 ";
$subFieldTable{"JAPAN"}[71][2][1] = "(5 decimal characters, 00000-99999)";
$subFieldTable{"JAPAN"}[72][1][1] = "POI-Level 8 ";
$subFieldTable{"JAPAN"}[72][2][1] = "(4 hex characters, 0x00-0xFF)";
$subFieldTable{"JAPAN"}[73][1][1] = "Carrier Flag 9 ";
$subFieldTable{"JAPAN"}[73][2][1] = "(4 hex characters, 0x00-0xFF)";
$subFieldTable{"JAPAN"}[74][1][1] = "Carrier Code 9 ";
$subFieldTable{"JAPAN"}[74][2][1] = "(4 decimal characters, 0000-9999)";
$subFieldTable{"JAPAN"}[75][1][1] = "POI-CA Code 9 ";
$subFieldTable{"JAPAN"}[75][2][1] = "(5 decimal characters, 00000-99999)";
$subFieldTable{"JAPAN"}[76][1][1] = "POI-Level 9 ";
$subFieldTable{"JAPAN"}[76][2][1] = "(4 hex characters, 0x00-0xFF)";
$subFieldTable{"JAPAN"}[77][1][1] = "Carrier Flag 10 ";
$subFieldTable{"JAPAN"}[77][2][1] = "(4 hex characters, 0x00-0xFF)";
$subFieldTable{"JAPAN"}[78][1][1] = "Carrier Code 10 ";
$subFieldTable{"JAPAN"}[78][2][1] = "(4 decimal characters, 0000-9999)";
$subFieldTable{"JAPAN"}[79][1][1] = "POI-CA Code 10 ";
$subFieldTable{"JAPAN"}[79][2][1] = "(5 decimal characters, 00000-99999)";
$subFieldTable{"JAPAN"}[80][1][1] = "POI-Level 10 ";
$subFieldTable{"JAPAN"}[80][2][1] = "(4 hex characters, 0x00-0xFF)";
$subFieldTable{"JAPAN"}[81][1][1] = "Carrier Flag 11 ";
$subFieldTable{"JAPAN"}[81][2][1] = "(4 hex characters, 0x00-0xFF)";
$subFieldTable{"JAPAN"}[82][1][1] = "Carrier Code 11 ";
$subFieldTable{"JAPAN"}[82][2][1] = "(decimal characters, 0000-9999)";
$subFieldTable{"JAPAN"}[83][1][1] = "POI-CA Code 11 ";
$subFieldTable{"JAPAN"}[83][2][1] = "(5 decimal characters, 00000-99999)";
$subFieldTable{"JAPAN"}[84][1][1] = "POI-Level 11 ";
$subFieldTable{"JAPAN"}[84][2][1] = "(4 hex characters, 0x00-0xFF)";
$subFieldTable{"JAPAN"}[85][1][1] = "Carrier Flag 12 ";
$subFieldTable{"JAPAN"}[85][2][1] = "(4 hex characters, 0x00-0xFF)";
$subFieldTable{"JAPAN"}[86][1][1] = "Carrier Code 12 ";
$subFieldTable{"JAPAN"}[86][2][1] = "(4 decimal characters, 0000-9999)";
$subFieldTable{"JAPAN"}[87][1][1] = "POI-CA Code 12 ";
$subFieldTable{"JAPAN"}[87][2][1] = "(5 decimal characters, 00000-99999)";
$subFieldTable{"JAPAN"}[88][1][1] = "POI-Level 12 ";
$subFieldTable{"JAPAN"}[88][2][1] = "(4 hex characters, 0x00-0xFF)";
$subFieldTable{"JAPAN"}[89][1][1] = "Carrier Flag 13 ";
$subFieldTable{"JAPAN"}[89][2][1] = "(4 hex characters, 0x00-0xFF)";
$subFieldTable{"JAPAN"}[90][1][1] = "Carrier Code 13 ";
$subFieldTable{"JAPAN"}[90][2][1] = "(4 decimal characters, 0000-9999)";
$subFieldTable{"JAPAN"}[91][1][1] = "POI-CA Code 13 ";
$subFieldTable{"JAPAN"}[91][2][1] = "(5 decimal characters, 00000-99999)";
$subFieldTable{"JAPAN"}[92][1][1] = "POI-Level 13 ";
$subFieldTable{"JAPAN"}[92][2][1] = "(4 hex characters, 0x00-0xFF)";
$subFieldTable{"JAPAN"}[93][1][1] = "Carrier Flag 14 ";
$subFieldTable{"JAPAN"}[93][2][1] = "(4 hex characters, 0x00-0xFF)";
$subFieldTable{"JAPAN"}[94][1][1] = "Carrier Code 14 ";
$subFieldTable{"JAPAN"}[94][2][1] = "(4 decimal characters, 0000-9999)";
$subFieldTable{"JAPAN"}[95][1][1] = "POI-CA Code 14 ";
$subFieldTable{"JAPAN"}[95][2][1] = "(5 decimal characters, 00000-99999)";
$subFieldTable{"JAPAN"}[96][1][1] = "POI-Level 14 ";
$subFieldTable{"JAPAN"}[96][2][1] = "(4 hex characters, 0x00-0xFF)";
$subFieldTable{"JAPAN"}[97][1][1] = "Calling Party Number - Screening Indicator ";
$subFieldTable{"JAPAN"}[97][2][1] = "(Enumeration value, 1 decimal character or empty )";
$subFieldTable{"JAPAN"}[98][1][1] = "Calling Party Number- Number Incomplete Indicator";
$subFieldTable{"JAPAN"}[98][2][1] = "(Enumeration value, 1 decimal character or empty)";
$subFieldTable{"JAPAN"}[99][1][1] = "Called Party Number-Internal Network Routing Indicator";
$subFieldTable{"JAPAN"}[99][2][1] = "(Enumeration value, 1 decimal character or empty)";
$subFieldTable{"JAPAN"}[100][1][1] = "Contractor Number-NOA ";
$subFieldTable{"JAPAN"}[100][2][1] = "(Enumeration value, 1 decimal character or empty)";
$subFieldTable{"JAPAN"}[101][1][1] = "Contractor Number-NPI ";
$subFieldTable{"JAPAN"}[101][2][1] = "(Enumeration value, 1 decimal character or empty)";
$subFieldTable{"JAPAN"}[102][1][1] = "Cause Value in ACM/CPG ";
$subFieldTable{"JAPAN"}[102][2][1] = "(Enumeration value, 4 Hex characters or empty)";
$subFieldTable{"JAPAN"}[103][1][1] = "Pre-Subscription Indicator ";
$subFieldTable{"JAPAN"}[103][2][1] = "(1 character, BOOLEAN indicator)";
$subFieldTable{"JAPAN"}[104][1][1] = "ISUP Preference Indicator ";
$subFieldTable{"JAPAN"}[104][2][1] = "(1 decimal character or empty)";
$subFieldTable{"JAPAN"}[105][1][1] = "Charge Information Type ";
$subFieldTable{"JAPAN"}[105][2][1] = "(4 hex characters or empty)";
$subFieldTable{"JAPAN"}[106][1][1] = "Visitor MA parameter ";
$subFieldTable{"JAPAN"}[106][2][1] = "(5 or 6 decimal characters, 00000-999999, or empty)";
$subFieldTable{"JAPAN"}[107][1][1] = "Carrier Information Transfer Message and Type 1 ";
$subFieldTable{"JAPAN"}[107][2][1] = "(1 or 2 decimal characters, or empty)";
$subFieldTable{"JAPAN"}[108][1][1] = "Carrier Information Transfer Message and Type 2 ";
$subFieldTable{"JAPAN"}[108][2][1] = "(1 or 2 decimal characters, or empty)";
$subFieldTable{"JAPAN"}[109][1][1] = "Carrier Information Transfer Message and Type 3 ";
$subFieldTable{"JAPAN"}[109][2][1] = "(1 or 2 decimal characters, or empty)";
$subFieldTable{"JAPAN"}[110][1][1] = "Carrier Information Transfer Message and Type 4 ";
$subFieldTable{"JAPAN"}[110][2][1] = "(1 or 2 decimal characters, or empty)";
$subFieldTable{"JAPAN"}[111][1][1] = "Carrier Information Transfer Message and Type 5 ";
$subFieldTable{"JAPAN"}[111][2][1] = "(1 or 2 decimal characters, or empty)";
$subFieldTable{"JAPAN"}[112][1][1] = "Carrier Information Transfer Message and Type 6 ";
$subFieldTable{"JAPAN"}[112][2][1] = "(1 or 2 decimal characters, or empty)";
$subFieldTable{"JAPAN"}[113][1][1] = "Carrier Information Transfer Message and Type 7 ";
$subFieldTable{"JAPAN"}[113][2][1] = "(1 or 2 decimal characters, or empty)";
$subFieldTable{"JAPAN"}[114][1][1] = "Carrier Information Transfer Message and Type 8 ";
$subFieldTable{"JAPAN"}[114][2][1] = "(1 or 2 decimal characters, or empty)";
$subFieldTable{"JAPAN"}[115][1][1] = "Carrier Information Transfer Message and Type 9 ";
$subFieldTable{"JAPAN"}[115][2][1] = "(1 or 2 decimal characters, or empty)";
$subFieldTable{"JAPAN"}[116][1][1] = "Carrier Information Transfer Message and Type 10 ";
$subFieldTable{"JAPAN"}[116][2][1] = "(1 or 2 decimal characters, or empty)";
$subFieldTable{"JAPAN"}[117][1][1] = "Carrier Information Transfer Message and Type 11 ";
$subFieldTable{"JAPAN"}[117][2][1] = "(1 or 2 decimal characters, or empty)";
$subFieldTable{"JAPAN"}[118][1][1] = "Carrier Information Transfer Message and Type 12 ";
$subFieldTable{"JAPAN"}[118][2][1] = "(1 or 2 decimal characters, or empty)";
$subFieldTable{"JAPAN"}[119][1][1] = "Carrier Information Transfer Message and Type 13 ";
$subFieldTable{"JAPAN"}[119][2][1] = "(1 or 2 decimal characters, or empty)";
$subFieldTable{"JAPAN"}[120][1][1] = "Carrier Information Transfer Message and Type 14 ";
$subFieldTable{"JAPAN"}[120][2][1] = "(1 or 2 decimal characters, or empty)";
$subFieldTable{"JAPAN"}[121][1][1] = "SCP Carrier Code Message and Type ";
$subFieldTable{"JAPAN"}[121][2][1] = "(1 or 2 decimal characters, or empty)";
$subFieldTable{"JAPAN"}[122][1][1] = "Originating CPTT Received ";
$subFieldTable{"JAPAN"}[122][2][1] = "(Boolean, 1 = NTT-GC, 0 = other)";
$subFieldTable{"JAPAN"}[123][1][1] = "Terminating CPTT Received ";
$subFieldTable{"JAPAN"}[123][2][1] = "(Boolean, 1 = NTT-GC, 0 = other)";
$subFieldTable{"JAPAN"}[124][1][1] = "User Specific Called Party Sub Address ";
$subFieldTable{"JAPAN"}[124][2][1] = "(Up to 40 hex characters or empty)";
$subFieldTable{"JAPAN"}[125][1][1] = "User Specific Calling Party Sub Address ";
$subFieldTable{"JAPAN"}[125][2][1] = "(Up to 40 hex characters or empty)";
$subFieldTable{"JAPAN"}[126][1][1] = "Originating Trunkgroup Charge Area ";
$subFieldTable{"JAPAN"}[126][2][1] = "(5 decimal characters, or empty)";
$subFieldTable{"JAPAN"}[127][1][1] = "Terminating Trunkgroup Charge Area ";
$subFieldTable{"JAPAN"}[127][2][1] = "(5 decimal characters, or empty)";
$subFieldTable{"JAPAN"}[128][1][1] = "Called Directory Number NOA ";
$subFieldTable{"JAPAN"}[128][2][1] = "(1-2 char or empty)";
$subFieldTable{"JAPAN"}[129][1][1] = "Called Directory Number NPI ";
$subFieldTable{"JAPAN"}[129][2][1] = "(1-2 char or empty)";
$subFieldTable{"JAPAN"}[130][1][1] = "Called Directory Number INN ";
$subFieldTable{"JAPAN"}[130][2][1] = "(1 char or empty)";
$subFieldTable{"JAPAN"}[131][1][1] = "Called Directory Number ";
$subFieldTable{"JAPAN"}[131][2][1] = "(1-31 chars or empty)";
$subFieldTable{"JAPAN"}[132][1][1] = "Raw Charge Information ";
$subFieldTable{"JAPAN"}[132][2][1] = "(Up to 128 hex characters)";
$subFieldTable{"JAPAN"}[133][1][1] = "FCI ISDN User Part Ind - Iwk Ind ";
$subFieldTable{"JAPAN"}[133][2][1] = "(1 char - 1 char, e.g. 1-1)";
$subFieldTable{"JAPAN"}[134][1][1] = "BCI ISDN User Part Ind - Iwk Ind ";
$subFieldTable{"JAPAN"}[134][2][1] = "(1 char - 1 char, e.g. 1-3 or empty)";
$subFieldTable{"JAPAN"}[135][1][1] = "UUI 1 Msg and Direction - Octet count - Delivery  ";
$subFieldTable{"JAPAN"}[135][2][1] = "(Enumeration value, 1 or 2 chars - up to 3 decimal chars - 1 decimal char, 0-2, e.g. 1-33-0 or empty)";
$subFieldTable{"JAPAN"}[136][1][1] = "UUI 2 Msg and Direction - Octet count - Delivery  ";
$subFieldTable{"JAPAN"}[136][2][1] = "(Enumeration value, 1 or 2 chars - up to 3 decimal chars - 1 decimal char, 0-2, e.g. 1-33-0 or empty)";
$subFieldTable{"JAPAN"}[137][1][1] = "UUI 3 Msg and Direction - Octet count - Delivery  ";
$subFieldTable{"JAPAN"}[137][2][1] = "(Enumeration value, 1 or 2 chars - up to 3 decimal chars - 1 decimal char, 0-2, e.g. 1-33-0 or empty)";
$subFieldTable{"JAPAN"}[138][1][1] = "UUI 4 Msg and Direction - Octet count - Delivery  ";
$subFieldTable{"JAPAN"}[138][2][1] = "(Enumeration value, 1 or 2 chars - up to 3 decimal chars - 1 decimal char, 0-2, e.g. 1-33-0 or empty)";
$subFieldTable{"JAPAN"}[139][1][1] = "UUI 5 Msg and Direction - Octet count - Delivery  ";
$subFieldTable{"JAPAN"}[139][2][1] = "(Enumeration value, 1 or 2 chars - up to 3 decimal chars - 1 decimal char, 0-2, e.g. 1-33-0 or empty)";
$subFieldTable{"JAPAN"}[140][1][1] = "UUI 6 Msg and Direction - Octet count - Delivery  ";
$subFieldTable{"JAPAN"}[140][2][1] = "(Enumeration value, 1 or 2 chars - up to 3 decimal chars - 1 decimal char, 0-2, e.g. 1-33-0 or empty)";
$subFieldTable{"JAPAN"}[141][1][1] = "DPC Code1-Code2-Cgn Member-Cgn Member Ind-IGS/GC-0088 Prefix-ByPass ";
$subFieldTable{"JAPAN"}[141][2][1] = "(up to 5 decimal chars, or empty - up to 5 decimal chars, or empty - 1 decimal char, 0-8, or empty -  1 binary char, 0-1, or empty - 1 binary char, 0-1, or empty - 1 binary char, 0-1, or empty - 1 binary char, 0-1, or empty, e.g. 22222-11111-3-1-0-0-0 or empty)";
$subFieldTable{"JAPAN"}[142][1][1] = "JTI Cgn LS Subs-Cd LS Subs-ByPass-IGS/GC-Cd Member-Cd Member Ind ";
$subFieldTable{"JAPAN"}[142][2][1] = "(1 binary char, 0-1, or empty - 1 binary char, 0-1, or empty - 1 binary char, 0-1, or empty - 1 binary char, 0-1, or empty - 1 decimal char, 0-8, or empty - 1 binary char, 0-1, or empty, e.g. -0-0-0-2-1 or 1----- or empty)";
$subFieldTable{"JAPAN"}[143][1][1] = "Carrier Information Transfer Message and Type 15 ";
$subFieldTable{"JAPAN"}[143][2][1] = "(1 or 2 decimal characters, or empty)";
$subFieldTable{"JAPAN"}[144][1][1] = "Carrier Flag 15 ";
$subFieldTable{"JAPAN"}[144][2][1] = "(4 hex characters, 0x00-0xFF)";
$subFieldTable{"JAPAN"}[145][1][1] = "Carrier Code 15 ";
$subFieldTable{"JAPAN"}[145][2][1] = "(4 decimal characters, 0000-9999)";
$subFieldTable{"JAPAN"}[146][1][1] = "POI-CA Code 15 ";
$subFieldTable{"JAPAN"}[146][2][1] = "(5 decimal characters, 00000-99999)";
$subFieldTable{"JAPAN"}[147][1][1] = "POI-Level 15 ";
$subFieldTable{"JAPAN"}[147][2][1] = "(4 hex characters, 0x00-0xFF)";
$subFieldTable{"JAPAN"}[148][1][1] = "Carrier Information Transfer Message and Type 16 ";
$subFieldTable{"JAPAN"}[148][2][1] = "(1 or 2 decimal characters, or empty)";
$subFieldTable{"JAPAN"}[149][1][1] = "Carrier Flag 16 ";
$subFieldTable{"JAPAN"}[149][2][1] = "(4 hex characters, 0x00-0xFF)";
$subFieldTable{"JAPAN"}[150][1][1] = "Carrier Code 16 ";
$subFieldTable{"JAPAN"}[150][2][1] = "(4 decimal characters, 0000-9999)";
$subFieldTable{"JAPAN"}[151][1][1] = "POI-CA Code 16 ";
$subFieldTable{"JAPAN"}[151][2][1] = "(5 decimal characters, 00000-99999)";
$subFieldTable{"JAPAN"}[152][1][1] = "POI-Level 16 ";
$subFieldTable{"JAPAN"}[152][2][1] = "(4 hex characters, 0x00-0xFF)";
$subFieldTable{"JAPAN"}[153][1][1] = "Carrier Information Transfer Message and Type 17 ";
$subFieldTable{"JAPAN"}[153][2][1] = "(1 or 2 decimal characters, or empty)";
$subFieldTable{"JAPAN"}[154][1][1] = "Carrier Flag 17 ";
$subFieldTable{"JAPAN"}[154][2][1] = "(4 hex characters, 0x00-0xFF)";
$subFieldTable{"JAPAN"}[155][1][1] = "Carrier Code 17 ";
$subFieldTable{"JAPAN"}[155][2][1] = "(4 decimal characters, 0000-9999)";
$subFieldTable{"JAPAN"}[156][1][1] = "POI-CA Code 17 ";
$subFieldTable{"JAPAN"}[156][2][1] = "(5 decimal characters, 00000-99999)";
$subFieldTable{"JAPAN"}[157][1][1] = "POI-Level 17 ";
$subFieldTable{"JAPAN"}[157][2][1] = "(4 hex characters, 0x00-0xFF)";
$subFieldTable{"JAPAN"}[158][1][1] = "Carrier Information Transfer Message and Type 18 ";
$subFieldTable{"JAPAN"}[158][2][1] = "(1 or 2 decimal characters, or empty)";
$subFieldTable{"JAPAN"}[159][1][1] = "Carrier Flag 18 ";
$subFieldTable{"JAPAN"}[159][2][1] = "(4 hex characters, 0x00-0xFF)";
$subFieldTable{"JAPAN"}[160][1][1] = "Carrier Code 18 ";
$subFieldTable{"JAPAN"}[160][2][1] = "(4 decimal characters, 0000-9999)";
$subFieldTable{"JAPAN"}[161][1][1] = "POI-CA Code 18 ";
$subFieldTable{"JAPAN"}[161][2][1] = "(5 decimal characters, 00000-99999)";
$subFieldTable{"JAPAN"}[162][1][1] = "POI-Level 18 ";
$subFieldTable{"JAPAN"}[162][2][1] = "(4 hex characters, 0x00-0xFF)";
$subFieldTable{"JAPAN"}[163][1][1] = "Carrier Information Transfer Message and Type 19 ";
$subFieldTable{"JAPAN"}[163][2][1] = "(1 or 2 decimal characters, or empty)";
$subFieldTable{"JAPAN"}[164][1][1] = "Carrier Flag 19 ";
$subFieldTable{"JAPAN"}[164][2][1] = "(4 hex characters, 0x00-0xFF)";
$subFieldTable{"JAPAN"}[165][1][1] = "Carrier Code 19 ";
$subFieldTable{"JAPAN"}[165][2][1] = "(4 decimal characters, 0000-9999)";
$subFieldTable{"JAPAN"}[166][1][1] = "POI-CA Code 19 ";
$subFieldTable{"JAPAN"}[166][2][1] = "(5 decimal characters, 00000-99999)";
$subFieldTable{"JAPAN"}[167][1][1] = "POI-Level 19 ";
$subFieldTable{"JAPAN"}[167][2][1] = "(4 hex characters, 0x00-0xFF)";
$subFieldTable{"JAPAN"}[168][1][1] = "Carrier Information Transfer Message and Type 20 ";
$subFieldTable{"JAPAN"}[168][2][1] = "(1 or 2 decimal characters, or empty)";
$subFieldTable{"JAPAN"}[169][1][1] = "Carrier Flag 20 ";
$subFieldTable{"JAPAN"}[169][2][1] = "(4 hex characters, 0x00-0xFF)";
$subFieldTable{"JAPAN"}[170][1][1] = "Carrier Code 20 ";
$subFieldTable{"JAPAN"}[170][2][1] = "(4 decimal characters, 0000-9999)";
$subFieldTable{"JAPAN"}[171][1][1] = "POI-CA Code 20 ";
$subFieldTable{"JAPAN"}[171][2][1] = "(5 decimal characters, 00000-99999)";
$subFieldTable{"JAPAN"}[172][1][1] = "POI-Level 20 ";
$subFieldTable{"JAPAN"}[172][2][1] = "(4 hex characters, 0x00-0xFF)";
$subFieldTable{"JAPAN"}[173][1][1] = "Own Carrier Code matches received in IAM ";
$subFieldTable{"JAPAN"}[173][2][1] = "(1 char, 1 or 0, 1 indicates own carrier found in recieved IAM)";
$subFieldTable{"JAPAN"}[174][1][1] = "ACM/CPG Cause Coding Standard - Location ";
$subFieldTable{"JAPAN"}[174][2][1] = "(1 dec char - 1 or 2 dec chars, e.g. 1-1 or empty)";
$subFieldTable{"JAPAN"}[175][1][1] = "REL Cause Coding Standard ";
$subFieldTable{"JAPAN"}[175][2][1] = "(1 dec chars)";
$subFieldTable{"JAPAN"}[176][1][1] = "ACM/CPG Message Rcvd ";
$subFieldTable{"JAPAN"}[176][2][1] = "(Boolean value, 1 or empty)";
$subFieldTable{"JAPAN"}[177][1][1] = "Calling Party Subaddress AFI Code ";
$subFieldTable{"JAPAN"}[177][2][1] = "(2 hex characters or empty)";
$subFieldTable{"JAPAN"}[178][1][1] = "Called Party Subaddress AFI Code ";
$subFieldTable{"JAPAN"}[178][2][1] = "(2 hex characters or empty)";
$subFieldTable{"JAPAN"}[179][1][1] = "Unrecognized Type Calling Party Subaddress ";
$subFieldTable{"JAPAN"}[179][2][1] = "(1 char (0-7) - Up to 40 chars, e.g. 3-12345 or empty)";
$subFieldTable{"JAPAN"}[180][1][1] = "Unrecognized Type Called Party Subaddress ";
$subFieldTable{"JAPAN"}[180][2][1] = "(1 char (0-7) - Up to 40 chars, e.g. 3-12345 or empty)";
$subFieldTable{"JAPAN"}[181][1][1] = "ANM to CPG conversion applied ";
$subFieldTable{"JAPAN"}[181][2][1] = "(Boolean value, 1 or empty)";

$subFieldTable{"SIP"}[1][1][1] = "Protocol Variant ";
$subFieldTable{"SIP"}[1][2][1] = "(String up to 16 characters, e.g. \"SIP\")";
$subFieldTable{"SIP"}[2][1][1] = "Call ID ";
$subFieldTable{"SIP"}[2][2][1] = "(variable length string , for e.g. 44-871244022@sylcs.sonusnet.com)";
$subFieldTable{"SIP"}[3][1][1] = "From Field ";
$subFieldTable{"SIP"}[3][2][1] = "(variable length string. For e.g.: 3211941116@10.99.55.6)	";
$subFieldTable{"SIP"}[4][1][1] = "To Field ";
$subFieldTable{"SIP"}[4][2][1] = "(variable length string. For e.g.: 2971612002@10.20.9.73)";
$subFieldTable{"SIP"}[5][1][1] = "Redirect Attempt Count ";
$subFieldTable{"SIP"}[5][2][1] = "( number of times that the call was redirected before being connected, a decimal number 0-255 )";
$subFieldTable{"SIP"}[6][1][1] = "Reserved";
$subFieldTable{"SIP"}[6][2][1] = "(this field is always empty, in order to keep subsequence sub-fields aligned with SIP-T subfields ) ";
$subFieldTable{"SIP"}[7][1][1] = "Display name of SIP URI PAI header ";
$subFieldTable{"SIP"}[7][2][1] = "( string of up to 48 char,  e.g. Unavailable, Anonymous, Coin line/payphone, etc. ";
$subFieldTable{"SIP"}[8][1][1] = "User Parameter of P-K-CallForwardingLast Header ";
$subFieldTable{"SIP"}[8][2][1] = "(string of up to 24 chars. e.g. \"john_doe\", \"joe1234\",\"978654321\", etc. )";
$subFieldTable{"SIP"}[9][1][1] = "Userinfo and Hostname of SIP Request URI Header  ";
$subFieldTable{"SIP"}[9][2][1] = "( string of up to 256 chars or empty. E.g.  \"john@somewhere.com\", \"joe123@4.3.2.1\",  \"978654321@anywhere.com\", \"+1987654321@3.2.4.5\", etc. )";
$subFieldTable{"SIP"}[10][1][1] = "Userinfo and Hostname of SIP URI PAI header   ";
$subFieldTable{"SIP"}[10][2][1] = "( string of up to 128 characters or empty ) ";
$subFieldTable{"SIP"}[11][1][1] = "Username parameter of the Proxy-Authorization header  ";
$subFieldTable{"SIP"}[11][2][1] = "( string of up to 20 chars or empty. E.g. \"tst1234\" )";
$subFieldTable{"SIP"}[12][1][1] = "Displayname of Tel URI PAI header ";
$subFieldTable{"SIP"}[12][2][1] = "( string of up   to 11 chars or empty . E.g. \"9786543210\", etc. )";
$subFieldTable{"SIP"}[13][1][1] = "INVITE Contact header ";
$subFieldTable{"SIP"}[13][2][1] = "( string of up to 128 chars   or empty. E.g. john@somewhere.com\", \"joe123@4.3.2.1\",  \"978654321@anywhere.com\", \"+1987654321@3.2.4.5\", etc.)";
$subFieldTable{"SIP"}[14][1][1] = "200OK-INVITE Contact header ";
$subFieldTable{"SIP"}[14][2][1] = "(string of up to 128   chars or empty. E.g. john@somewhere.com\", \"joe123@4.3.2.1\",  \"978654321@anywhere.com\", \"+1987654321@3.2.4.5\", etc. )";
$subFieldTable{"SIP"}[15][1][1] = "Redirecting Reason Parameter of P-K-CallForwardOriginal  header ";
$subFieldTable{"SIP"}[15][2][1] = "(string of up to 4 chars or empty. E.g. \"cfb\",   \"cfnr\", \"cfu\", \"cda\", \"cdi\", \"msnr\", etc. )";
$subFieldTable{"SIP"}[16][1][1] = "Userinfo of Tel URI PAI header ";
$subFieldTable{"SIP"}[16][2][1] = "(string of up to 127 characters   or empty. E.g \"tel:9876543210\", \"tel:+8105030450095@phone-context=example.com\", etc. )";
$subFieldTable{"SIP"}[17][1][1] = "Contractor Number value of P-Sig-Info header ";
$subFieldTable{"SIP"}[17][2][1] = "(string of up to 16 characters or, empty. E.g.\"0311112222\", \"9876543210654321\", etc. )";
$subFieldTable{"SIP"}[18][1][1] = "ACK Received for 200 OK ";
$subFieldTable{"SIP"}[18][2][1] = "( 1 - yes, 0 or empty - no )";
$subFieldTable{"SIP"}[19][1][1] = "Status Msg for Call Release ";
$subFieldTable{"SIP"}[19][2][1] = "( string of up to 3 chars or empty  e.g. 400 - 700, 703, BYE, CAN )";
$subFieldTable{"SIP"}[20][1][1] = "Reason Header value Q850 ";
$subFieldTable{"SIP"}[20][2][1] = "( string of up to 3 chars or empty   e.g.  1-127 )";
$subFieldTable{"SIP"}[21][1][1] = "NAPT Status of the SIP SG for Signaling ";
$subFieldTable{"SIP"}[21][2][1] = "(0 or 1)";
$subFieldTable{"SIP"}[22][1][1] = "NAPT Status of the SIP SG for Media ";
$subFieldTable{"SIP"}[22][2][1] = "(0 or 1)";
$subFieldTable{"SIP"}[23][1][1] = "Original Peer SDP Address for NAPT ";
$subFieldTable{"SIP"}[23][2][1] = "( ipAddr in dotted decimal format)";
$subFieldTable{"SIP"}[24][1][1] = "UUI Sending Count ";
$subFieldTable{"SIP"}[24][2][1] = "( 0..99 or empty)";
$subFieldTable{"SIP"}[25][1][1] = "UUI Receiving Count ";
$subFieldTable{"SIP"}[25][2][1] = "(0..99 or empty)";
$subFieldTable{"SIP"}[26][1][1] = "Service Information ";
$subFieldTable{"SIP"}[26][2][1] = "(3 decimal characters, 1-255, note if there is no service information the filed will be blank)    ";
$subFieldTable{"SIP"}[27][1][1] = "ICID ";
$subFieldTable{"SIP"}[27][2][1] = "( string of up to 256 characters or empty e.g.  icid-value=3cbeb620-0001-1000-00-0000-10-6b-00-02-20; )";
$subFieldTable{"SIP"}[28][1][1] = "Generated Host ";
$subFieldTable{"SIP"}[28][2][1] = "( string of up to 64 characters or empty e.g.  icid-generated-at=10.10.10.10)";
$subFieldTable{"SIP"}[29][1][1] = "Originating IOI ";
$subFieldTable{"SIP"}[29][2][1] = "(  string of up to 64 characters or empty e.g.  orig-ioi=home.net)";
$subFieldTable{"SIP"}[30][1][1] = "Terminating IOI ";
$subFieldTable{"SIP"}[30][2][1] = "(  string of up to 64 characters or empty e.g.  term-ioi=term.net)";
$subFieldTable{"SIP"}[31][1][1] = "P-K-Adn Header Number ";
$subFieldTable{"SIP"}[31][2][1] = "(1-31 or empty)";
$subFieldTable{"SIP"}[32][1][1] = "IP Address for FQDN calls or IP address of route header selected as next hop";
$subFieldTable{"SIP"}[32][2][1] = "";
$subFieldTable{"SIP"}[33][1][1] = "Transport Protocol ";
$subFieldTable{"SIP"}[33][2][1] = "(enum   0 unknown transport  1- udp  2- tcp  3- tcp/tls 4- sctp)";
$subFieldTable{"SIP"}[34][1][1] = "Direct Media Call ";
$subFieldTable{"SIP"}[34][2][1] = "(enum  0- Media flow through the GSX/NBS  1- Direct Media)";
$subFieldTable{"SIP"}[35][1][1] = "Inbound SMM Indicator ";
$subFieldTable{"SIP"}[35][2][1] = "( value  0- No SIP Message Manipulation  1- Successful SIP Message Manipulation  2- SIP Message Manipulation Error)";
$subFieldTable{"SIP"}[36][1][1] = "Outbound SMM Indicator ";
$subFieldTable{"SIP"}[36][2][1] = "( value 0- No SIP Message Manipulation  1- Successful SIP Message Manipulation  2- SIP Message Manipulation Error)";
$subFieldTable{"SIP"}[37][1][1] = "Originating Charge Area ";
$subFieldTable{"SIP"}[37][2][1] = "( string of exactly 5 chars 00000-99999 or empty )";
$subFieldTable{"SIP"}[38][1][1] = "Terminating Charge Area ";
$subFieldTable{"SIP"}[38][2][1] = "( string of exactly 5 chars 00000-99999 or empty )";
$subFieldTable{"SIP"}[39][1][1] = "Feature Tag in Contact Header ";
$subFieldTable{"SIP"}[39][2][1] = "( string of up to 200 chars   or empty. E.g. \"\"+g.3gpp.cs-voice\", \"+g.3gpp.app_ref=\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-is\"\", etc.)";
$subFieldTable{"SIP"}[40][1][1] = "Feature Tag in Accept-Contact Header ";
$subFieldTable{"SIP"}[40][2][1] = "( string of up to 200 chars   or empty. E.g. \"+g.3gpp.cs-voice\", \"+g.3gpp.app_ref=\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-is\"\", etc.)";
$subFieldTable{"SIP"}[41][1][1] = "P-Charging-Function-Address ";
$subFieldTable{"SIP"}[41][2][1] = "(string upto 1024 chars or empty E.g.  ccf=195.1.1.1;ecf=196.1.1.1)";
$subFieldTable{"SIP"}[42][1][1] = "P-Called-Party-Id";
$subFieldTable{"SIP"}[42][2][1] = "";
$subFieldTable{"SIP"}[43][1][1] = "P-Visited-Network-Id";
$subFieldTable{"SIP"}[43][2][1] = "";
$subFieldTable{"SIP"}[44][1][1] = "Direct Media with NAPT Call ";
$subFieldTable{"SIP"}[44][2][1] = "(enum 0- Media flow through the GSX/NBS or it is plain Direct Media  1- Direct Media with NAPT)";
$subFieldTable{"SIP"}[45][1][1] = "Ingress SMM Profile Name ";
$subFieldTable{"SIP"}[45][2][1] = "( string upto 24 chars or empty )";
$subFieldTable{"SIP"}[46][1][1] = "Egress SMM Profile Name ";
$subFieldTable{"SIP"}[46][2][1] = "( string upto 24 chars or empty )";
$subFieldTable{"SIP"}[47][1][1] = "P-Access-Network-Information header";
$subFieldTable{"SIP"}[47][2][1] = "";
$subFieldTable{"SIP"}[48][1][1] = "IMS Node functionality";
$subFieldTable{"SIP"}[48][2][1] = "";
$subFieldTable{"SIP"}[49][1][1] = "IMS node role";
$subFieldTable{"SIP"}[49][2][1] = "";
$subFieldTable{"SIP"}[50][1][1] = "IMS Use PcfaCcf";
$subFieldTable{"SIP"}[50][2][1] = "";
$subFieldTable{"SIP"}[51][1][1] = "P-CSCF calling party";
$subFieldTable{"SIP"}[51][2][1] = "";
$subFieldTable{"SIP"}[52][1][1] = "P-CSCF called party";
$subFieldTable{"SIP"}[52][2][1] = "";
$subFieldTable{"SIP"}[53][1][1] = "ICE used on Call ";
$subFieldTable{"SIP"}[53][2][1] = "(Boolean value, 0 or 1)";
$subFieldTable{"SIP"}[54][1][1] = "ICE Complete - Time-stamp when ICE Completes ";
$subFieldTable{"SIP"}[54][2][1] = "(mm/dd/yyyy hh:mm:ss.s)(GMT))";
$subFieldTable{"SIP"}[55][1][1] = "Transit IOI List";
$subFieldTable{"SIP"}[55][2][1] = "";
$subFieldTable{"SIP"}[56][1][1] = "Loop Back Ravel Call ";
$subFieldTable{"SIP"}[56][2][1] = "";
$subFieldTable{"SIP"}[57][1][1] = "Optimal Media Routing Applied";
$subFieldTable{"SIP"}[57][2][1] = "";
$subFieldTable{"SIP"}[58][1][1] = "IMS PAI Service Header";
$subFieldTable{"SIP"}[58][2][1] = "";
$subFieldTable{"SIP"}[59][1][1] = "Feature-Caps header";
$subFieldTable{"SIP"}[59][2][1] = "";
$subFieldTable{"SIP"}[60][1][1] = "Called Asserted Identity";
$subFieldTable{"SIP"}[60][2][1] = "";
$subFieldTable{"SIP"}[61][1][1] = "NNI-Type ";
$subFieldTable{"SIP"}[61][2][1] = "(size 1)";
$subFieldTable{"SIP"}[62][1][1] = "Neighbour Address ";
$subFieldTable{"SIP"}[62][2][1] = "(size 39)";
$subFieldTable{"SIP"}[63][1][1] = "Relationship mode ";
$subFieldTable{"SIP"}[63][2][1] = "(size 1)";
$subFieldTable{"SIP"}[64][1][1] = "Session direction ";
$subFieldTable{"SIP"}[64][2][1] = "(size 1)";
$subFieldTable{"SIP"}[65][1][1] = "SMM CDR Field 1 ";
$subFieldTable{"SIP"}[65][2][1] = "(size 256)";
$subFieldTable{"SIP"}[66][1][1] = "SMM CDR Field 2 ";
$subFieldTable{"SIP"}[66][2][1] = "(size 256)";
$subFieldTable{"SIP"}[67][1][1] = "SMM CDR Field 3 ";
$subFieldTable{"SIP"}[67][2][1] = "(size 256)";
$subFieldTable{"SIP"}[68][1][1] = "SMM CDR Field 4 ";
$subFieldTable{"SIP"}[68][2][1] = "(size 256)";
$subFieldTable{"SIP"}[69][1][1] = "SMM CDR Field 5 ";
$subFieldTable{"SIP"}[69][2][1] = "(size 256)";
$subFieldTable{"SIP"}[70][1][1] = "Origination ID ";
$subFieldTable{"SIP"}[70][2][1] = "( A globally unique string corresponding to a Universally Unique Identifier (UUID)(RFC 4122).The purpose of the unique origination identifier is to assign an opaque identifier corresponding to the service provider-initiated calls themselves, customers, classes of devices, or other groupings that a service provider might want to use for determining things such as reputation or trace back identification of customers or gateways. Max Length: 36)";
$subFieldTable{"SIP"}[71][1][1] = "STI Service Type ";
$subFieldTable{"SIP"}[71][2][1] = "(Secure Telephone Identity Service Type. Values: 0 - None, 1 - Signing, 2 - Verification, 3 - Tagging. Max Length: 1)";
$subFieldTable{"SIP"}[72][1][1] = "STI Service Status ";
$subFieldTable{"SIP"}[72][2][1] = "(Secure Telephone Identity Service Status. Values: 0 - None, 1 - Success, 2 - Failure. Max Length: 1)";
$subFieldTable{"SIP"}[73][1][1] = "STI Reason Code ";
$subFieldTable{"SIP"}[73][2][1] = "(Secure Telephone Identity SIP Reason Code. SIP reason code corresponding to the STI Service. Format: String of 3 chars. Max Length:3)";

$subFieldTable{"SIP-T"}[1][1][1] = "Protocol Variant ";
$subFieldTable{"SIP-T"}[1][2][1] = "(String up to 16 characters, e.g. \"SIP-T\") ";
$subFieldTable{"SIP-T"}[2][1][1] = "Call ID ";
$subFieldTable{"SIP-T"}[2][2][1] = "(variable length string , for e.g. 44-871244022@sylcs.sonusnet.com) ";
$subFieldTable{"SIP-T"}[3][1][1] = "From Field ";
$subFieldTable{"SIP-T"}[3][2][1] = "(variable length string. For e.g.: 3211941116@10.99.55.6)   ";
$subFieldTable{"SIP-T"}[4][1][1] = "To Field ";
$subFieldTable{"SIP-T"}[4][2][1] = "(variable length string. For e.g.: 2971612002@10.20.9.73) ";
$subFieldTable{"SIP-T"}[5][1][1] = "Redirect Attempt Count ";
$subFieldTable{"SIP-T"}[5][2][1] = "(decimal, range 0..255) ";
$subFieldTable{"SIP-T"}[6][1][1] = "SIP-T Version ";
$subFieldTable{"SIP-T"}[6][2][1] = "(Variable length string which contains SIP-T mode and version number)";
$subFieldTable{"SIP-T"}[7][1][1] = "Display name of SIP URI PAI header ";
$subFieldTable{"SIP-T"}[7][2][1] = "( string of up to 48 characters, e.g. Unavailable, Anonymous, Coin line/payphone, etc.)";
$subFieldTable{"SIP-T"}[8][1][1] = "User Parameter of P-K-CallForwardingLast Header ";
$subFieldTable{"SIP-T"}[8][2][1] = "( string of up to 24 chars. e.g. \"john_doe\", \"joe1234\", \"978654321\", etc. )";
$subFieldTable{"SIP-T"}[9][1][1] = "Userinfo and Hostname of SIP Request URI Header  ";
$subFieldTable{"SIP-T"}[9][2][1] = "( string of up to 256 chars or empty. E.g.  \"john@somewhere.com\", \"joe123@4.3.2.1\",  \"978654321@anywhere.com\", \"+1987654321@3.2.4.5\", etc. )";
$subFieldTable{"SIP-T"}[10][1][1] = "Userinfo and Hostname of SIP URI PAI header   ";
$subFieldTable{"SIP-T"}[10][2][1] = "( string of up to 128 characters or empty ) ";
$subFieldTable{"SIP-T"}[11][1][1] = "Username parameter of the Proxy-Authorization header  ";
$subFieldTable{"SIP-T"}[11][2][1] = "( string of up to 20 chars or empty. E.g. \"tst1234\" )";
$subFieldTable{"SIP-T"}[12][1][1] = "Displayname of Tel URI PAI header ";
$subFieldTable{"SIP-T"}[12][2][1] = "( string of up   to 11 chars or empty . E.g. \"9786543210\", etc. )";
$subFieldTable{"SIP-T"}[13][1][1] = "INVITE Contact header ";
$subFieldTable{"SIP-T"}[13][2][1] = "( string of up to 128 chars   or empty. E.g. john@somewhere.com\", \"joe123@4.3.2.1\",  \"978654321@anywhere.com\", \"+1987654321@3.2.4.5\", etc.)";
$subFieldTable{"SIP-T"}[14][1][1] = "200OK-INVITE Contact header ";
$subFieldTable{"SIP-T"}[14][2][1] = "(string of up to 128   chars or empty. E.g. john@somewhere.com\", \"joe123@4.3.2.1\",  \"978654321@anywhere.com\", \"+1987654321@3.2.4.5\", etc. )";
$subFieldTable{"SIP-T"}[15][1][1] = "Redirecting Reason Parameter of P-K-CallForwardOriginal  header ";
$subFieldTable{"SIP-T"}[15][2][1] = "(string of up to 4 chars or empty. E.g. \"cfb\",   \"cfnr\", \"cfu\", \"cda\", \"cdi\", \"msnr\", etc. )";
$subFieldTable{"SIP-T"}[16][1][1] = "Userinfo of Tel URI PAI header ";
$subFieldTable{"SIP-T"}[16][2][1] = "(string of up to 127 characters   or empty. E.g \"tel:9876543210\", \"tel:+8105030450095@phone-context=example.com\", etc. )";
$subFieldTable{"SIP-T"}[17][1][1] = "Contractor Number value of P-Sig-Info header ";
$subFieldTable{"SIP-T"}[17][2][1] = "(string of up to 16 characters or, empty. E.g. \"0311112222\", \"9876543210654321\", etc. )			   ";
$subFieldTable{"SIP-T"}[18][1][1] = "ACK Received for 200 OK ";
$subFieldTable{"SIP-T"}[18][2][1] = "( 1 - yes, 0 or empty - no )";
$subFieldTable{"SIP-T"}[19][1][1] = "Status Msg for Call Release ";
$subFieldTable{"SIP-T"}[19][2][1] = "( string of up to 3 chars or empty  e.g. 400 - 700, 703, BYE, CAN )";
$subFieldTable{"SIP-T"}[20][1][1] = "Reason Header value Q850 ";
$subFieldTable{"SIP-T"}[20][2][1] = "( string of up to 3 chars or empty  e.g.  1-127 )";
$subFieldTable{"SIP-T"}[21][1][1] = "NAPT Status of the SIP SG for Signaling ";
$subFieldTable{"SIP-T"}[21][2][1] = "(0 or 1)";
$subFieldTable{"SIP-T"}[22][1][1] = "NAPT Status of the SIP SG for Media ";
$subFieldTable{"SIP-T"}[22][2][1] = "(0 or 1)";
$subFieldTable{"SIP-T"}[23][1][1] = "Original Peer SDP Address for NAPT ";
$subFieldTable{"SIP-T"}[23][2][1] = "( ipAddr in dotted decimal format)";
$subFieldTable{"SIP-T"}[24][1][1] = "UUI Sending Count ";
$subFieldTable{"SIP-T"}[24][2][1] = "( 0..99 or empty)";
$subFieldTable{"SIP-T"}[25][1][1] = "UUI Receiving Count ";
$subFieldTable{"SIP-T"}[25][2][1] = "(0..99 or empty)";
$subFieldTable{"SIP-T"}[26][1][1] = "Service Information ";
$subFieldTable{"SIP-T"}[26][2][1] = "(3 decimal characters, 1-255, or empty) ";
$subFieldTable{"SIP-T"}[27][1][1] = "ICID ";
$subFieldTable{"SIP-T"}[27][2][1] = "( string of up to 64 characters or empty )";
$subFieldTable{"SIP-T"}[28][1][1] = "Generated Host ";
$subFieldTable{"SIP-T"}[28][2][1] = "( string of up to 64 characters or empty )";
$subFieldTable{"SIP-T"}[29][1][1] = "Originating IOI ";
$subFieldTable{"SIP-T"}[29][2][1] = "(  string of up to 64 characters or empty )";
$subFieldTable{"SIP-T"}[30][1][1] = "Terminating IOI ";
$subFieldTable{"SIP-T"}[30][2][1] = "(  string of up to 64 characters or empty )";
$subFieldTable{"SIP-T"}[31][1][1] = "P-K-Adn Header Number ";
$subFieldTable{"SIP-T"}[31][2][1] = "(1-31 or empty)";
$subFieldTable{"SIP-T"}[32][1][1] = "IP Address for FQDN calls or IP address of route header selected as next hop";
$subFieldTable{"SIP-T"}[32][2][1] = "";
$subFieldTable{"SIP-T"}[33][1][1] = "Transport Protocol ";
$subFieldTable{"SIP-T"}[33][2][1] = "(enum  0- unknown transport  1- udp  2- tcp 3- tcp/tls 4- sctp)";
$subFieldTable{"SIP-T"}[34][1][1] = "Direct Media Call ";
$subFieldTable{"SIP-T"}[34][2][1] = "(value  0- Media flow through the GSX/NBS  1- Direct Media)";
$subFieldTable{"SIP-T"}[35][1][1] = "Inbound SMM Status ";
$subFieldTable{"SIP-T"}[35][2][1] = "(value 0- No SIP Message Manipulation  1- Successful SIP Message Manipulation  2- SIP Message Manipulation Error)";
$subFieldTable{"SIP-T"}[36][1][1] = "Outbound SMM Status ";
$subFieldTable{"SIP-T"}[36][2][1] = "(value 0- No SIP Message Manipulation  1- Successful SIP Message Manipulation  2- SIP Message Manipulation Error)";
$subFieldTable{"SIP-T"}[37][1][1] = "Originating Charge Area ";
$subFieldTable{"SIP-T"}[37][2][1] = "( string of exactly 5 chars 00000-99999 or empty )";
$subFieldTable{"SIP-T"}[38][1][1] = "Terminating Charge Area ";
$subFieldTable{"SIP-T"}[38][2][1] = "( string of exactly 5 chars 00000-99999 or empty )";
$subFieldTable{"SIP-T"}[39][1][1] = "Feature Tag in Contact Header ";
$subFieldTable{"SIP-T"}[39][2][1] = "( string of up to 200 chars   or empty. E.g. \"+g.3gpp.cs-voice\", \"+g.3gpp.app_ref=\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-is\"\", etc.)";
$subFieldTable{"SIP-T"}[40][1][1] = "Feature Tag in Accept-Contact Header ";
$subFieldTable{"SIP-T"}[40][2][1] = "( string of up to 200 chars   or empty. E.g. \"+g.3gpp.cs-voice\", \"+g.3gpp.app_ref=\"urn%3Aurn-7%3A3gpp-application.ims.iari.gsma-is\"\", etc.)";
$subFieldTable{"SIP-T"}[41][1][1] = "P-Charging-Function-Address ";
$subFieldTable{"SIP-T"}[41][2][1] = "(string up to 1024 chars or empty E.g.  ccf=195.1.1.1;ecf=196.1.1.1)";
$subFieldTable{"SIP-T"}[42][1][1] = "P-Called-Party-Id";
$subFieldTable{"SIP-T"}[42][2][1] = "";
$subFieldTable{"SIP-T"}[43][1][1] = "P-Visited-Network-Id";
$subFieldTable{"SIP-T"}[43][2][1] = "";
$subFieldTable{"SIP-T"}[44][1][1] = "Direct Media with NAPT Call ";
$subFieldTable{"SIP-T"}[44][2][1] = "(0 or 1)  0 Media flow through the GSX/NBS or it is plain Direct Media  1 Direct Media with NAPT";
$subFieldTable{"SIP-T"}[45][1][1] = "Ingress SMM Profile Name ";
$subFieldTable{"SIP-T"}[45][2][1] = "( string upto 24 chars or empty )";
$subFieldTable{"SIP-T"}[46][1][1] = "Egress SMM Profile Name ";
$subFieldTable{"SIP-T"}[46][2][1] = "( string upto 24 chars or empty )";
$subFieldTable{"SIP-T"}[47][1][1] = "P-Access-Network-Information header";
$subFieldTable{"SIP-T"}[47][2][1] = "";
$subFieldTable{"SIP-T"}[48][1][1] = "IMS Node functionality";
$subFieldTable{"SIP-T"}[48][2][1] = "";
$subFieldTable{"SIP-T"}[49][1][1] = "IMS node role";
$subFieldTable{"SIP-T"}[49][2][1] = "";
$subFieldTable{"SIP-T"}[50][1][1] = "IMS Use PcfaCcf";
$subFieldTable{"SIP-T"}[50][2][1] = "";
$subFieldTable{"SIP-T"}[51][1][1] = "P-CSCF calling party";
$subFieldTable{"SIP-T"}[51][2][1] = "";
$subFieldTable{"SIP-T"}[52][1][1] = "P-CSCF called party";
$subFieldTable{"SIP-T"}[52][2][1] = "";
$subFieldTable{"SIP-T"}[53][1][1] = "ICE used on Call";
$subFieldTable{"SIP-T"}[53][2][1] = "";
$subFieldTable{"SIP-T"}[54][1][1] = "ICE Complete - Time-stamp when ICE Completes";
$subFieldTable{"SIP-T"}[54][2][1] = "";
$subFieldTable{"SIP-T"}[55][1][1] = "Transit IOI";
$subFieldTable{"SIP-T"}[55][2][1] = "";
$subFieldTable{"SIP-T"}[56][1][1] = "Loop Back Ravel Call ";
$subFieldTable{"SIP-T"}[56][2][1] = "";
$subFieldTable{"SIP-T"}[57][1][1] = "Optimal Media Routing Applied";
$subFieldTable{"SIP-T"}[57][2][1] = "";
$subFieldTable{"SIP-T"}[58][1][1] = "IMS PAI Service Header";
$subFieldTable{"SIP-T"}[58][2][1] = "";
$subFieldTable{"SIP-T"}[59][1][1] = "Feature-Caps header";
$subFieldTable{"SIP-T"}[59][2][1] = "";
$subFieldTable{"SIP-T"}[60][1][1] = "Called Asserted Identity";
$subFieldTable{"SIP-T"}[60][2][1] = "";
$subFieldTable{"SIP-T"}[61][1][1] = "NNI-Type ";
$subFieldTable{"SIP-T"}[61][2][1] = "(size 1)";
$subFieldTable{"SIP-T"}[62][1][1] = "Neighbour Address ";
$subFieldTable{"SIP-T"}[62][2][1] = "(size 39)";
$subFieldTable{"SIP-T"}[63][1][1] = "Relationship mode ";
$subFieldTable{"SIP-T"}[63][2][1] = "(size 1)";
$subFieldTable{"SIP-T"}[64][1][1] = "Session direction ";
$subFieldTable{"SIP-T"}[64][2][1] = "(size 1)";
$subFieldTable{"SIP-T"}[65][1][1] = "SMM CDR Field 1 ";
$subFieldTable{"SIP-T"}[65][2][1] = "(size 256)";
$subFieldTable{"SIP-T"}[66][1][1] = "SMM CDR Field 2 ";
$subFieldTable{"SIP-T"}[66][2][1] = "(size 256)";
$subFieldTable{"SIP-T"}[67][1][1] = "SMM CDR Field 3 ";
$subFieldTable{"SIP-T"}[67][2][1] = "(size 256)";
$subFieldTable{"SIP-T"}[68][1][1] = "SMM CDR Field 4 ";
$subFieldTable{"SIP-T"}[68][2][1] = "(size 256)";
$subFieldTable{"SIP-T"}[69][1][1] = "SMM CDR Field 5 ";
$subFieldTable{"SIP-T"}[69][2][1] = "(size 256)";
$subFieldTable{"SIP-T"}[70][1][1] = "Origination ID ";
$subFieldTable{"SIP-T"}[70][2][1] = "( A globally unique string corresponding to a Universally Unique Identifier (UUID)(RFC 4122).The purpose of the unique origination identifier is to assign an opaque identifier corresponding to the service provider-initiated calls themselves, customers, classes of devices, or other groupings that a service provider might want to use for determining things such as reputation or trace back identification of customers or gateways. Max Length: 36)";
$subFieldTable{"SIP-T"}[71][1][1] = "STI Service Type ";
$subFieldTable{"SIP-T"}[71][2][1] = "(Secure Telephone Identity Service Type. Values: 0 - None, 1 - Signing, 2 - Verification, 3 - Tagging. Max Length: 1)";
$subFieldTable{"SIP-T"}[72][1][1] = "STI Service Status ";
$subFieldTable{"SIP-T"}[72][2][1] = "(Secure Telephone Identity Service Status. Values: 0 - None, 1 - Success, 2 - Failure. Max Length: 1)";
$subFieldTable{"SIP-T"}[73][1][1] = "STI Reason Code ";
$subFieldTable{"SIP-T"}[73][2][1] = "(Secure Telephone Identity SIP Reason Code. SIP reason code corresponding to the STI Service. Format: String of 3 chars. Max Length:3)";

$subFieldTable{"GSX2GSX"}[1][1][1] = "Protocol Variant ";
$subFieldTable{"GSX2GSX"}[1][2][1] = "(Always \"GSX2GSX\")";
$subFieldTable{"GSX2GSX"}[2][1][1] = "Gateway to Gateway Handle ";
$subFieldTable{"GSX2GSX"}[2][2][1] = "(32-bit hexadecimal number)";

$subFieldTable{"BT-IUP"}[1][1][1] = "Protocol Variant ";
$subFieldTable{"BT-IUP"}[1][2][1] = "(\"BT-IUP\")";
$subFieldTable{"BT-IUP"}[2][1][1] = "Presentation Number Nature of Address ";
$subFieldTable{"BT-IUP"}[2][2][1] = "(3 decimal character, 0-999)";
$subFieldTable{"BT-IUP"}[3][1][1] = "Presentation Number Address Restriction Ind ";
$subFieldTable{"BT-IUP"}[3][2][1] = "(1 decimal character, 0-3)";
$subFieldTable{"BT-IUP"}[4][1][1] = "Presentation Number Screening Indicator ";
$subFieldTable{"BT-IUP"}[4][2][1] = "(1 decimal character, 0-3)";
$subFieldTable{"BT-IUP"}[5][1][1] = "Presentation Number Digits ";
$subFieldTable{"BT-IUP"}[5][2][1] = "(String up to 31 decimal characters)";
$subFieldTable{"BT-IUP"}[6][1][1] = "Partial CLI Digits ";
$subFieldTable{"BT-IUP"}[6][2][1] = "(String up to 18 decimal characters)";
$subFieldTable{"BT-IUP"}[7][1][1] = "Release Reason ";
$subFieldTable{"BT-IUP"}[7][2][1] = "(3 decimal characters, 0-255)";
$subFieldTable{"BT-IUP"}[8][1][1] = "Malicious Call Trace  ";
$subFieldTable{"BT-IUP"}[8][2][1] = "(3 characters, \"\" or \"MCT\")";
$subFieldTable{"BT-IUP"}[9][1][1] = "Service Information ";
$subFieldTable{"BT-IUP"}[9][2][1] = "(3 decimal characters, 1-255, note if there is no service information the filed will be blank) ";

$subFieldTable{"UKISUP"}[1][1][1] = "Protocol Variant ";
$subFieldTable{"UKISUP"}[1][2][1] = "(\"UKISUP\") ";
$subFieldTable{"UKISUP"}[2][1][1] = "Presentation Number Nature of Address ";
$subFieldTable{"UKISUP"}[2][2][1] = "(3 decimal character, 0-999) ";
$subFieldTable{"UKISUP"}[3][1][1] = "Presentation Number Address Restriction Ind ";
$subFieldTable{"UKISUP"}[3][2][1] = "(1 decimal character, 0-3) ";
$subFieldTable{"UKISUP"}[4][1][1] = "Presentation Number Screening Indicator ";
$subFieldTable{"UKISUP"}[4][2][1] = "(1 decimal character, 0-3) ";
$subFieldTable{"UKISUP"}[5][1][1] = "Presentation Number Digits ";
$subFieldTable{"UKISUP"}[5][2][1] = "(String up to 31 decimal characters) ";
$subFieldTable{"UKISUP"}[6][1][1] = "Partial CLI Digits ";
$subFieldTable{"UKISUP"}[6][2][1] = "(String up to 18 decimal characters) ";
$subFieldTable{"UKISUP"}[7][1][1] = "Release Reason ";
$subFieldTable{"UKISUP"}[7][2][1] = "(3 decimal characters, 0-255) ";
$subFieldTable{"UKISUP"}[8][1][1] = "Malicious Call Trace  ";
$subFieldTable{"UKISUP"}[8][2][1] = "(3 characters, \"\" or \"MCT\") ";
$subFieldTable{"UKISUP"}[9][1][1] = "Service Information ";
$subFieldTable{"UKISUP"}[9][2][1] = "(3 decimal characters, 1-255, note if there is no service information the field will be blank ) ";

$subFieldTable{"ARGENTINA"}[1][1][1] = "Protocol Variant ";
$subFieldTable{"ARGENTINA"}[1][2][1] = "(Always \"ARGENTINA\") ";
$subFieldTable{"ARGENTINA"}[2][1][1] = "Exchange Identification ";
$subFieldTable{"ARGENTINA"}[2][2][1] = "(4 hex characters, 0x0-0x3FFF)";
$subFieldTable{"ARGENTINA"}[3][1][1] = "Route Identification ";
$subFieldTable{"ARGENTINA"}[3][2][1] = "(4 hex characters, 0x0-0xFFFF)";
$subFieldTable{"ARGENTINA"}[4][1][1] = "Circuit Identity ";
$subFieldTable{"ARGENTINA"}[4][2][1] = "(4 hex characters, 0x0-0xFFFF)";

$subFieldTable{"ARGENTINAIDT"}[1][1][1] = "Protocol Variant ";
$subFieldTable{"ARGENTINAIDT"}[1][2][1] = "(Always \"ARGENTINAIDT\") ";
$subFieldTable{"ARGENTINAIDT"}[2][1][1] = "Exchange Identification ";
$subFieldTable{"ARGENTINAIDT"}[2][2][1] = "(4 hex characters, 0x0-0x3FFF)";
$subFieldTable{"ARGENTINAIDT"}[3][1][1] = "Route Identification ";
$subFieldTable{"ARGENTINAIDT"}[3][2][1] = "(4 hex characters, 0x0-0xFFFF)";
$subFieldTable{"ARGENTINAIDT"}[4][1][1] = "Circuit Identity ";
$subFieldTable{"ARGENTINAIDT"}[4][2][1] = "(4 hex characters, 0x0-0xFFFF)";

$subFieldTable{"INDIA"}[1][1][1] = "Protocol Variant ";
$subFieldTable{"INDIA"}[1][2][1] = "(always \"INDIA\")";
$subFieldTable{"INDIA"}[2][1][1] = "Charge Band ";
$subFieldTable{"INDIA"}[2][2][1] = "(3 decimal characters, 0-255)";

$subFieldTable{"H323"}[1][1][1] = "Protocol Variant ";
$subFieldTable{"H323"}[1][2][1] = "(always \"H323\")";
$subFieldTable{"H323"}[2][1][1] = "H323 Call Identifier ";
$subFieldTable{"H323"}[2][2][1] = "(16 byte hex number)";
$subFieldTable{"H323"}[3][1][1] = "H323 Conference Identifier ";
$subFieldTable{"H323"}[3][2][1] = "(16 byte hex number)";
$subFieldTable{"H323"}[4][1][1] = "H323 Conference Referenece Value - CRV ";
$subFieldTable{"H323"}[4][2][1] = "(2 byte hex number)";

$subFieldTable{"PORTUGAL-ONI"}[1][1][1] = "Protocol Variant ";
$subFieldTable{"PORTUGAL-ONI"}[1][2][1] = "(always \"PORTUGAL-ONI\")";
$subFieldTable{"PORTUGAL-ONI"}[2][1][1] = "Call Indentity ";
$subFieldTable{"PORTUGAL-ONI"}[2][2][1] = "( 8 hex characters, 0x000000-0xFFFFFF";
$subFieldTable{"PORTUGAL-ONI"}[3][1][1] = "Signalling Point Code ";
$subFieldTable{"PORTUGAL-ONI"}[3][2][1] = "( 6 hex characters, 0x0000-0x3FFF";

$subFieldTable{"SLOVAK2"}[1][1][1] = "Protocol Variant ";
$subFieldTable{"SLOVAK2"}[1][2][1] = "(always \"SLOVAK2\")";
$subFieldTable{"SLOVAK2"}[2][1][1] = "Charge Band ";
$subFieldTable{"SLOVAK2"}[2][2][1] = "(3 decimal characters, 0-254)";

$subFieldTable{"RLT"}[1][1][1] = "Feature Identifier ";
$subFieldTable{"RLT"}[2][1][1] = "Number of Sub-Fields to Follow ";
$subFieldTable{"RLT"}[3][1][1] = "IAM GD Billing Number ";
$subFieldTable{"RLT"}[4][1][1] = "IAM GD Universal Access Number ";
$subFieldTable{"RLT"}[5][1][1] = "IAM GD Originating Switch ID ";
$subFieldTable{"RLT"}[6][1][1] = "IAM GD Originating Trunk ID ";
$subFieldTable{"RLT"}[7][1][1] = "Billing FAR GD Billing Number ";
$subFieldTable{"RLT"}[8][1][1] = "Billing FAR GD Universal Access Num ";
$subFieldTable{"RLT"}[9][1][1] = "Billing FAR GD Originating Switch ID ";
$subFieldTable{"RLT"}[10][1][1] = "Billing FAR GD Originating Trunk ID ";
$subFieldTable{"RLT"}[11][1][1] = "Time Elapsed from Rx of AR Setup Msg ";
$subFieldTable{"RLT"}[12][1][1] = "Redirecting FAR GD Billing Number ";
$subFieldTable{"RLT"}[13][1][1] = "Redirecting FAR GD Universal Access Num ";
$subFieldTable{"RLT"}[14][1][1] = "Redirecting FAR GD Originating Switch ID ";
$subFieldTable{"RLT"}[15][1][1] = "Redirecting FAR GD Originating Trunk ID ";
$subFieldTable{"RLT"}[16][1][1] = "Redirecting FAR Called Party Number ";
$subFieldTable{"RLT"}[17][1][1] = "Redirecting FAR Calling Party Number ";
$subFieldTable{"RLT"}[18][1][1] = "Redirecting FAR Charge Number ";
$subFieldTable{"RLT"}[19][1][1] = "Redirecting FAR Originating Line Info ";
$subFieldTable{"RLT"}[20][1][1] = "Redirecting FAR Attempt Failed Counter ";
$subFieldTable{"RLT"}[21][1][1] = "Time Elapsed from Rx of AR Setup Msg ";
$subFieldTable{"RLT"}[22][1][1] = "Time Elapsed from Rx of AR Setup Msg ";
$subFieldTable{"RLT"}[23][1][1] = "Bridging FAR GD Billing Number ";
$subFieldTable{"RLT"}[24][1][1] = "Bridging FAR GD Universal Access Number ";
$subFieldTable{"RLT"}[25][1][1] = "Bridging FAR GD Originating Switch ID ";
$subFieldTable{"RLT"}[26][1][1] = "Bridging FAR GD Originating Trunk ID ";
$subFieldTable{"RLT"}[27][1][1] = "Bridging FAR Called Party Number ";
$subFieldTable{"RLT"}[28][1][1] = "Bridging FAR Calling Party Number ";
$subFieldTable{"RLT"}[29][1][1] = "Bridging FAR Call Reference ";
$subFieldTable{"RLT"}[30][1][1] = "Bridging FAR Attempt Failed Counter ";
$subFieldTable{"RLT"}[31][1][1] = "Time Elapsed from Rx of AR Setup Msg ";
$subFieldTable{"RLT"}[32][1][1] = "Time Elapsed from Rx of AR Setup Msg to ";

$subFieldTable{"REDI"}[1][1][1] = "Feature Identifier ";
$subFieldTable{"REDI"}[2][1][1] = "Number of Sub-Fields to Follow ";
$subFieldTable{"REDI"}[3][1][1] = "Redirecting Number ";
$subFieldTable{"REDI"}[4][1][1] = "Original Redirecting Called Number ";
$subFieldTable{"REDI"}[5][1][1] = "Redirection Reason ";
$subFieldTable{"REDI"}[6][1][1] = "Original Redirection Reason ";
$subFieldTable{"REDI"}[7][1][1] = "Redirection Counter ";
$subFieldTable{"REDI"}[8][1][1] = "Redirecting Number (Addr Pres Rest) ";
$subFieldTable{"REDI"}[9][1][1] = "Redirecting Number (Numbering Plan) ";
$subFieldTable{"REDI"}[10][1][1] = "Redirecting Number (NOA) ";
$subFieldTable{"REDI"}[11][1][1] = "Redirection Number (Number) ";
$subFieldTable{"REDI"}[12][1][1] = "Redirection Number (Numbering Plan) ";
$subFieldTable{"REDI"}[13][1][1] = "Redirection Number (NOA) ";
$subFieldTable{"REDI"}[14][1][1] = "Redirection Capability ";
$subFieldTable{"REDI"}[15][1][1] = "Redirect Forward Inf (Information Type) ";
$subFieldTable{"REDI"}[16][1][1] = "Redirect Forward Inf (Redirection Reason) ";
$subFieldTable{"REDI"}[17][1][1] = "Redirect Forward Inf (Redirection Poss) ";
$subFieldTable{"REDI"}[18][1][1] = "Redirect Backward Inf (Information Type) ";
$subFieldTable{"REDI"}[19][1][1] = "Redirect Backward Inf (Redirection Reason) ";
$subFieldTable{"REDI"}[20][1][1] = "Number of Redirections ";
$subFieldTable{"REDI"}[21][1][1] = "Redirection Executed ";
$subFieldTable{"REDI"}[22][1][1] = "Original Redirecting Called Number (NOA) ";
$subFieldTable{"REDI"}[23][1][1] = "Redirection number presentation indicator ";
$subFieldTable{"REDI"}[24][1][1] = "Call Diversion Information (Redirecting reason) ";
$subFieldTable{"REDI"}[25][1][1] = "Call Diversion Information (Notification  subscription option) ";

$subFieldTable{"SREF"}[1][1][1] = "Feature Identifier ";
$subFieldTable{"SREF"}[2][1][1] = "Number of Sub-Fields to Follow ";
$subFieldTable{"SREF"}[3][1][1] = "Time Elapsed from Receipt of INVITE Msg ";
$subFieldTable{"SREF"}[4][1][1] = "Transferor ";
$subFieldTable{"SREF"}[5][1][1] = "New transfer target ";

$subFieldTable{"SREPL"}[1][1][1] = "Feature Identifier ";
$subFieldTable{"SREPL"}[2][1][1] = "Number of Sub-Fields to Follow ";
$subFieldTable{"SREPL"}[3][1][1] = "Time Elapsed from Receipt of first call's ";
$subFieldTable{"SREPL"}[4][1][1] = "Operation performed on this call's leg ";
$subFieldTable{"SREPL"}[5][1][1] = "This call's leg ID ";
$subFieldTable{"SREPL"}[6][1][1] = "Peer call's GCID ";
$subFieldTable{"SREPL"}[7][1][1] = "Peer call's leg ID ";

$subFieldTable{"SREFREPL"}[1][1][1] = "Feature Identifier ";
$subFieldTable{"SREFREPL"}[2][1][1] = "Number of Sub-Fields to Follow ";
$subFieldTable{"SREFREPL"}[3][1][1] = "Time Elapsed from Receipt of initial ";
$subFieldTable{"SREFREPL"}[4][1][1] = "Operation performed on this call's leg ";
$subFieldTable{"SREFREPL"}[5][1][1] = "This call's leg ID ";
$subFieldTable{"SREFREPL"}[6][1][1] = "Peer call's GCID ";
$subFieldTable{"SREFREPL"}[7][1][1] = "Peer call's leg ID ";

$subFieldTable{"NWXF"}[1][1][1] = "Feature Identifier ";
$subFieldTable{"NWXF"}[2][1][1] = "Number of Sub-Fields to Follow ";
$subFieldTable{"NWXF"}[3][1][1] = "Speed Dial Digits ";
$subFieldTable{"NWXF"}[4][1][1] = "RefTod ";
$subFieldTable{"NWXF"}[5][1][1] = "TermCallType ";



# input:  recordType, fieldNumber        
# output: string describing the field    
sub CamGetSubFieldName {                 
  return( $subFieldTable{$_[0]}[$_[1]][$_[2]][$_[3]] );
}                                        

# input:  recordType, fieldNumber        
# output: string describing the field    
sub CamGetSubFieldNameExtra {                 
  return( $subFieldTable{$_[0]}[$_[1]][$_[2]][$_[3]]);
}                                        

#input:   subFieldType                   
#output:  1 if defined, 0 if undefined   
sub CamIsSubFieldDefined {               
  if( $subFieldTable{$_[0]} ) {          
	return ( 1 );                        
  }                                      
  return ( 0 );                          
}                                        




#  
#  
# The rest of this file has been generated by copying camParser.pl 
#  
#  



###########################################################
# Sonus Networks, Inc.
#
# Marlin Switch
#
# All Rights Reserved.
#
# Module Description:
# 	This script parses GSX generated .ACT files (aka CAM files)
#   and presents a more readable, formatted output.
#
#   This file needs the perl module 'camRecordTable.pm' to run,
#   which is generated by 'camBulder.pl'.
#
#     usage: camParser.pl [options] <data>  -or-  <data> | camParser.pl [options]
#
#	Options added by H.Hamblin on June 6th 2006
#		-a		Prints CDR fields in Automation format
#
#		-d		Prints a decode header for start and end of 
#				individual ACT record
#
#		-r <REC_TYPE>	Allows specified record types to be parsed. 
#				Multiple record types can be seperated by |. 
#
#		-t		Displays raw ACT data
#
#		-u		Do NOT Display "Unknown" before unknown field
#
#		-v <VARIANT>	Displays only the specified variant data 
#                               Must be used in conjunction with -r option.
#
# Author and Date:
# 	Michael Siedzik x8583         Created Aug 29, 2003.
#
###########################################################

use Getopt::Std;
use File::Basename;

package main;

my $myName=basename($0);

getopts("adehstur:v:");

if ($main::opt_h) {
	print "usage: $myName [options] <data>\n";
	print " Options: \n";
	print "      -a              Prints CDR fields in automation format.\n"; 
	print "                        e.g. STOP:F17:Call Direction:\"PSTN-TO-IP\".\n";
	print "      -d              Prints a decode header to mark start and end of individual ACT record.\n";
	print "      -e              Prints extended help for fields, inline with parsed record.\n";
	print "      -s              Prints extended help for all fields with field numbers, for each record type, takes no input. (to support tool autogeneration)\n";
	print "      -r <REC_TYPE>   Only parse specified record type(s) <REC_TYPE> to parsed.\n";
	print "                      Multiple record types can be seperated by \"|\".\n"; 
	print "      -t              Displays raw ACT data as well as parsed output.\n"; 
	print "      -u              Prevents \"Unknown\" being prefixed before unknown parsed fields.\n";
	print "      -v <VARIANT>    Display only the specified variant data if it exists.\n";
	print "                      Must be used in conjunction with -r option\n\n";
	exit 0;
}


if ($main::opt_s) {
  print "\# Support for other tool generation, output of all record types, field number, field extra help.\n";


  @records = ("START", "STOP", "ATTEMPT", "INTERMEDIATE");   # we don't take any stdin input, so we supply the list of records to output statically
  $minIndex = 0; # this is the minimum
  $maxIndex = 500; # this is way over current max, and should mean we catch all, NULLs will terminate loop anyway

  foreach $recordType (@records)     # recordType loop
    {
      print "RECORD: $recordType\n";
      $recordStr = substr($recordType,0,3); # support tool only wants an abbreviated form of record type name indicator
      for ($fieldIndex = 1; $fieldIndex <= $maxIndex; $fieldIndex++) # Field loop
        {

          for ($subFieldIndex = 0; $subFieldIndex <= $maxIndex; $subFieldIndex++) # SubField loop
            {

              $textActual = $recordTable{$recordType}[$fieldIndex][$subFieldIndex][2]; # Where extended help field lives, last index 1 is field name.
              if ($textActual ne "") {
                printf "[%s:%s:%s] %s\n",$recordStr, $fieldIndex, $subFieldIndex, $textActual;
              } else {
                # We are past max field number, as we got a NULL string. break?
              }
              $textActual = ""; # reinitialize for clean comparison

        } # END SubField Loop

        }   # END Field loop

    }  # END recordType loop


  exit 0; # all done with option "-s" lets boogie on outta here.
}

if ($main::opt_r) {
	if (!(($main::opt_r =~ /START/) ||
	       ($main::opt_r =~ /STOP/) ||
	       ($main::opt_r =~ /ATTEMPT/) ||
	       ($main::opt_r =~ /INTERMEDIATE/) ||
	       ($main::opt_r =~ /SW_CHANGE/) ||
	       ($main::opt_r =~ /hunt/) ||
	       ($main::opt_r =~ /interim/) ||
	       ($main::opt_r =~ /start1/) ||
	       ($main::opt_r =~ /end1/)))
	{
		print "Warning: Option -r <record_type> has incorrect Record Type '$main::opt_r'\n";
		print "Valid values are as follows:\n";
		print " 'START'\n 'STOP'\n 'ATTEMPT'\n 'INTERMEDIATE'\n 'SW_CHANGE'\n";
      
		exit 1;
	}
}

if ($main::opt_v) {
	if (($main::opt_v ne "JAPAN") &&
	    ($main::opt_v ne "SIP") &&
	    ($main::opt_v ne "SIP-T") &&
	    ($main::opt_v ne "GSX2GSX") &&
	    ($main::opt_v ne "BT-IUP") &&
	    ($main::opt_v ne "UKISUP") &&
	    ($main::opt_v ne "ARGENTINA") &&
	    ($main::opt_v ne "INDIA") &&
	    ($main::opt_v ne "H323") &&
	    ($main::opt_v ne "PORTUGAL-ONI") &&
	    ($main::opt_v ne "RLT") &&
	    ($main::opt_v ne "REDI") &&
	    ($main::opt_v ne "SREF") &&
	    ($main::opt_v ne "SRP") &&
	    ($main::opt_v ne "NWXF")) 
	{
		print "Warning: Option -v has incorrect Variant string '$main::opt_v'\n";
		print "Valid values are as follows:\n";
		print " 'ARGENTINA'\n 'BT-IUP'\n 'GSX2GSX'\n 'H323'\n 'INDIA'\n 'JAPAN'\n 'NWXF'\n"; 
		print " 'PORTUGAL-ONI'\n 'REDI'\n 'RLT'\n 'SIP'\n 'SIP-T'\n 'SREF'\n 'SRP'\n 'UKISUP'\n\n";
	
		exit 1;
	} 
	elsif (! $main::opt_r)
	{

		# Variant string specified by option -v is valid
		# Ensure option -r is specified. If not then -v <variant> has to be used with -r <record_type>

		print "Warning: Option -v <variant> has to be used in conjunction with -r <record_type>\n";

		exit 1;
	}
}

# Initialise recordNum
$recordNum=0;

# Initilise processingACTFields
$processingACTFields=0;


# read records from standard input
@records = <>;


foreach $record (@records)
{
	# split this record up into fields
	# the delimiter used is comma, so we have to do some tricks
	# to avoid splitting double quote delimited fileds (i.e., PVSD)

    # The use of chomp has been removed because if you have a lot of blank
    # fields at the end of the record the printing stops on the last field
    # which contains a value.
    #chomp($record);

	if (($record =~ /^START/) || 
	    ($record =~ /^STOP/) ||
	    ($record =~ /^EVENT/) ||
	    ($record =~ /^ATTEMPT/) ||
	    ($record =~ /^INTERMEDIATE/) ||
	    ($record =~ /^SW_CHANGE/))
	{ 

		if ($main::opt_t) {
			print "\n\n", $record, "\n\n";
		}

		@fields = split(',', $record);
		$recordNum++;

		chomp($fields[0]);
		
		if (!($main::opt_a)) 
		{
			print "Record $recordNum '$fields[0]'\n";
		}

		$recordType=$fields[0];

		#
		# record type is known, here we go!
		#
		$recordCnt{$fields[0]}++;

		$fieldNum = 0;
		$subfield = 0;

		# set print_record to 1 (true) by default for each record
		$print_record = 1;

		# set print_subfield_only to 0 (false) by default
		$print_subfield_only = 0;

		# If Option -r <record_type> is specified and <record_type> is not equal
		# to the current record defined by $field[0] then set $print_record to 0 (false);
		# print_record is 1 by default
		if (($main::opt_r) && (!($main::opt_r =~ /$fields[0]/)))
		{ 
			$print_record = 0;
		}

		# If Option -v <variant> and option -r <record_type> are specifed
		# then set the $print_subfield_only var to 1 (true)
		if (($main::opt_v) && ($main::opt_r)) 
		{
			$print_subfield_only = 1;
		}
	
		if ($print_record)
		{ 

			if ( ($processingACTFields == 0) && ($main::opt_d) ) {
				print "==================================================================================\n";
				print "CDR \"$fields[0]\" Record - CAMDUMP DECODE BEGIN\n";
				print "==================================================================================\n";
				$processingACTFields=1;
			}

			foreach $field (@fields)
			{
				# Copy $field var to $field_prtStr var. If Option -a is specified then $field_prtStr
				# will be changed to remove quotes. The $field var is checked for quotes later to
				# see if the end of the subfields has been reached.
				#
				$field_prtStr = $field;

				# Option -c specifed so remove quotes from $field_prtStr
				if ($main::opt_a)
				{ 
					$field_prtStr =~ s/\"//g;
				}


				# Check to see if we are parsing subfields...
				#
				if ( $subfield == 0 )
				{
					# 
					# print field number, field name and a colon
					#
					$fieldNum++;

					# Only print if $print_subfield_only is false 
					# OR $fieldNum is 1 i.e. the Record Type field
					#
					if ((! $print_subfield_only ) || ($fieldNum == 1))
                                          {
                                            if ($main::opt_a)
                                              {
                                                printf "\n${recordType}:F%d:%s:", $fieldNum, CamGetFieldName($fields[0],$fieldNum,0,1);	                            
                                              } 
                                            else 
                                              {
                                                printf "\n %3d. %-45s: ", $fieldNum, CamGetFieldName($fields[0],$fieldNum,0,1);	
                                                if ($main::opt_e) 
                                                  {
                                                    printf " \"%s\" : ", CamGetFieldNameExtra($fields[0],$fieldNum,0,2);
                                                  }
                                              }
                                          }
			
					# if this field starts with a double quote,
					# and it doesn't end in a double quote,
					#   then it is the start of a subfield. 
					#
					if ( ( $field =~ m/^\"/ ) && ( $field !~ m/\"$/ || length($field)==1 ) )
					{
						# print <CR> then subfield #1
						$subfield++;
				
						# remove the " to obtain the type of SubField e.g.  "JAPAN
						($ctrlchar, $subfieldType) = split(/\"/, $field, 2);

						# If the $print_subfield_only var is true and option -v <VARIANT> 
						# contains the $subfieldType 
						# OR 
						# option -v is not defined 
						# then print the subfields 
						#
						if (($print_subfield_only && ($main::opt_v =~ /$subfieldType/)) || (! $main::opt_v))
						{
							# Obtain SubField Description, empty if no Description available
						    if( CamIsSubFieldDefined( $subfieldType ) )
							{
							    $subfieldDesc = CamGetSubFieldName($subfieldType,$subfield,1,1);
							}
							else
							{
							    $subfieldDesc = CamGetFieldName($fields[0],$fieldNum,$subfield,1);
							}

							# Option -a specified? 
							if ($main::opt_a) 
							{
								# Print in automation format i.e. without spaces and using '='	
								printf "\n${recordType}:F%d-%d:%s:\"%s\"",$fieldNum,$subfield,$subfieldDesc,$field_prtStr;
							} else {	

                                                          if ($main::opt_e) {
                                                            if (CamGetFieldNameExtra($fields[0],$fieldNum,$subfield,1) ne "") {
                                                              printf "\n     %3d.%-2d %-44s: \"%s\" : %s", $fieldNum, $subfield, $subfieldDesc, CamGetFieldNameExtra($fields[0],$fieldNum,$subfield,2), $field_prtStr;
                                                            } else {
                                                              # This is the first subfield description which is an exception case, go get extended help from other location (subfield method)
                                                              if ( CamIsSubFieldDefined( $subfieldType ) ) {
                                                                $subfieldDescExtra = CamGetSubFieldNameExtra($subfieldType,$subfield,2,1);
                                                              } else {
                                                                $subfieldDescExtra = ""; # just a safety to prevent accidental access of this
                                                              }
                                                              #                                     printf "here-> %s, %s, %s",$subfieldType, $subfield, $subfieldDescExtra;
                                                              printf "\n     %3d.%-2d %-44s: \"%s\" : %s ", $fieldNum, $subfield, $subfieldDesc, $subfieldDescExtra, $field_prtStr;
                                                            }
                                                          } else {
                                                            # legacy behavior no extended help info
                                                            # Print in standard format	
                                                            printf "\n     %3d.%-2d %-44s: %s", $fieldNum, $subfield, $subfieldDesc, $field_prtStr;

                                                          }

							}
						}
					}
					elsif ((! $print_subfield_only ) || ($fieldNum == 1))
					{
						# Nope, just print the field
						if ($main::opt_a) {
							printf "\"%s\"", $field_prtStr;
						} else {
							printf "%s", $field_prtStr;                          
						}
					}
				}
				elsif (($print_subfield_only && ($main::opt_v =~ /$subfieldType/)) || (! $main::opt_v))
				{
					#
					# continue printing subfields
					#
					$subfield++;
					if( CamIsSubFieldDefined( $subfieldType ) )
					{
						$subfieldDesc = CamGetSubFieldName($subfieldType,$subfield,1,1);
                                                if ($main::opt_e) {
                                                  #printf "--- debug --- %s - %s - %s -",$fieldNum,$subfield,$subfieldDesc;
                                                  $subfieldDescExtra = CamGetSubFieldNameExtra($subfieldType,$subfield,2,1);
                                                } else {
                                                  $subfieldDescExtra = ""; # just a safety to prevent accidental access of this
                                                }
                                              } else {
                                                #printf "--- debug --- else %s - %s - %s -",$fieldNum,$subfield,$subfieldDesc;
                                                # Some sub fields do not actually have their own table (Feature ID, Request Latency, etc.)
                                                $subfieldDesc = CamGetFieldNameExtra($fields[0],$fieldNum,$subfield,1);
                                                $subfieldDescExtra = CamGetFieldNameExtra($fields[0],$fieldNum,$subfield,2);
                                              }

					# Is Option -a specified?
					if ($main::opt_a) {
                                          # Print in automation format i.e. without spaces and using '='
                                          printf "\n${recordType}:F%d-%d:%s:\"%s\"",$fieldNum,$subfield,$subfieldDesc, $field_prtStr;	
					} else {
                                          # Print in standard format
                                          if ($main::opt_e) {
                                            printf "\n     %3d.%-2d %-44s: \"%s\" : %s", $fieldNum, $subfield, $subfieldDesc, $subfieldDescExtra, $field_prtStr;
                                          } else {
                                            printf "\n     %3d.%-2d %-44s:  %s", $fieldNum, $subfield, $subfieldDesc, $field_prtStr;
                                          }
					}
			
					# if this field ends with a double quote
					if ( $field =~ m/\"$/ ) {
                                          # then we are done parsing subfields
                                          $subfield = 0;
					}
                                      }
                              }
	
			print "\n";

			if ( ($processingACTFields == 1) && ($main::opt_d) ) {
				print "==================================================================================\n";
				print "CDR \"$fields[0]\" Record - CAMDUMP DECODE END\n";
				print "==================================================================================\n";
				$processingACTFields=0;
			}
		}
	}
    else
    {

        ## First assume this record follows Q Series format.
        ## For Q Series, fields are split with ';'.
        ## Record type is the 39th field ($fields[38]).
        ##
		@fields = split(';', $record);
		$recordType=$fields[38];

        if (($recordType =~ /hunt/) ||
            ($recordType =~ /interim/) ||
            ($recordType =~ /start1/) ||
            ($recordType =~ /end1/))
        {
            if ($main::opt_t) {
                print "\n\n", $record, "\n\n";
            }

            $recordNum++;

            if (!($main::opt_a)) 
            {
                print "Record $recordNum '$recordType'\n";
            }

            #
            # record type is known, here we go!
            #
            $recordCnt{$recordType}++;

            $fieldNum = 0;

            # set print_record to 1 (true) by default for each record
            $print_record = 1;

            # If Option -r <record_type> is specified and <record_type> is not equal
            # to the current record defined by $field[38] then set $print_record to 0 (false);
            # print_record is 1 by default
            if (($main::opt_r) && (!($main::opt_r =~ /$recordType/)))
            {
                $print_record = 0;
            }

            if ($print_record)
            {
                if ( ($processingACTFields == 0) && ($main::opt_d) )
                {
                    print "==================================================================================\n";
                    print "CDR \"$recordType\" Record - CAMDUMP DECODE BEGIN\n";
                    print "==================================================================================\n";
                    $processingACTFields=1;
                }

                foreach $field (@fields)
                {
                    # Copy $field var to $field_prtStr var. If Option -a is specified then $field_prtStr
                    # will be changed to remove quotes. The $field var is checked for quotes later to
                    # see if the end of the subfields has been reached.
                    #
                    $field_prtStr = $field;

                    # Check to see if we are parsing subfields...
                    #
                    if ( $subfield == 0 )
                    {
                        # 
                        # print field number, field name and a colon
                        #
                        $fieldNum++;

                        #If opt_a is set then print in automation format 
                        #else print in regular format.
                        #
                        if ($main::opt_a)
                        {
                            printf "\n${recordType}:F%d:%s:", $fieldNum, CamGetFieldName(QSeries,$fieldNum,0,1);
                            printf "\"%s\"", $field_prtStr;
                        } 
                        else 
                        {
                            printf "\n %3d. %-45s: ", $fieldNum, CamGetFieldName(QSeries,$fieldNum,0,1);	
                            if ($main::opt_e) 
                            {
                                printf " \"%s\" : ", CamGetFieldNameExtra(QSeries,$fieldNum,0,2);
                            }
                            printf "%s", $field_prtStr;                          
                        }
                    }
                }
                print "\n";

                if ( ($processingACTFields == 1) && ($main::opt_d) )
                {
                    print "==================================================================================\n";
                    print "CDR \"$recordType\" Record - CAMDUMP DECODE END\n";
                    print "==================================================================================\n";
                    $processingACTFields=0;
                }
            }
        }
        else
        {
            ## Record is Unknown
            ##
            if (!($main::opt_u))
            {
                printf "Unknown :%s",$record;
                print "\n   ", $record, "\n";
                $recordCnt{"MISC"}++;
            }
            else
            {
                print $record, "\n";
            }
        }
    }
}

if (!($main::opt_a)) 
{
	#
	# Print a little historgram for each record type
	#
	foreach $key (sort keys %recordCnt)
	{
		print $recordCnt{$key}, " ", $key;
		print "s" if ($recordCnt{$key}>1);
		print "\n";
	}
}

print "\n";

exit 0;
